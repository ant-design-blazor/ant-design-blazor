@using AntDesign.Core.JsInterop.Modules.Components
@inherits AntDesignTestBase

@code {

    public PopconfirmTests()
    {
        JSInterop.SetupVoid(JSInteropConstants.AddPreventKeys, _ => true);
        JSInterop.Setup<HtmlElement>(JSInteropConstants.GetDomInfo, _ => true)
        .SetResult(new HtmlElement() { AbsoluteTop = 1, AbsoluteLeft = 1 });
        JSInterop.Setup<OverlayPosition>(JSInteropConstants.OverlayComponentHelper.AddOverlayToContainer, _ => true)
        .SetResult(new OverlayPosition() { Top = 0, Left = 0, ZIndex = 5000, Placement = Placement.BottomLeft });
        JSInterop.SetupVoid(JSInteropConstants.AddElementTo, _ => true);
    }

    [Fact]
    public void Should_not_open_overlay_by_default()
    {
        var cut = Render<AntDesign.Popconfirm>(@<Popconfirm><a>Delete</a></Popconfirm>);
        cut.FindComponent<AntDesign.Internal.Overlay>().MarkupMatches("");
    }

    [Fact]
    public void Should_open_overlay_when_visible_is_true()
    {
        var visible = true; 
        var cut = Render<AntDesign.Popconfirm>(@<Popconfirm Visible="visible" ><a>Delete</a></Popconfirm>);

        cut.FindComponent<AntDesign.Internal.Overlay>().Find(".ant-popconfirm").Should().NotBeNull();
    }

    [Fact]
    public void Should_open_overlay()
    {
        var cut = Render<AntDesign.Popconfirm>(@<Popconfirm><a>Delete</a></Popconfirm>);

        cut.Find("a").Click();

        cut.FindComponent<AntDesign.Internal.Overlay>().Find(".ant-popconfirm").Should().NotBeNull();
    }

    [Fact]
    public void Should_open_overlay_when_visible_is_false_and_trigger_clicked()
    {
        var visible = false;
        var cut = Render<AntDesign.Popconfirm>(@<Popconfirm Visible="visible" ><a>Delete</a></Popconfirm>);

        cut.Find("a").Click();

        cut.FindComponent<AntDesign.Internal.Overlay>().Find(".ant-popconfirm").Should().NotBeNull();
    }

    [Fact]
    public void Should_avoid_visible_onvisiblechange()
    {
        var visible = false;
        var onVisibleChange = (bool v) => { 
            visible = false;
        };
        var cut = Render<AntDesign.Popconfirm>(
            @<Popconfirm Visible="visible" OnVisibleChange="onVisibleChange" >
                <a>Delete</a>
        </Popconfirm>
    );

        cut.Find("a").Click();

        cut.WaitForState(() => cut.Instance.Visible == false);

        cut.FindComponent<AntDesign.Internal.Overlay>().MarkupMatches("");
    }

}
