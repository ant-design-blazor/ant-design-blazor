@using AntDesign.Internal
@using static AntDesign.TextArea;
@inherits AntDesignTestBase	
@code {
    private void SetupJavascript()
    {
        JSInterop.SetupVoid("AntDesign.interop.mentionsHelper.setEditorKeyHandler", _ => true);
    }

    private IRenderedComponent<AntDesign.Mentions> GetStandardRenderSystemUnderTest()
    {
        return Render<AntDesign.Mentions>(
        @<AntDesign.Mentions>
            <AntDesign.MentionsOption Value="testUsername">Test User</AntDesign.MentionsOption>
        </AntDesign.Mentions>
        );
    }

    [Fact]
    public void ItShouldRenderByDefaultWithTextarea()
    {
        SetupJavascript();
        var systemUnderTest = GetStandardRenderSystemUnderTest();

        systemUnderTest.MarkupMatches(@"
            <div class=""ant-mentions"">
                <textarea value="""" class=""rc-textarea"" rows=""3""></textarea>
            </div>
            <div class=""ant-mentions-dropdown ant-mentions-dropdown-placement-bottomLeft ant-mentions-dropdown-hidden""
                style=""position: absolute; display: none;"">
                <li class=""ant-mentions-dropdown-menu-item"">
                    Test User
                </li>
            </div>");
    }

    [Fact]
    public void StandardRender_ShouldCallJavascriptCallbackToDisplayOverlayWhenTypingAtSymbol()
    {
        SetupJavascript();
        var systemUnderTest = GetStandardRenderSystemUnderTest();

        JSInterop.Setup<Double[]>("AntDesign.interop.mentionsHelper.setPopShowFlag", true);

        systemUnderTest.Find("textarea").Input("@");

        JSInterop.VerifyInvoke("AntDesign.interop.mentionsHelper.setPopShowFlag", 1);
    }

    [Fact]
    public void TemplatedRender_ShouldCallJavascriptCallbackToDisplayOverlayWhenTypingAtSymbol()
    {
        SetupJavascript();
        var systemUnderTest = GetStandardRenderSystemUnderTest();

        JSInterop.Setup<Double[]>("AntDesign.interop.mentionsHelper.setPopShowFlag", true);

        systemUnderTest.Find("textarea").Input("@");

        JSInterop.VerifyInvoke("AntDesign.interop.mentionsHelper.setPopShowFlag", 1);
    }

#if NET6_0_OR_GREATER
    private IRenderedComponent<AntDesign.Mentions> GetTemplatedRenderSystemUnderTest()
    {
        JSInterop.Setup<TextAreaInfo>("AntDesign.interop.inputHelper.getTextAreaInfo", _ => true);

        return Render<AntDesign.Mentions>(
            @<AntDesign.Mentions>
                <ChildContent>
                    <AntDesign.MentionsOption Value="testUsername">Test User</AntDesign.MentionsOption>
                </ChildContent>
                <TextareaTemplate>
                    <TextArea RefBack=@context.RefBack
                          OnInput=@context.OnInput
                          BindOnInput=false
                          OnkeyDown=@context.OnKeyDown
                          Value=@context.Value />
                </TextareaTemplate>
            </AntDesign.Mentions>
        );
    }

    [Fact]
    public void ItShouldRenderWithGivenTemplate()
    {
        SetupJavascript();
        var systemUnderTest = GetTemplatedRenderSystemUnderTest();

        systemUnderTest.MarkupMatches(@"
            <div class=""ant-mentions"">
                <div class=""ant-input-textarea "" data-count:ignore>
                    <textarea class=""ant-input"" value:ignore id:ignore style:ignore></textarea>
                </div>
            </div>
            <div class=""ant-mentions-dropdown ant-mentions-dropdown-placement-bottomLeft ant-mentions-dropdown-hidden"" 
                style=""position: absolute; display: none;"">
                <li class=""ant-mentions-dropdown-menu-item"">
                    Test User
                </li>
            </div>");
    }
#endif
}