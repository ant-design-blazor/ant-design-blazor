<?xml version="1.0"?>
<doc>
  <assembly>
    <name>AntDesign</name>
  </assembly>
  <members>
    <member name="E:AntDesign.MessageConfig.OnClose">
      <summary v="2h43or" i="0">
消息关闭时执行回调
</summary>
    </member>
    <member name="E:AntDesign.NotificationConfig.OnClick">
      <summary v="42pkAh" i="0">
点击通知时触发的回调函数
</summary>
    </member>
    <member name="E:AntDesign.NotificationConfig.OnClose">
      <summary v="11YvOG" i="0">
当通知关闭时触发
</summary>
    </member>
    <member name="F:AntDesign.Alert._isClosed">
      <summary v="yW8vK" i="0">
组件是否已关闭的指示器。
</summary>
    </member>
    <member name="F:AntDesign.Alert._isClosing">
      <summary v="1CUgJ3" i="0">
在关闭组件之前，我们设置此指示器以显示关闭动画。
</summary>
    </member>
    <member name="F:AntDesign.AutoComplete`1._optionDataItems">
      <summary v="1EDVo6" i="0">
列表数据收集
</summary>
    </member>
    <member name="F:AntDesign.AutoComplete`1._options">
      <summary v="1TuwMD" i="0">
列表绑定数据源集合
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Closed">
      <summary v="2lNNDv" i="0">
一旦关闭时经历过一次OnAfterRender/OnAfterRenderAsync，就变成此状态
一旦OnAfterRender/OnAfterRenderAsync被体验一次，当关闭时，它变成这种状态
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Closing">
      <summary v="1Mk8P4" i="0">
用于在参数属性中设置，表明组件正在关闭中
用于在参数属性中设置，指示组件正在关闭
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Destroyed">
      <summary v="4HjwoW" i="0">
一旦销毁时经历过一次OnAfterRender，就变成此状态
一旦OnAfterRender/OnAfterRenderAsync在销毁期间体验一次，它就变成这种状态
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Destroying">
      <summary v="10HgBd" i="0">
用于在参数属性中设置、表明组件正则销毁中、
用于在参数属性中设置，指示组件处于常规销毁状态
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Inited">
      <summary v="1e7sQF" i="0">
组件初始化完毕
组件初始化已完成
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Initing">
      <summary v="2Dnf11" i="0">
组件初始化中
正在进行组件初始化
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Opened">
      <summary v="1V4YNr" i="0">
一旦打开时经历过一次OnAfterRender/OnAfterRenderAsync，就变成此状态
一旦组件体验OnAfterRender/OnAfterRenderAsync一旦打开时，它就变成这种状态
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Opening">
      <summary v="1WRA1H" i="0">
用于在参数属性中设置，表明组件正在第一次渲染中
用于在参数属性中设置，指示组件是第一次呈现
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.AbortRetryIgnore">
      <summary v="3dHrPd" i="0">
三个按钮: 中止、重试和忽略
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.OK">
      <summary v="3t6Etb" i="0">
只有一个好按钮
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.OKCancel">
      <summary v="4UZPqN" i="0">
两个按钮: 好和取消
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.RetryCancel">
      <summary v="2JNCgQ" i="0">
两个按钮: 重试和取消
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.YesNo">
      <summary v="4WMXxD" i="0">
两个按钮: 是和否
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.YesNoCancel">
      <summary v="3CuxQc" i="0">
三个按钮: 是，否和取消
</summary>
    </member>
    <member name="F:AntDesign.Core.HashCodes.ParameterDescriptor`1.Descriptors">
      <summary v="3jJwQt" i="0">
获取组件的所有参数的说明
</summary>
    </member>
    <member name="F:AntDesign.Dialog._dialogMouseDown">
      <summary v="2mDnNT" i="0">
检查是对话框单击
</summary>
    </member>
    <member name="F:AntDesign.Dialog._element">
      <summary v="2lsUtt" i="0">
对话框根容器
</summary>
    </member>
    <member name="F:AntDesign.Dialog._sentinelStart">
      <summary v="enVVW" i="0">
TAB键键盘控制
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultCloseIcon">
      <summary v="W8kIQ" i="0">
默认对话框关闭图标
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultFooter">
      <summary v="T4rRh" i="0">
默认模式页脚
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultHeader">
      <summary v="2Y2SUn" i="0">
默认模式标题
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultMaximizeIcon">
      <summary v="W8kIQ" i="0">
默认对话框关闭图标
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAndClear">
      <summary v="1w7dgS" i="0">
焦点时，内容将被清除
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAndSelectAll">
      <summary v="1zmt3n" i="0">
当焦点，内容将被选中
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAtFirst">
      <summary v="3yAl94" i="0">
当焦点，光标将移动到第一个字符
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAtLast">
      <summary v="2IX3yV" i="0">
当焦点，光标将移动到最后一个字符
这是默认行为。
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.None">
      <summary v="4NnUqv" i="0">
设置为 &ldquo;无” 时，窗体将不按任何字段显示任何指标，而不管其所需状态如何
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.Optional">
      <summary v="3P3eBz" i="0">
当设置为可选时，表单将在可选字段旁边显示一个指示符
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.Required">
      <summary v="1UZY2b" i="0">
当设置为Required时，表单将在必填字段旁边显示一个指示符
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Complex">
      <summary v="DyWos" i="0">
同时使用默认模式和规则模式
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Default">
      <summary v="2zLNw3" i="0">
验证将来自提供给<see cref="P:AntDesign.Form`1.Model" />的模型上的数据属性</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Rules">
      <summary v="2b819E" i="0">
验证将来自表单中formitem上的规则
</summary>
    </member>
    <member name="F:AntDesign.Internal.Overlay._isReloading">
      <summary v="3wcE9I" i="0">
指示正在刷新页面
</summary>
    </member>
    <member name="F:AntDesign.Rate._currentValue">
      <summary v="3qqeGZ" i="0">
当前被选中的星星数量
当前选择的星星数量
</summary>
    </member>
    <member name="F:AntDesign.Rate._hasHalf">
      <summary v="2fqpId" i="0">
是否允许半选
是否允许半选
</summary>
    </member>
    <member name="F:AntDesign.Rate._hoverValue">
      <summary v="dbFU7" i="0">
鼠标悬停时从最左到光标位置的星星数。
鼠标悬停时从最左边到光标位置的星数。
</summary>
    </member>
    <member name="F:AntDesign.Rate._isFocused">
      <summary v="3ALEeG" i="0">
是否获取的输入焦点
Weter来获得输入焦点。
</summary>
    </member>
    <member name="F:AntDesign.Rate._valueWasSet">
      <summary v="4T5P25" i="0">
指示值是否已更改。需要避免重置为DefaultValue (如果存在)。
</summary>
    </member>
    <member name="F:AntDesign.RerenderStrategy.Always">
      <summary v="BjYee" i="0">
始终重新渲染
</summary>
    </member>
    <member name="F:AntDesign.RerenderStrategy.ParametersHashCodeChanged">
      <summary v="W9Mkm" i="0">
仅当更改任何组件的参数值时才重新渲染
</summary>
    </member>
    <member name="F:AntDesign.Select.Internal.SelectContent`2._isReloading">
      <summary v="3wcE9I" i="0">
指示正在刷新页面
</summary>
    </member>
    <member name="F:AntDesign.Select`2._dataSourceItemShallowCopyMehtod">
      <summary v="2dLgj3" i="0">
MethodInfo将包含附加的MemberwiseClone受保护
方法。由于其保护级别，它必须被访问
使用反射。它将在生成期间使用
数据源浅拷贝 (这是一个新的数据源列表
具有每个项目的浅副本的项目)。
</summary>
    </member>
    <member name="F:AntDesign.SelectBase`2._maxTagCount">
      <summary v="v23JS" i="0">
标签的长度 (字符数)。
仅适用于Mode = "multiple" 或Mode = "tags"
</summary>
      <value>
                The maximum length of the tag text.
            </value>
    </member>
    <member name="F:AntDesign.SelectOption`2._itemSet">
      <summary v="3XJgl6" i="0">
SelectOption的项目
仅当直接创建SelectOption时才应使用参数。
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._range">
      <summary v="34jy3B" i="0">
双拇指模式
</summary>
    </member>
    <member name="F:AntDesign.Table`1._isReloading">
      <summary v="3wcE9I" i="0">
指示正在刷新页面
</summary>
    </member>
    <member name="F:AntDesign.TextArea._isReloading">
      <summary v="3wcE9I" i="0">
指示正在刷新页面
</summary>
    </member>
    <member name="F:AntDesign.Tree`1._allNodes">
      <summary v="XXSU2" i="0">
节点的所有
</summary>
    </member>
    <member name="F:AntDesign.Tree`1._checkedNodes">
      <summary v="1Z7yRm" i="0">
所有选中的节点
</summary>
    </member>
    <member name="F:AntDesign.TreeNodeTitle`1._dragTargetClientX">
      <summary v="0000" i="0" />
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.InScroll">
      <summary v="O1yfc" i="0">
如果需要重新定位覆盖，则文档边界是用于计算的边界。
因此，即使叠加层在视口之外，只要叠加层仍然可以显示
不会 &ldquo;溢出” 文档边界。
</summary>
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.InView">
      <summary v="1VQ33C" i="0">
默认情况下，视口边界是用于计算的边界，如果覆盖
是完全可见的。
尝试调整叠加层，使其始终在视口中完全可见。
因此，如果叠加层在视口之外 (&ldquo;溢出”)，则重新定位计算将
尝试。
</summary>
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.None">
      <summary v="4ECMwF" i="0">
不自动调整
</summary>
    </member>
    <member name="M:AntDesign.Alert.OnCloseHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="seeMo" i="0">
处理close回调。
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Alert.OnInitialized">
      <summary v="ajhia" i="0">
启动代码。
</summary>
    </member>
    <member name="M:AntDesign.Alert.SetClassMap">
      <summary v="45aP6Q" i="0">
设置默认类。
</summary>
    </member>
    <member name="M:AntDesign.AntComponentBase.BlurAsync(Microsoft.AspNetCore.Components.ElementReference)">
      <summary v="1Df4hk" i="0">
标准模糊。使用JS interop。
</summary>
      <param name="target" v="4QgwiP" i="0">将获得焦点的元素。</param>
    </member>
    <member name="M:AntDesign.AntComponentBase.FocusAsync(Microsoft.AspNetCore.Components.ElementReference,AntDesign.FocusBehavior,System.Boolean)">
      <summary v="zIr6D" i="0">
专注于行为。行为将只适用于元素
HTMLInputElement或htmltextare。否则只会专注。
</summary>
      <param name="target" v="4QgwiP" i="0">将获得焦点的元素。</param>
      <param name="behavior" v="4euOKD" i="0">聚焦元素的行为</param>
      <param name="preventScroll" v="2zL7A" i="0">是否滚动到焦点元素</param>
    </member>
    <member name="M:AntDesign.AntComponentBase.FocusAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
      <summary v="3oHKS9" i="0">
标准焦点。从Net5在ElementReference上使用Blazor扩展方法。
之前，使用JS实现与Net5 JS完全相同。
</summary>
      <param name="target" v="4QgwiP" i="0">将获得焦点的元素。</param>
      <param name="preventScroll" v="2zL7A" i="0">是否滚动到焦点元素</param>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.#ctor">
      <summary v="7iYge" i="0">
构造<see cref="T:Microsoft.AspNetCore.Components.Forms.InputBase`1" />的实例。
</summary>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.FormatValueAsString(`0)">
      <summary v="2Mhrl9" i="0">
将值格式化为字符串。派生类可以重写此以确定用于<see cref="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString" />的格式。
</summary>
      <param name="value" v="26kDud" i="0">要设置格式的值。</param>
      <returns v="1AaSv2" i="0">值的字符串表示形式。</returns>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnCurrentValueChange(`0)">
      <summary v="1OUvUw" i="0">
调用此方法时，Value和CurrentValue已被修改，并且ValueChanged已被触发，因此外部绑定值已更改。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnValueChange(`0)">
      <summary v="oF6Fx" i="0">
调用此方法时，仅修改了Value，但未触发ValueChanged，因此未更改外部绑定Value。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnValueChangeAsync(`0)">
      <summary v="oF6Fx" i="0">
调用此方法时，仅修改了Value，但未触发ValueChanged，因此未更改外部绑定Value。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
      <summary v="4eJg98" i="0">
分析字符串以创建的实例。派生类可以重写此以更改
<see cref="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString" />解释传入的值。
<typeparamref name="TValue" /></summary>
      <param name="value" v="3C8L8R" i="0">要分析的字符串值。</param>
      <param name="result" v="2OSvxq" i="0">的一个实例。<typeparamref name="TValue" /></param>
      <param name="validationErrorMessage" v="1lxpYC" i="0">如果无法分析该值，则提供验证错误消息。</param>
      <returns v="22lm7E" i="0">如果可以分析该值，则为True; 否则为false。</returns>
    </member>
    <member name="M:AntDesign.AutoComplete`1.ClosePanel">
      <summary v="2ruC60" i="0">
关闭面板
</summary>
    </member>
    <member name="M:AntDesign.AutoComplete`1.OpenPanel">
      <summary v="3l6rLI" i="0">
打开面板
</summary>
    </member>
    <member name="M:AntDesign.AutoCompleteOption.CalcSelected">
      <summary v="15MAgK" i="0">
计算当前计算选择状态
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Badge.OnInitialized">
      <summary v="1cE7i0" i="0">
启动代码
</summary>
    </member>
    <member name="M:AntDesign.Badge.SetClassMap">
      <summary v="K1vic" i="0">
设置默认的CSS类。
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.OnInitialized">
      <summary v="1cE7i0" i="0">
启动代码
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.OnParametersSet">
      <summary v="3bianQ" i="0">
每次设置参数时运行。
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.SetClassMap">
      <summary v="K1vic" i="0">
设置默认的CSS类。
</summary>
    </member>
    <member name="M:AntDesign.Carousel.GoTo(System.Int32)">
      <summary v="gjky1" i="0">
将轮播滑动到指定的幻灯片
</summary>
      <param name="index" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Carousel.Next">
      <summary v="4N4YpT" i="0">
将转盘滑动到下一张幻灯片
</summary>
    </member>
    <member name="M:AntDesign.Carousel.Previous">
      <summary v="019VF" i="0">
将转盘滑动到上一张幻灯片
</summary>
    </member>
    <member name="M:AntDesign.Cascader.CascaderOnBlur">
      <summary v="4QW9aB" i="0">
输入框/浮层失去焦点(隐藏浮层)
</summary>
    </member>
    <member name="M:AntDesign.Cascader.ClearSelected">
      <summary v="EYuLQ" i="0">
清除已选择项
</summary>
    </member>
    <member name="M:AntDesign.Cascader.GetNodeByValue(System.Collections.Generic.IEnumerable{AntDesign.CascaderNode},System.String)">
      <summary v="2me3yv" i="0">
根据指定的值获取节点
</summary>
      <param name="list" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.InitCascaderNodeState(System.Collections.Generic.List{AntDesign.CascaderNode},AntDesign.CascaderNode,System.Int32,System.Boolean)">
      <summary v="JTgDE" i="0">
初始化节点 (级别，ParentNode)
</summary>
      <param name="list" v="0000" i="0" />
      <param name="parentNode" v="0000" i="0" />
      <param name="level" v="0000" i="0" />
      <param name="recursive" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.InputOnToggle">
      <summary v="JoEYk" i="0">
输入框单击(显示/隐藏浮层)
</summary>
    </member>
    <member name="M:AntDesign.Cascader.NodeOnClick(AntDesign.CascaderNode)">
      <summary v="4Y7NQo" i="0">
下拉节点单击
</summary>
      <param name="node" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.NodeOnMouseOver(AntDesign.CascaderNode)">
      <summary v="3PeI3Q" i="0">
下拉节点移入
</summary>
      <param name="node" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.NodesOnMouseOut">
      <summary v="4P5oXL" i="0">
浮层移出
</summary>
    </member>
    <member name="M:AntDesign.Cascader.NodesOnMouseOver">
      <summary v="2UJTjQ" i="0">
浮层移入
</summary>
    </member>
    <member name="M:AntDesign.Cascader.ProcessParentAndDefault">
      <summary v="fSFSs" i="0">
处理选项更新后的父节点和默认值
</summary>
    </member>
    <member name="M:AntDesign.Cascader.RefreshDisplayText">
      <summary v="4TItSt" i="0">
重建显示文本
</summary>
    </member>
    <member name="M:AntDesign.Cascader.RefreshNodeValue(System.String)">
      <summary v="23wDCv" i="0">
刷新所选值
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetDefaultValue(System.String)">
      <summary v="4bhYmD" i="0">
设置默认值
</summary>
      <param name="defaultValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetSelectedNode(AntDesign.CascaderNode,AntDesign.SelectedTypeEnum)">
      <summary v="1yanOb" i="0">
所选节点
</summary>
      <param name="cascaderNode" v="0000" i="0" />
      <param name="selectedType" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetSelectedNodeWithParent(AntDesign.CascaderNode,System.Collections.Generic.List{AntDesign.CascaderNode}@)">
      <summary v="4cw9N0" i="0">
设置要选择的所有父节点
</summary>
      <param name="node" v="0000" i="0" />
      <param name="list" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetValue(System.String)">
      <summary v="4LHGMk" i="0">
设置绑定值
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.CheckboxGroup`1.OnCheckboxChange(AntDesign.Checkbox,System.Boolean)">
      <summary v="12407g" i="0">
当 [checkbox change] 时调用。
</summary>
      <param name="checkbox" v="RRWM4" i="0">复选框。</param>
      <param name="invokeOnChange" v="2gshfC" i="0">是否为变更事件而离开的标志。</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Collapse.Activate(System.String[])">
      <summary v="4Fz9aG" i="0">
激活指定的面板
</summary>
      <param name="activeKeys" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Collapse.Deactivate(System.String[])">
      <summary v="3vc5i4" i="0">
停用指定的面板
</summary>
      <param name="inactiveKeys" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.Dispose(System.Boolean)">
      <summary v="JOrKd" i="0">
注销事件
</summary>
      <param name="disposing" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmClose(AntDesign.ConfirmRef)">
      <summary v="29ltvo" i="0">
销毁确认对话框
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmCloseAll">
      <summary v="3stjhf" i="0">
销毁所有确认对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmOpen(AntDesign.ConfirmRef)">
      <summary v="4Ttvme" i="0">
创建并打开确认对话框
</summary>
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmRemove(AntDesign.ConfirmRef)">
      <summary v="2hkOM7" i="0">
确认对话框后从DOM中删除，将其从 _confirmrefs中删除
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmUpdate(AntDesign.ConfirmRef)">
      <summary v="2Hw32B" i="0">
更新确认对话框
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnInitialized">
      <summary v="2AGfwn" i="0">
注册事件
</summary>
    </member>
    <member name="M:AntDesign.ComponentStatusExt.Is(AntDesign.ComponentStatus,AntDesign.ComponentStatus)">
      <summary v="1aMoDL" i="0">
返回是 <paramref name="componentStatus" /><paramref name="status" /></summary>
      <param name="componentStatus" v="0000" i="0" />
      <param name="status" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsClose(AntDesign.ComponentStatus)">
      <summary v="4f8eFK" i="0">
是ComponentStatus.Closing或ComponentStatus.Closed
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsNotOpen(AntDesign.ComponentStatus)">
      <summary v="37QzBT" i="0">
不是ComponentStatus.正在打开，也不是ComponentStatus已打开
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsOpen(AntDesign.ComponentStatus)">
      <summary v="3YviB6" i="0">
是ComponentStatus.正在打开或ComponentStatus.已打开
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Confirm.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Confirm.OnInitializedAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmOptions.BuildButtonsDefaultOptions">
      <summary v="N7VQ8" i="0">
设置按钮的默认选项
</summary>
    </member>
    <member name="M:AntDesign.ConfirmRef.CloseAsync">
      <summary v="w8anv" i="0">
关闭确认对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.OpenAsync">
      <summary v="4ME4b" i="0">
打开确认对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.UpdateConfigAsync">
      <summary v="3cDh69" i="0">
更新确认对话框配置哪个可见 = true
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.UpdateConfigAsync(AntDesign.ConfirmOptions)">
      <summary v="1aknzh" i="0">
使用新的confirmotions更新确认对话框配置
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef`1.CancelAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ConfirmRef`1.OkAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ConfirmService.Show(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},AntDesign.ConfirmButtons,AntDesign.ConfirmIcon,AntDesign.ConfirmButtonOptions,System.Nullable{AntDesign.ConfirmAutoFocusButton})">
      <summary v="3S6wbj" i="0">
显示一个确认对话框，如Windows的MessageBox
</summary>
      <param name="content" v="4eHUMp" i="0">对话的内容</param>
      <param name="title" v="2qim70" i="0">对话框的标题</param>
      <param name="confirmButtons" v="4OkTic" i="0">对话框的按钮</param>
      <param name="confirmIcon" v="4E5rut" i="0">对话框的图标</param>
      <param name="options" v="30j200" i="0">对话框的配置选项</param>
      <param name="autoFocusButton" v="2g6u5L" i="0">自动对焦按钮</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmService.Show(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},AntDesign.ConfirmButtons,AntDesign.ConfirmIcon)">
      <summary v="3S6wbj" i="0">
显示一个确认对话框，如Windows的MessageBox
</summary>
      <param name="content" v="4eHUMp" i="0">对话的内容</param>
      <param name="title" v="2qim70" i="0">对话框的标题</param>
      <param name="confirmButtons" v="4OkTic" i="0">对话框的按钮</param>
      <param name="confirmIcon" v="4E5rut" i="0">对话框的图标</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Extensions.ArrayExtensions.Scroll``1(``0[],System.Int32)">
      <summary v="KDoZN" i="0">
向左滚动元素
</summary>
      <typeparam name="T" v="0000" i="0" />
      <param name="sourceArray" v="0000" i="0" />
      <param name="offset" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.DataConversionExtensions.Convert``2(``0)">
      <summary v="kkCNA" i="0">
将泛型类型tof转换为指定的TTo类型
</summary>
      <typeparam name="TFrom" v="0000" i="0" />
      <typeparam name="TTo" v="0000" i="0" />
      <param name="fromValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.HttpClientExtensions.GetEncoding(System.Net.Http.HttpContent)">
      <summary v="1hf85j" i="0">
从<see cref="T:System.Net.Http.HttpContent" />获取编码信息</summary>
      <param name="httpContent" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.HttpClientExtensions.ReadAsByteArrayAsync(System.Net.Http.HttpContent,System.Text.Encoding)">
      <summary v="Vs5WG" i="0">
读取为二进制数组并转换为指定的编码
</summary>
      <param name="httpContent" v="0000" i="0" />
      <param name="dstEncoding" v="3gsAdT" i="0">目标编码</param>
      <exception cref="T:System.ArgumentException" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCode`1.GetHashCode(`0)">
      <summary v="lh0fV" i="0">
计算参数的哈希值
</summary>
      <param name="parameter" v="3HK7tg" i="0">参数</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCode`1.HashCodeEquals(`0,`0)">
      <summary v="277aqd" i="0">
计算两个参数值的哈希值是否相等
</summary>
      <param name="parameter1" v="30MREE" i="0">参数1</param>
      <param name="parameter2" v="YZiuF" i="0">参数2</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeExtensions.GetParametersHashCode``1(``0)">
      <summary v="4PHukz" i="0">
计算所有参数的HashCode
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <param name="component" v="4TC8iJ" i="0">组件</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeProvider.Create(System.Type)">
      <summary v="4SPSAV" i="0">
为参数创建适当的哈希提供程序
</summary>
      <param name="parameterType" v="4I5cph" i="0">参数类型</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeProvider.GetHashCode(System.Object)">
      <summary v="4Vme4X" i="0">
获取参数值的哈希值
</summary>
      <param name="parameter" v="4I5cph" i="0">参数类型</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.#ctor(System.Reflection.PropertyInfo)">
      <summary v="24e72M" i="0">
组件的参数描述符
</summary>
      <param name="property" v="33iWJQ" i="0">属性类型</param>
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.CreateGetFunc(System.Reflection.PropertyInfo)">
      <summary v="2h7DUq" i="0">
创建属性的get委托
</summary>
      <param name="property" v="2UyZk2" i="0">财产</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.GetValueHashCode(`0)">
      <summary v="13vswS" i="0">
返回参数值的哈希
</summary>
      <param name="component" v="1I629k" i="0">组件</param>
      <exception cref="T:System.NotSupportedException" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.IsEventCallBack(System.Reflection.PropertyInfo)">
      <summary v="4WeCE2" i="0">
检查是否为EventCallback类型
</summary>
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.Formatter.ToPercentWithoutBlank(System.Double)">
      <summary v="8T4Rw" i="0">
在WASM模式下，将双精度数字格式化为百分比时，数字和 % 之间将有一个空白，&ldquo;35.00%”
使用此方法来避免空白
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.Formatter`1.ParseSpanTimeFormatString(System.String)">
      <summary v="2DFOjP" i="0">
解析格式字符串中的其他字符。
</summary>
      <remarks>refer to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-timespan-format-strings#other-characters</remarks>
      <param name="format" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet(System.Object,System.String)">
      <summary v="3qsIng" i="0">
按路径获取成员值
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet``1(System.Object,System.String)">
      <summary v="3qsIng" i="0">
按路径获取成员值
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet``2(``0,System.String)">
      <summary v="3qsIng" i="0">
按路径获取成员值
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault(System.Object,System.String)">
      <summary v="4a1HWG" i="0">
通过路径获取可空成员值，它将捕获所有异常并返回null
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault``1(System.Object,System.String)">
      <summary v="4a1HWG" i="0">
通过路径获取可空成员值，它将捕获所有异常并返回null
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault``2(``0,System.String)">
      <summary v="4a1HWG" i="0">
通过路径获取可空成员值，它将捕获所有异常并返回null
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet(System.Object,System.String,System.Object)">
      <summary v="3EPTh0" i="0">
按路径设置成员值
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet``1(System.Object,System.String,``0)">
      <summary v="3EPTh0" i="0">
按路径设置成员值
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet``2(``0,System.String,``1)">
      <summary v="3EPTh0" i="0">
按路径设置成员值
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <typeparam name="TITem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="IEM4X" i="0">
获取获取值委托，委托的类型取决于和: <br />
'Func&lt;TItem，TValue&gt;': = typeof(TItem)， = typeof(TValue)， = false。
'Func&lt;object，TValue&gt;': = typeof(object)， = typeof(TValue)， = false。
'Func&lt;object，object&gt;': = typeof(object)， = typeof(object)， = false。
'Func&lt;TItem，TValue？&gt; ': = typeof(TItem)， = typeof(TValue)， = true。
'Func&lt;object，TValue？&gt; ': = typeof(object)， = typeof(TValue)， = true。
'Func&lt;object，object？&gt; ': = typeof(object)， = typeof(object)， = true。<paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="243k0x" i="0">访问对象的类型</param>
      <param name="path" v="31OaeH" i="0">字符串路径</param>
      <param name="paramType" v="1lMs0o" i="0">如果要将项目作为对象传入，请将其设置为true</param>
      <param name="valueType" v="RS5c9" i="0">如果要将值作为对象获取，请将其设置为true</param>
      <param name="checkNull" v="3hhVUM" i="0">如果为true，委托将检查路径不为null和返回值或默认值，如果返回值的类型为ValueType，委托将返回Nullable&lt;T&gt;，
如果为false，则委托不会检查路径not null，因此，如果路径包含null值或未找到键，则会引发异常</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate(System.String,System.Type)">
      <summary v="2EGHXe" i="0">
获取获取值委托
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate``1(System.String,System.Type)">
      <summary v="2EGHXe" i="0">
获取获取值委托
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate``2(System.String)">
      <summary v="2EGHXe" i="0">
获取获取值委托
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault(System.String,System.Type)">
      <summary v="3V8rsK" i="0">
获取可以为nullable的值委托
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault``1(System.String,System.Type)">
      <summary v="3V8rsK" i="0">
获取可以为nullable的值委托
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault``2(System.String)">
      <summary v="3V8rsK" i="0">
获取可以为nullable的值委托
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetExpression(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="4XJufI" i="0">
获取获取值表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="paramType" v="0000" i="0" />
      <param name="valueType" v="0000" i="0" />
      <param name="checkNull" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="TEvn8" i="0">
获取获取值lambda表达式，lambda表达式的类型取决于和: <br />
'Expression&lt;Func&lt;TItem，TValue&gt;&gt;': = typeof(TItem)， = typeof(TValue)， = false。
'Expression&lt;Func&lt;object，TValue&gt;&gt;': = typeof(object)， = typeof(TValue)， = false。
'Expression&lt;Func&lt;object，object&gt;&gt;': = typeof(object)， = typeof(object)， = false。
'Expression&lt;Func&lt;TItem，TValue ？&gt;&gt; ': = typeof(TItem)， = typeof(TValue)， = true。
'Expression&lt;Func&lt;object，TValue ？&gt;&gt; ': = typeof(object)， = typeof(TValue)， = true。
'Expression&lt;Func&lt;object，object ？&gt;&gt; ': = typeof(object)， = typeof(object)， = true。<paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="243k0x" i="0">访问对象的类型</param>
      <param name="path" v="31OaeH" i="0">字符串路径</param>
      <param name="paramType" v="1lMs0o" i="0">如果要将项目作为对象传入，请将其设置为true</param>
      <param name="valueType" v="RS5c9" i="0">如果要将值作为对象获取，请将其设置为true</param>
      <param name="checkNull" v="3hhVUM" i="0">如果为true，委托将检查路径不为null和返回值或默认值，如果返回值的类型为ValueType，委托将返回Nullable&lt;T&gt;，
如果为false，则委托不会检查路径not null，因此，如果路径包含null值或未找到键，则会引发异常</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda(System.String,System.Type)">
      <summary v="l9gOr" i="0">
获取获取值lambda表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda``1(System.String,System.Type)">
      <summary v="l9gOr" i="0">
获取获取值lambda表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda``2(System.String)">
      <summary v="l9gOr" i="0">
获取获取值lambda表达式
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault(System.String,System.Type)">
      <summary v="5YTrN" i="0">
获取可以为nullvalue的lambda表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault``1(System.String,System.Type)">
      <summary v="5YTrN" i="0">
获取可以为nullvalue的lambda表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault``2(System.String)">
      <summary v="5YTrN" i="0">
获取可以为nullvalue的lambda表达式
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate(System.String,System.Type,System.Type,System.Type)">
      <summary v="247ukh" i="0">
获取一个set value委托，委托的类型取决于和: <br />
'Action&lt;TItem，TValue&gt;': = typeof(TItem)， = typeof(TValue)。 <br />
'Action&lt;object，TValue&gt;': = typeof(object)， = typeof(TValue)。 <br />
'Action&lt;object，object&gt;': = typeof(object)， = typeof(object)。 <br /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="3KAWC" i="0">项目类型</param>
      <param name="path" v="1tDgZj" i="0">成员路径字符串</param>
      <param name="paramType" v="3EPEMR" i="0">传入对象的类型</param>
      <param name="valueType" v="4S22WK" i="0">赋值对象的类型</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate(System.String,System.Type)">
      <summary v="1tIQdL" i="0">
获取set value委托
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate``1(System.String,System.Type)">
      <summary v="1tIQdL" i="0">
获取set value委托
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate``2(System.String)">
      <summary v="1tIQdL" i="0">
获取set value委托
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetExpression(System.String,System.Type,System.Type,System.Type)">
      <summary v="2YPZv4" i="0">
获取设置值表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="paramType" v="0000" i="0" />
      <param name="valueType" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda(System.String,System.Type,System.Type,System.Type)">
      <summary v="4MOdQj" i="0">
获取一个集值lambda表达式，lambda表达式的类型取决于和: <br />
'Expression&lt;Action&lt;TItem，TValue&gt;&gt;': = typeof(TItem)， = typeof(TValue)。 <br />
'Expression&lt;Action&lt;object，TValue&gt;&gt;': = typeof(object)， = typeof(TValue)。 <br />
'Expression&lt;Action&lt;object，object&gt;&gt;': = typeof(object)， = typeof(object)。 <br /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="3KAWC" i="0">项目类型</param>
      <param name="path" v="1tDgZj" i="0">成员路径字符串</param>
      <param name="paramType" v="3EPEMR" i="0">传入对象的类型</param>
      <param name="valueType" v="4S22WK" i="0">赋值对象的类型</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda(System.String,System.Type)">
      <summary v="132T86" i="0">
获取设置值lambda表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda``1(System.String,System.Type)">
      <summary v="132T86" i="0">
获取设置值lambda表达式
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda``2(System.String)">
      <summary v="132T86" i="0">
获取设置值lambda表达式
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ClassGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="3kkUvI" i="0">
C.道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ClassGetPropertyOrNull(System.Linq.Expressions.Expression,System.String)">
      <summary v="1RqOfF" i="0">
C？.道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.GetRootParameterExpression(System.Linq.Expressions.Expression)">
      <summary v="2GqtB8" i="0">
表达式应类似于: ParameterExpression-&gt;MemberExpression1-&gt;MemberExpression2. ..，
如果 'expression' 的根不是ParameterExpression，这将返回null。
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsClass(System.Linq.Expressions.Expression)">
      <summary v="1fYDYr" i="0">
检查expression.Type是否为class，否则抛出和异常
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsNullableTypeOrThrow(System.Linq.Expressions.Expression)">
      <summary v="4ElDLn" i="0">
检查expression.Type是否为Nullable&lt;T&gt;，否则抛出和异常
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsValueType(System.Linq.Expressions.Expression)">
      <summary v="Ty4KO" i="0">
检查expression.Type是否为ValueType且不可为Nullable&lt;T&gt;，否则引发和异常
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="2TjE8o" i="0">
NV!.Value.Prop，可能是无值的InvalidOperationException
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetPropOrNull(System.Linq.Expressions.Expression,System.String)">
      <summary v="1x7cZa" i="0">
NV?.Value.Prop
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetValue(System.Linq.Expressions.Expression)">
      <summary v="1rT0TK" i="0">
NV!.Value，可能是无值的InvalidOperationException
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetValueOrNull(System.Linq.Expressions.Expression)">
      <summary v="373AOg" i="0">
NV？.值
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ParseIndexAccess(System.String)">
      <summary v="1CTdtF" i="0">
检查属性字符串是否有索引操作并解析为表达式
</summary>
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.TryConvertToNullable(System.Linq.Expressions.Expression)">
      <summary v="1TR7Jh" i="0">
尝试将表达式类型转换为可以为Nullable的类型，只能转换不可为Nullable的ValueType
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ValueTypeGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="4BMgnr" i="0">
V.道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.CountDown.Reset">
      <summary v="3jhNiH" i="0">
重置倒计时
</summary>
    </member>
    <member name="M:AntDesign.DateHelper.AddDaysSafely(System.DateTime,System.Int32)">
      <summary v="tyQe5" i="0">
用该函数来执行add日逻辑，不会触发System.Argumentoutofroangeexception异常
函数的add天永远不会抛出System.Argumentoutoffrangeexception
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddMonthsSafely(System.DateTime,System.Int32)">
      <summary v="2eg2rN" i="0">
用该函数来执行addmonth斯逻辑，不会触发System.Argumentoutofroangeexception异常
函数的addmonth斯永远不会抛出System.Argumentoutoffrangeexception
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddYearsSafely(System.DateTime,System.Int32)">
      <summary v="31u7rC" i="0">
用该函数来执行addareweeexception逻辑，不会触发System.Argumentoutoffrangeexception异常
函数的addearrow永远不会抛出System.Argumentoutoffrangeexception
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfDay(System.DateTime)">
      <summary v="rYvKV" i="0">
例如，当currentDateTime 2020-01-04 05:34:55时，则:
下一个日期应该是2021-01-05 00:00:00，这是第二天的开始日期
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfDecade(System.DateTime)">
      <summary v="1kzAtL" i="0">
例如，
当currentDateTime 2020-01-04 05:34:55时:
下一个日期应该是2030-01 00:00:00，这是下一个10年的开始日期

当currentDateTime 2023-01-04 05:34:55时:
下一个日期应该是2030-01 00:00:00，这是下一个10年的开始日期

当currentDateTime 2018-01-04 05:34:55时:
下一个日期应该是2020-01 00:00:00，这是下一个10年的开始日期
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfMonth(System.DateTime)">
      <summary v="1z1IDD" i="0">
例如，当currentDateTime 2020-01-04 05:34:55时，则:
下一个日期应该是2020-02-01 00:00:00，这是下个月的开始日期
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfQuarter(System.DateTime)">
      <summary v="3VCB6e" i="0">
例如，当currentDateTime 2020-01-04 05:34:55时，则:
下一个日期应该是2020-04-01 00:00:00，这是下一个季度2020年的开始日期
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfYear(System.DateTime)">
      <summary v="33tvDc" i="0">
例如，当currentDateTime 2020-01-04 05:34:55时，则:
下一个日期应该是2021-01 00:00:00，这是明年的开始日期
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePicker`1.GetIndexValue(System.Int32)">
      <summary v="29wd8z" i="0">
获取选择器的值
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePicker`1.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="15XtPd" i="0">
如果在Input元素内不再按下键盘键，则通过EventCallBack调用方法。
</summary>
      <param name="e" v="19uVqq" i="0">包含在输入元素内按下的键 (组合)</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.Blur(System.Int32)">
      <summary v="NzMp1" i="0">
从选取器中删除焦点
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ChangePickerValue(System.DateTime,System.Nullable{System.Int32})">
      <summary v="4PBJQR" i="0">
更改将在选取器上显示的日期。
</summary>
      <param name="date" v="2tF8nX" i="0">要保存的新日期。</param>
      <param name="index" v="4P8AAT" i="0">输入框的索引，其中0 = inputStart，1 = inputEnd (仅RangePicker)</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ChangeValue(System.DateTime,System.Int32,System.Boolean)">
      <summary v="JXlJa" i="0">
更改给定选取器面板的值
</summary>
      <param name="value" v="dEOrC" i="0">要更改到的值</param>
      <param name="index" v="3Pn3Lz" i="0">要更改的选取器面板的索引</param>
      <param name="closeDropdown" v="1qiJfH" i="0">设置或未设置时关闭面板</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ClearValue(System.Int32,System.Boolean)">
      <summary v="2OQIfI" i="0">
清除给定选取器面板索引的值
</summary>
      <param name="index" v="4FVGEz" i="0">要清除的选择器面板的索引</param>
      <param name="closeDropdown" v="33hqaP" i="0">清除或不清除时关闭面板</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.Close">
      <summary v="3EyWuO" i="0">
关闭popover
</summary>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.Focus(System.Int32)">
      <summary v="WUaAD" i="0">
将焦点添加到选取器
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetIndexPickerValue(System.Int32)">
      <summary v="wsrBf" i="0">
通过选取器索引获取pickerValue。请注意，索引是指一个选择器面板
而不是输入文本。对于RangePicker 2输入，生成2个面板。
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetIndexValue(System.Int32)">
      <summary v="2rt7aO" i="0">
获取索引处选取器面板的值
</summary>
      <param name="index" v="2WrpHQ" i="0">选取器面板的索引以获取的值</param>
      <returns v="1eCmAU" i="0">面板的DateTime值</returns>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetOnFocusPickerIndex">
      <summary v="4T2tLt" i="0">
获取当前关注的选择器的索引
</summary>
      <returns v="I5IB4" i="0">选择器的索引。0也可以表示两者都不聚焦。</returns>
    </member>
    <member name="M:AntDesign.DayOfWeekHelper.GetDiffForDayOfWeek(System.DayOfWeek)">
      <summary v="2AmivX" i="0">
返回必须添加到开始日期以获得正确的一周第一天的天数。
</summary>
      <param name="firstDayOfWeek" v="2NXrGl" i="0">在当前区域设置中定义的一周的第一天。</param>
      <returns v="4ZXel1" i="0">天的差异。</returns>
    </member>
    <member name="M:AntDesign.Dialog.AppendToContainer">
      <summary v="rD7kr" i="0">
附加到正文
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.CleanShowAnimationAsync">
      <summary v="2e9XUW" i="0">
清除蚂蚁模型输入类，这将禁用用户选择。
更多详细信息请参阅样式/mixins/modal-mask.less
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.GetStyle">
      <summary v="449EWV" i="0">
蚂蚁模态风格
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.Hide">
      <summary v="B1FcK" i="0">
通过动画隐藏对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.IsShow">
      <summary v="4TzPoA" i="0">
确定是否显示对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="isFirst" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnCloserClick">
      <summary v="wH6uH" i="0">
closer(X) click事件
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="1oMDd3" i="0">
监听Tab和ESC键事件
</summary>
      <param name="e" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnMaxBtnClick">
      <summary v="wH6uH" i="0">
closer(X) click事件
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnParametersSetAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.Show">
      <summary v="3EGs1m" i="0">
通过动画显示对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.TryResetModalStyle">
      <summary v="1O67Zt" i="0">
如果Modal是可拖动的，则重置与第一个show类似的位置样式
</summary>
    </member>
    <member name="M:AntDesign.DialogWrapper.DestroyAsync">
      <summary v="1InHPh" i="0">
从DOM树中销毁组件
</summary>
    </member>
    <member name="M:AntDesign.DialogWrapper.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DialogWrapper.OnParametersSetAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.CloseClick">
      <summary v="41qy8P" i="0">
单击Closer时触发
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.HandleClose(System.Boolean)">
      <summary v="ydVZ5" i="0">
收盘后清理
</summary>
      <param name="isChangeByParamater" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.MaskClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="3dYfV8" i="0">
单击掩码时触发
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnClose(AntDesign.DrawerRef)">
      <summary v="3VEoDU" i="0">
关闭抽屉
</summary>
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnCreate(AntDesign.DrawerRef)">
      <summary v="1IAQRb" i="0">
创建并打开抽屉
</summary>
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnUpdateEvent(AntDesign.DrawerRef)">
      <summary v="3xcPb5" i="0">
更新抽屉
</summary>
      <param name="drawerRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.CloseAsync">
      <summary v="1qTxxs" i="0">
关闭抽屉
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.OpenAsync">
      <summary v="1B0nA" i="0">
打开抽屉
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.UpdateConfigAsync">
      <summary v="4LO2Qo" i="0">
更新抽屉配置哪个可见 = true
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.UpdateConfigAsync(AntDesign.DrawerOptions)">
      <summary v="KYvjl" i="0">
使用新选项更新抽屉配置
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef`1.CloseAsync(`0)">
      <summary v="1fh4wR" i="0">
关闭抽屉
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerService.CreateAsync(AntDesign.DrawerOptions)">
      <summary v="4COGsK" i="0">
创建并打开一个没有结果的简单抽屉
</summary>
      <param name="options" v="4Co7ip" i="0">抽屉选项</param>
      <returns v="4dM9xE" i="0">抽屉的参考</returns>
    </member>
    <member name="M:AntDesign.DrawerService.CreateAsync``3(AntDesign.DrawerOptions,``1)">
      <summary v="3xw7KV" i="0">
使用模板创建并打开抽屉
</summary>
      <typeparam name="TComponent" v="zYcLf" i="0">DrawerTemplate实现的类型</typeparam>
      <typeparam name="TComponentOptions" v="70Cl2" i="0">的</typeparam>
      <typeparam name="TResult" v="22qdCS" i="0">返回值的类型</typeparam>
      <param name="config" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <returns v="4dM9xE" i="0">抽屉的参考</returns>
    </member>
    <member name="M:AntDesign.DrawerService.CreateDialogAsync``3(AntDesign.DrawerOptions,``1)">
      <summary v="3IA0Sy" i="0">
创建并打开抽屉
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerService.UpdateAsync(AntDesign.DrawerRef)">
      <summary v="1KxX7p" i="0">
更新抽屉
</summary>
      <param name="drawerRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dropdown.OnClickDiv(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="uNBE4" i="0">
处理触发器单击。
</summary>
      <param name="args" v="2rN4Oq" i="0">MouseEventArgs</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DropdownButton.OnAfterRenderAsync(System.Boolean)">
      <summary v="li9fM" i="0">
将强制覆盖触发器附加到的包装元素
正确的按钮。右按钮必须包装，
因为覆盖将寻找第一个孩子
用于计算叠加位置的叠加触发器的元素。
如果右按钮是触发器，那么它的第一个子
将是图标/省略号，叠加层将是
渲染得太高。
</summary>
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.EnumerableExtensions.AddIf``1(System.Collections.Generic.IList{``0},System.Boolean,``0)">
      <summary v="39Zky1" i="0">
当条件为true时将项目添加到项目
</summary>
      <typeparam name="T" v="0000" i="0" />
      <param name="items" v="0000" i="0" />
      <param name="condition" v="0000" i="0" />
      <param name="item" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="ne9hr" i="0">
触发取消按钮时回拨，可用于取消结账
在取消按钮触发时回调，可以用来取消关闭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.CloseFeedbackAsync">
      <summary v="MRcJX" i="0">
为了用户可以通过按钮关闭模板
为了用户可以在模板内通过按钮主动关闭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2P1DPD" i="0">
好按钮触发时回拨，可用于取消结账
在好按钮触发时回调，可以用来取消关闭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OnFeedbackCancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="ne9hr" i="0">
触发取消按钮时回拨，可用于取消结账
在取消按钮触发时回调，可以用来取消关闭
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OnFeedbackOkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2P1DPD" i="0">
好按钮触发时回拨，可用于取消结账
在好按钮触发时回调，可以用来取消关闭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.CloseAsync">
      <summary v="2ZRDin" i="0">
只是做关闭反馈组件，不会触发OkAsync或OkCancel
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.OpenAsync">
      <summary v="17W1IJ" i="0">
只需打开关闭反馈组件
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.UpdateConfigAsync">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.FeedbackRefWithOkCancelBase.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2goXMY" i="0">
单击 &ldquo;取消” 按钮
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefWithOkCancelBase.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2chA2T" i="0">
单击好按钮
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Form`1.Reset">
      <summary v="1T9H3W" i="0">
重置表单中的所有值
</summary>
    </member>
    <member name="M:AntDesign.Form`1.SetValidationMessages(System.String,System.String[])">
      <summary v="2RXa8p" i="0">
将验证消息设置为特定字段。
</summary>
      <param name="field" v="1vxpf6" i="0">字段名称</param>
      <param name="errorMessages" v="1NA1dx" i="0">错误消息</param>
    </member>
    <member name="M:AntDesign.Form`1.Submit">
      <summary v="8Wx47" i="0">
提交表单。将触发验证和<see cref="P:AntDesign.Form`1.OnFinish" />或<see cref="P:AntDesign.Form`1.OnFinishFailed" />。
</summary>
    </member>
    <member name="M:AntDesign.Form`1.Validate">
      <summary v="3XTK5k" i="0">
执行验证
</summary>
      <returns v="cunYz" i="0">如果所有字段都有效，则返回<c>true</c></returns>
    </member>
    <member name="M:AntDesign.Form`1.ValidationReset">
      <summary v="3B9ksl" i="0">
重置验证
</summary>
    </member>
    <member name="M:AntDesign.FormItem.GetRulesFromAttributes">
      <summary v="3N16ij" i="0">
用于使用区域设置验证消息模板的FormValidationRule的tansform属性
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.HtmlRenderer.HandleException(System.Exception)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.HtmlRenderer.UpdateDisplayAsync(Microsoft.AspNetCore.Components.RenderTree.RenderBatch@)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.IFeedbackRef.CloseAsync">
      <summary v="2ZRDin" i="0">
只是做关闭反馈组件，不会触发OkAsync或OkCancel
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IFeedbackRef.OpenAsync">
      <summary v="21ZJm2" i="0">
打开组件
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IFeedbackRef.UpdateConfigAsync">
      <summary v="YyiiH" i="0">
更新组件
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IForm.Reset">
      <summary v="8JhiC" i="0">
重置所有字段的值和验证消息。
</summary>
    </member>
    <member name="M:AntDesign.IForm.SetValidationMessages(System.String,System.String[])">
      <summary v="1ahtV4" i="0">
为特定字段设置验证消息。
<code>&lt;![CDATA [






@ code {
私人表格；
私人无效SetError()
{
_form.SetValidationMessages("name", new[] { "error message" });
}
}
]]&gt; </code></summary>
      <param name="field" v="0000" i="0" />
      <param name="errorMessages" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IForm.Submit">
      <summary v="1o8vxt" i="0">
当所有字段都有效时触发 'OnFinish'，否则触发 'OnFinishFailed'。
</summary>
    </member>
    <member name="M:AntDesign.IForm.Validate">
      <summary v="1O3Irc" i="0">
验证所有字段。
</summary>
      <returns v="24dNwT" i="0">如果所有字段都有效，则为true; 否则为false。</returns>
    </member>
    <member name="M:AntDesign.IMessageService.Config(AntDesign.MessageGlobalConfig)">
      <summary v="4WvGWn" i="0">
配置全局消息选项
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Error(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="4Zagvq" i="0">
显示错误消息
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Info(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="3bRkyo" i="0">
显示信息消息
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Loading(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="2LuCX0" i="0">
显示正在加载的消息
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Open(AntDesign.MessageConfig)">
      <summary v="3r0kPR" i="0">
使用提供的配置打开消息
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Success(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="2PmtLb" i="0">
显示成功消息
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Warning(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="3bSb0e" i="0">
显示警告信息
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IModalTemplate.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="HOT19" i="0">
触发取消按钮时回叫
点击取消按钮时调用，可以重写它来放入自己的逻辑
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="1st9il" i="0">
好按钮被触发时回叫
点击确定按钮时调用，可以重写它来放入自己的逻辑
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OnFeedbackCancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="HOT19" i="0">
触发取消按钮时回叫
点击取消按钮时调用，可以重写它来放入自己的逻辑
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OnFeedbackOkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="11XfcB" i="0">
好按钮被触发时回叫
击确定按钮时调用，可以重写它来放入自己的逻辑
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Input`1.Blur">
      <summary v="2TivqD" i="0">
从输入元素移除焦点。
</summary>
    </member>
    <member name="M:AntDesign.Input`1.Focus(AntDesign.FocusBehavior,System.Boolean)">
      <summary v="2TJZHv" i="0">
具有可选行为的输入组件的焦点行为。
</summary>
      <param name="behavior" v="3ckSUH" i="0">枚举: AntDesign.FocusBehavior</param>
      <param name="preventScroll" v="mJzFU" i="0">当为true时，接收焦点的元素不会滚动到。</param>
    </member>
    <member name="M:AntDesign.Input`1.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <summary v="2rohGm" i="0">
当用户添加/删除内容时调用
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.InputNumber`1.TryParseValueFromString(System.String,`0@,System.String@)">
      <summary v="1YS4Nn" i="0">
始终返回true，如果输入字符串无效，result = default，如果输入字符串为null或空，result = DefaultValue
</summary>
      <param name="value" v="0000" i="0" />
      <param name="result" v="0000" i="0" />
      <param name="validationErrorMessage" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.InputPassword.Focus(AntDesign.FocusBehavior,System.Boolean)">
      <summary v="BBLs9" i="0">
具有可选行为的InputPassword组件的焦点行为。
wasm所需的特殊行为。
</summary>
      <param name="behavior" v="3ckSUH" i="0">枚举: AntDesign.FocusBehavior</param>
      <param name="preventScroll" v="mJzFU" i="0">当为true时，接收焦点的元素不会滚动到。</param>
    </member>
    <member name="M:AntDesign.Internal.DateTimeInputMaskConverter.Convert(System.String,System.String)">
      <summary v="1qVqcd" i="0">
将字符串值转换为掩码
</summary>
      <param name="value" v="0000" i="0" />
      <param name="mask" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.IsHiding">
      <summary v="4zx3a" i="0">
当覆盖完成隐藏时，IsPopup返回true
当叠加是隐藏 (播放隐藏动画)，IsPopup返回false，IsHiding返回true。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.UpdateChildState(AntDesign.Internal.Overlay,System.Boolean)">
      <summary v="4HGtC6" i="0">
设置是否有任何子覆盖显示或隐藏
覆盖不会隐藏，如果任何孩子正在显示
</summary>
      <param name="child" v="0000" i="0" />
      <param name="isChildOverlayShow" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.WaitFor(System.Func{System.Boolean},System.Int32,System.Int32)">
      <summary v="WmAnP" i="0">
将每隔给定的毫秒探测一个检查谓词，直到谓词为真或直到
探测次数用完了。
</summary>
      <param name="check" v="DTHnp" i="0">将传递每次在waittimeinmilsecondsperpropering之后运行的谓词。</param>
      <param name="probings" v="3vA775" i="0">探测的最大数量。达到此数字后，该方法结束。</param>
      <param name="waitTimeInMilisecondsPerProbing" v="3rKbiP" i="0">每次探测之间要等待多长时间。</param>
      <returns v="VAeqQ" i="0">任务</returns>
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.Close">
      <summary v="2KR58q" i="0">
将隐藏覆盖。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.IsOverlayShow">
      <summary v="2Ggocw" i="0">
检查覆盖当前是否处于可见状态。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.OnClickDiv(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="uNBE4" i="0">
处理触发器单击。
</summary>
      <param name="args" v="2rN4Oq" i="0">MouseEventArgs</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.OnMouseUp(System.Text.Json.JsonElement)">
      <summary v="4XMUqd" i="0">
在文档上鼠标向上
</summary>
      <param name="element" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.SetVisible(System.Boolean)">
      <summary v="3vKfxn" i="0">
切换覆盖可见性。
</summary>
      <param name="visible" v="P3osx" i="0">布尔值: 可见性true/false</param>
    </member>
    <member name="M:AntDesign.IOkCancelRef.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2qxEww" i="0">
触发取消按钮单击
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="1AzDVn" i="0">
点击触发好按钮
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef`1.CancelAsync(`0)">
      <summary v="2qxEww" i="0">
触发取消按钮单击
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef`1.OkAsync(`0)">
      <summary v="1AzDVn" i="0">
点击触发好按钮
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.MenuHelper.EqualsHrefExactlyOrIfTrailingSlashAdded(System.String,System.String)">
      <summary v="45QEiW" i="0">
比较两个uri是否相等，说明可选的尾随斜杠。
</summary>
      <param name="currentUriAbsolute" v="2FTHGm" i="0">当前位置的绝对URI。</param>
      <param name="hrefAbsolute" v="2oqpNf" i="0">要比较的绝对URI。</param>
      <returns v="0721d" i="0">如果URI相等，或者如果向当前URI添加尾部斜杠使它们相等，则为True; 否则为false。</returns>
    </member>
    <member name="M:AntDesign.MenuHelper.IsStrictlyPrefixWithSeparator(System.String,System.String)">
      <summary v="21TnT1" i="0">
确定字符串值是否严格为另一个字符串的前缀，前缀后带有分隔符。
</summary>
      <param name="value" v="4Mj5B9" i="0">要检查的字符串值。</param>
      <param name="prefix" v="3FK6u0" i="0">要检查的前缀。</param>
      <returns v="kserR" i="0">如果值以前缀开头，后跟分隔符，则为True; 否则为false。</returns>
    </member>
    <member name="M:AntDesign.MenuHelper.ShouldMatch(Microsoft.AspNetCore.Components.Routing.NavLinkMatch,System.String,System.String)">
      <summary v="2Yuawe" i="0">
根据给定的匹配条件确定当前URI是否应与指定的URI匹配。
</summary>
      <param name="match" v="1c2o8O" i="0">匹配条件 (精确或前缀)。</param>
      <param name="currentUriAbsolute" v="2FTHGm" i="0">当前位置的绝对URI。</param>
      <param name="hrefAbsolute" v="21c5Xn" i="0">要匹配的绝对URI。</param>
      <returns v="eIoT1" i="0">如果uri根据条件匹配，则为True; 否则为false。</returns>
    </member>
    <member name="M:AntDesign.MenuLink.Dispose(System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.MenuLink.OnInitialized">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.MenuLink.OnParametersSet">
      <inheritdoc />
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalClosingEventArgs.Reject">
      <summary v="1weYjX" i="0">
拒绝关闭模式。
</summary>
    </member>
    <member name="M:AntDesign.ModalRef.CloseAsync">
      <summary v="1C3EuD" i="0">
关闭模式对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.OpenAsync">
      <summary v="4ej4FH" i="0">
打开模式对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.SetConfirmLoading(System.Boolean)">
      <summary v="3rjfxG" i="0">
设置确认按钮的加载状态
</summary>
      <param name="loading" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.UpdateConfigAsync">
      <summary v="3HSUvR" i="0">
更新模态
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef`1.CancelAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalRef`1.OkAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalService.CheckConfirmOptionsIsNull(AntDesign.ConfirmOptions)">
      <summary v="ceR4u" i="0">
检查确认选项是否为空
</summary>
      <param name="options" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CloseModalAsync(AntDesign.ModalRef)">
      <summary v="32KVPZ" i="0">
关闭模式对话框
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Confirm(AntDesign.ConfirmOptions)">
      <summary v="446RlY" i="0">
创建并打开好-取消确认对话框
</summary>
      <param name="props" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.ConfirmAsync(AntDesign.ConfirmOptions)">
      <summary v="4GLQTQ" i="0">
创建并打开一个好-取消确认对话框，
并返回一个bool值，该值指示是否已单击好按钮
</summary>
      <param name="props" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateAsync(AntDesign.ConfirmOptions)">
      <summary v="mEobg" i="0">
创建并打开一个好-取消确认异步
</summary>
      <param name="config" v="VWReJ" i="0">选项</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateAsync``3(AntDesign.ConfirmOptions,``1)">
      <summary v="ozXdH" i="0">
&ldquo;创建并打开模板” 确认对话框
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateConfirmAsync(AntDesign.ConfirmOptions)">
      <summary v="mEobg" i="0">
创建并打开一个好-取消确认异步
</summary>
      <param name="config" v="VWReJ" i="0">选项</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateConfirmAsync``3(AntDesign.ConfirmOptions,``1)">
      <summary v="ozXdH" i="0">
&ldquo;创建并打开模板” 确认对话框
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
创建并打开模态
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``1(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
创建并打开模态
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``2(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
使用模板创建和打开模态
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <param name="options" v="tybuH" i="0">模态选项</param>
      <param name="componentOptions" v="3DQjZ" i="0">设置模板选项</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``3(AntDesign.ModalOptions,``1)">
      <summary v="BZBpW" i="0">
创建并打开带有模板组件的模态
</summary>
      <typeparam name="TComponent" v="32TQtz" i="0">模板组件的类型。</typeparam>
      <typeparam name="TComponentOptions" v="1r24BW" i="0">模板组件选项的类型。</typeparam>
      <typeparam name="TResult" v="3XbXsR" i="0">从模板组件返回的结果。</typeparam>
      <param name="options" v="tybuH" i="0">模态选项</param>
      <param name="componentOptions" v="3DQjZ" i="0">设置模板选项</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
创建并打开模态
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``1(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
创建并打开模态
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``2(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
使用模板创建和打开模态
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``3(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
使用模板创建和打开模态
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateOrOpenModalAsync(AntDesign.ModalRef)">
      <summary v="2bOTQb" i="0">
创建或打开模式对话框
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateOrOpenModalAsync``1(AntDesign.ModalRef{``0})">
      <summary v="2bOTQb" i="0">
创建或打开模式对话框
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Destroy(AntDesign.ConfirmRef)">
      <summary v="3tfjt5" i="0">
关闭确认对话框
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyAll">
      <summary v="1pE5wT" i="0">
关闭所有确认对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyAllConfirmAsync">
      <summary v="1pE5wT" i="0">
关闭所有确认对话框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="2arRzl" i="0">
关闭确认对话框
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Error(AntDesign.ConfirmOptions)">
      <summary v="2ux7xK" i="0">
创建并打开带有错误图标的好-取消确认对话框
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.ErrorAsync(AntDesign.ConfirmOptions)">
      <summary v="2Qy7Ap" i="0">
创建并打开带有错误图标的好-取消确认对话框，
并返回一个bool值，该值指示是否已单击好按钮
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Info(AntDesign.ConfirmOptions)">
      <summary v="2Ho26k" i="0">
创建并打开带有信息图标的好-取消确认对话框
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.InfoAsync(AntDesign.ConfirmOptions)">
      <summary v="4m1YE" i="0">
创建并打开带有信息图标的好-取消确认对话框，
并返回一个bool值，该值指示是否已单击好按钮
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.OpenConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="1l2VTY" i="0">
打开确认对话框
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Success(AntDesign.ConfirmOptions)">
      <summary v="33yL7U" i="0">
创建并打开带有成功图标的好-取消确认对话框
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.SuccessAsync(AntDesign.ConfirmOptions)">
      <summary v="4blYzC" i="0">
创建并打开带有成功图标的好-取消确认对话框，
并返回一个bool值，该值指示是否已单击好按钮
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.System#IDisposable#Dispose">
      <summary v="2VmIAJ" i="0">
实现接口IDisposable
</summary>
    </member>
    <member name="M:AntDesign.ModalService.Update(AntDesign.ConfirmRef)">
      <summary v="1NFloI" i="0">
更新确认哪个可见 = true
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.UpdateConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="1NFloI" i="0">
更新确认哪个可见 = true
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Warning(AntDesign.ConfirmOptions)">
      <summary v="fbH97" i="0">
创建并打开带有警告图标的好-取消确认对话框
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.WarningAsync(AntDesign.ConfirmOptions)">
      <summary v="3rhIU9" i="0">
创建并打开带有警告图标的好-取消确认对话框，
并返回一个bool值，该值指示是否已单击好按钮
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Notification.Config(AntDesign.NotificationGlobalConfig)">
      <summary v="1is6NV" i="0">
修改全局配置
</summary>
      <param name="defaultConfig" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.CloseAsync">
      <summary v="4UcOnP" i="0">
关闭通知框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.OpenAsync">
      <summary v="4SH2nV" i="0">
打开通知框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync">
      <summary v="3tSEAT" i="0">
修改Config属性后，更新通知框
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment})">
      <summary v="1mHuoq" i="0">
更新通知框的说明和消息
</summary>
      <param name="description" v="0000" i="0" />
      <param name="message" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment})">
      <summary v="2kVQOh" i="0">
更新通知框的说明
</summary>
      <param name="description" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Close(System.String)">
      <summary v="3jolhi" i="0">
按键关闭通知
</summary>
      <param name="key" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Config(AntDesign.NotificationGlobalConfig)">
      <summary v="4cjrnb" i="0">
为所有通知提供默认配置
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.CreateRefAsync(AntDesign.NotificationConfig)">
      <summary v="2Bc7tH" i="0">
只需创建一个NotificationRef而不打开它
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Destroy">
      <summary v="39Brkl" i="0">
销毁所有通知框
</summary>
    </member>
    <member name="M:AntDesign.NotificationService.Error(AntDesign.NotificationConfig)">
      <summary v="xrKET" i="0">
打开具有NotificationType.Error样式的通知框
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Info(AntDesign.NotificationConfig)">
      <summary v="pEMCC" i="0">
使用NotificationType.Info样式打开通知框
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Open(AntDesign.NotificationConfig)">
      <summary v="3MKyC" i="0">
打开通知框
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Success(AntDesign.NotificationConfig)">
      <summary v="4DfMLQ" i="0">
使用NotificationType.Success样式打开通知框
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.UpdateAsync(System.String,OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},System.Nullable{OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment}})">
      <summary v="3C21Nn" i="0">
更新已存在的通知框
</summary>
      <param name="key" v="0000" i="0" />
      <param name="description" v="0000" i="0" />
      <param name="message" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Warn(AntDesign.NotificationConfig)">
      <summary v="bXGWQ" i="0">
等效于警告方法
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Warning(AntDesign.NotificationConfig)">
      <summary v="2FtkJD" i="0">
使用NotificationType.Warning样式打开通知框
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Pagination.GetItemIcon(Microsoft.AspNetCore.Components.RenderFragment{AntDesign.PaginationItemRenderContext},System.String)">
      <summary v="yaMOW" i="0">
需要渲染的计算图标节点。
</summary>
      <param name="icon" v="0000" i="0" />
      <param name="label" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Panel.SetActive(System.Boolean)">
      <summary v="3xKgL8" i="0">
设置面板的活动状态
</summary>
      <param name="active" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Panel.Toggle">
      <summary v="3ojfpk" i="0">
切换面板的活动状态
</summary>
    </member>
    <member name="M:AntDesign.RangePicker`1.GetIndexValue(System.Int32)">
      <summary v="3Nl0wm" i="0">
通过选取器索引获取值
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.RangePicker`1.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,System.Int32)">
      <summary v="15XtPd" i="0">
如果在Input元素内不再按下键盘键，则通过EventCallBack调用方法。
</summary>
      <param name="e" v="19uVqq" i="0">包含在输入元素内按下的键 (组合)</param>
      <param name="index" v="3EB8uv" i="0">引用选择器索引-0表示开始日期，1表示结束日期</param>
    </member>
    <member name="M:AntDesign.RangePicker`1.OnValueChange(`0)">
      <summary v="3fp1oJ" i="0">
处理值的更改。
更改值时，pickervvalues应指向这些新值
或当前日期 (如果未传递任何值)。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseAll">
      <summary v="DxSPd" i="0">
关闭所有可关闭或未固定的页面
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseCurrent">
      <summary v="4fGDon" i="0">
关闭当前页面
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseOther(System.String)">
      <summary v="1AstJw" i="0">
关闭除具有指定键的页面之外的所有页面
</summary>
      <param name="key" v="41HRQc" i="0">指定页面的键</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.ClosePage(System.String)">
      <summary v="2DgLqm" i="0">
关闭指定键对应的页面
</summary>
      <param name="key" v="41HRQc" i="0">指定页面的键</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CreateTab(System.String,Microsoft.AspNetCore.Components.RenderFragment)">
      <summary v="1ZV1GJ" i="0">
创建一个没有导航的选项卡，页面不会真正呈现，直到选项卡被点击
</summary>
      <param name="pageUrl" v="cpmkn" i="0">目标页面的url</param>
      <param name="titleTemplate" v="40GSf5" i="0">标题显示在选项卡上</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CreateTab(System.String,System.String)">
      <summary v="1ZV1GJ" i="0">
创建一个没有导航的选项卡，页面不会真正呈现，直到选项卡被点击
</summary>
      <param name="pageUrl" v="cpmkn" i="0">目标页面的url</param>
      <param name="title" v="40GSf5" i="0">标题显示在选项卡上</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.GetAllAssembly">
      <summary v="3UYZ3R" i="0">
获取所有程序集
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.ReloadPage">
      <summary v="3tT3nA" i="0">
重新加载当前页面
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.ReloadPage(System.String)">
      <summary v="OXxMk" i="0">
重新加载指定键对应的页面
</summary>
      <param name="key" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.ScanReuseTabsPageAttribute">
      <summary v="Yp05V" i="0">
扫描ReuseTabsPageAttribute
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.Update">
      <summary v="5CJpu" i="0">
更新的<see cref="T:AntDesign.ReuseTabs" />状态</summary>
    </member>
    <member name="M:AntDesign.Select.Internal.SelectContent`2.GetFirstItemMaxWidth">
      <summary v="43hQcz" i="0">
任何项目都可能溢出。在第一项的情况下，当有
是SelectContent中的任何其他元素 (前缀，后缀，清除btn等)
默认MaxWidth将强制th SelectContent增长。更改MaxWidth
允许溢出项适合一行。
TODO: 使用相对单位
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.AllOptionsHidden">
      <summary v="40RjGr" i="0">
如果SelectOptions列表中的所有条目都将参数IsHidden设置为True，则返回true
</summary>
      <returns v="2q84ZY" i="0">如果所有项都设置为IsHidden(true)，则为true</returns>
    </member>
    <member name="M:AntDesign.Select`2.AppendLabelValue(System.String)">
      <summary v="1bSAjX" i="0">
在标记模式下附加标签项
</summary>
      <param name="label" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.CreateDeleteSelectOptions">
      <summary v="44SoRK" i="0">
当数据源更改时，创建或删除SelectOption
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ElementScrollIntoViewAsync(Microsoft.AspNetCore.Components.ElementReference)">
      <summary v="wAgqW" i="0">
通过JavaScript滚动到项目。
</summary>
      <param name="element" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.EvaluateValueChangedOutsideComponent(AntDesign.Select.Internal.SelectOptionItem{`0,`1},`0)">
      <summary v="4NsNUd" i="0">
当绑定值在组件外部更改时，则组件
必须根据传递的新值重新选择选定的项目。
</summary>
      <param name="optionItem" v="lDKGf" i="0">已选择的选项项。</param>
      <param name="value" v="2kKYpM" i="0">所选选项项的值。</param>
    </member>
    <member name="M:AntDesign.Select`2.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <summary v="4V1spf" i="0">
如果键盘更改了输入元素的值，则通过EventCallBack调用方法
</summary>
      <param name="e" v="1BvLkq" i="0">包含输入元素的值</param>
    </member>
    <member name="M:AntDesign.Select`2.OnKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="2Eypjm" i="0">
如果在输入元素内按下键，则通过EventCallback调用方法。
如果用户按下TAB循环槽元素，则该方法用于获取TAB事件。
如果接收到选项卡，则覆盖将被关闭并且输入元素blures。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.OnKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="15XtPd" i="0">
如果在Input元素内不再按下键盘键，则通过EventCallBack调用方法。
</summary>
      <param name="e" v="19uVqq" i="0">包含在输入元素内按下的键 (组合)</param>
    </member>
    <member name="M:AntDesign.Select`2.OnRemoveSelectedAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4XvNPB" i="0">
如果用户单击标记的关闭图标，则通过EventCallBack调用方法。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ProcessSelectedSelectOptions">
      <summary v="4g8hNe" i="0">
仅在使用ChildElement SelectOptions时使用。
如果项目在initization之后运行此过程
添加的也标记为选定。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.ResetValue">
      <summary v="cEne8" i="0">
由窗体重置方法调用
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ScrollToFirstSelectedItemAsync">
      <summary v="OQdQR" i="0">
搜索第一个选择的项目，将所有其他项目的IsActive设置为False，并通过JavaScript调用scrollintovew函数。
该方法用于在打开覆盖后滚动到第一个选择的项目。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetClassMap">
      <summary v="RBCbP" i="0">
设置CSS类以更改视觉样式
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetDefaultActiveFirstItemAsync">
      <summary v="1b9LQT" i="0">
如果DefaultActiveFirstItem为True，则未禁用的第一项 (True) 将设置为选定项。
如果没有项，则回退到clear方法。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetDropdownStyleAsync">
      <summary v="1rNbax" i="0">
获取Ref (JSInvoke) 的BoundingClientRect，并在px中设置min-width和width。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetInitialValuesAsync">
      <summary v="nJ8su" i="0">
初始化后设置初始值，该方法应只调用一次。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetInputBlurAsync">
      <summary v="2BVDnI" i="0">
检查焦点属性是否为true; 将焦点属性设置为false，更改
样式和blures通过DOM输入元素。它还调用OnBlur操作。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.TrySetDefaultValueAsync">
      <summary v="2yMz2T" i="0">
如果值为null (默认值)，则由OnAfterRenderAsync调用的方法
DefaultValue具有值或DefaultActiveFirstItem为True。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.TrySetDefaultValuesAsync">
      <summary v="3y6E36" i="0">
如果值为null (默认值)，则由OnAfterRenderAsync调用的方法
DefaultValues具有值或DefaultActiveFirstItem为True。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.ClearSelectedAsync">
      <summary v="38H8Nv" i="0">
清除selectValue(s) 属性并通过双向绑定将null(default) 值发送回。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.CloseAsync">
      <summary v="1jx2FJ" i="0">
关闭覆盖
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.CreateSelectOptionItem(System.String,System.Boolean)">
      <summary v="4s4PA" i="0">
创建选择选项项。主要是为了创建新的标签，这就是为什么IsAddedTag硬编码为true。
</summary>
      <param name="label" v="HyC3F" i="0">基于传递的标签创建</param>
      <param name="isActive" v="47SihR" i="0">如果设置为<c>true</c> [是活动的]。</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.EvaluateValuesChangedOutsideComponent(System.Collections.Generic.IEnumerable{`0})">
      <summary v="1z9pAS" i="0">
当绑定值在组件外部更改时，则组件
必须根据传递的新值重新选择选定的项目。
TODO :( Perf) 考虑使用哈希来确定传递的值是否与当前选择的值不同。
</summary>
      <param name="values" v="2odFbD" i="0">需要选择的值。</param>
    </member>
    <member name="M:AntDesign.SelectBase`2.InvokeOnSelectedItemChanged(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="3K1S7F" i="0">
一个单独的方法，用于调用ValuesChanged和OnSelectedItemsChanged以减少代码重复。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputBlurAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
      <summary v="4p4QI" i="0">
如果输入元素失去焦点，则通过EventCallBack调用方法
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputClearClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="1sG09T" i="0">
方法通过EventCallBack调用用户点击输入元素内的清除图标后。
将所有项的IsSelected和IsHidden属性设置为False。它更新覆盖位置，如果
SelectMode是标签或多个。调用OnClearSelected操作。将值设置为默认值。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
      <summary v="22mu2d" i="0">
如果输入元素获得焦点，则通过EventCallBack调用方法
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnRemoveSelectedAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4XvNPB" i="0">
如果用户单击标记的关闭图标，则通过EventCallBack调用方法。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnValuesChangeAsync(System.Collections.Generic.IEnumerable{`0})">
      <summary v="4VfcuR" i="0">
如果双向绑定更改了 @ bind-Values的值，则每次都会调用该方法。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.ResetValue">
      <summary v="cEne8" i="0">
由窗体重置方法调用
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.SetInputBlurAsync">
      <summary v="2BVDnI" i="0">
检查焦点属性是否为true; 将焦点属性设置为false，更改
样式和blures通过DOM输入元素。它还调用OnBlur操作。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.SetInputFocusAsync">
      <summary v="Rq9hv" i="0">
检查focus属性是否为False; 将focus属性设置为true，更改
样式，并通过DOM将焦点设置在输入元素上。它还调用OnFocus操作。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.SetValueAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4JZajd" i="0">
如果用户通过鼠标或键盘选择/取消选择项目，则每次调用该方法。
不要在此函数之外更改IsSelected属性。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.UnhideSelectOptions">
      <summary v="1znG6K" i="0">
取消隐藏所有选择选项，但在为true的情况下<see cref="P:AntDesign.SelectBase`2.HideSelected" />选择的选项除外
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.UpdateOverlayPositionAsync">
      <summary v="4VAGyk" i="0">
通知覆盖更新位置。
</summary>
    </member>
    <member name="M:AntDesign.Table`1.AntDesign#ITable#OnColumnInitialized">
      <summary v="3j8YuV" i="0">
当设置了所有列时，将调用此方法
</summary>
    </member>
    <member name="M:AntDesign.Table`1.AntDesign#ITable#RebuildColumns(System.Boolean)">
      <summary v="1lzzz9" i="0">
对于每个列的变化，它需要重新渲染四次
<br />1.重新渲染一次以识别在<see cref="M:AntDesign.Table`1.OnParametersSet" />调用后有任何列更改，触发渲染空的ChildContent。
<br />2.在调用at<see cref="M:AntDesign.ITable.RebuildColumns(System.Boolean)" />后为空ChildContent重新呈现一次，然后触发重新建源内容的呈现。
<br />3.在调用at<see cref="M:AntDesign.Table`1.OnAfterRenderAsync(System.Boolean)" />后重新呈现用于重建列，然后在列准备就绪后触发用于加载数据的呈现。
<br />4.在<see cref="M:AntDesign.Table`1.OnColumnInitialized" />调用后重新呈现重新加载数据</summary>
      <param name="add" v="4duF5f" i="0">是否添加/删除列</param>
      <remarks>
            lifecycle process: columns was changed -&gt; render#1(true) -&gt; column add/dispose -&gt; call rebuild(call render#2) -&gt; render#2(true) -&gt; OnAfterRenderAsync#2 (call render#3) -&gt; render#3(true)
            -&gt; OnColumnInitialized call render#4 -&gt; OnAfterRenderAsync#4 -&gt; OnAfterRenderAsync#3 -&gt; OnAfterRenderAsync#1 (the last 2 steps are duplicated and useless)
            </remarks>
      <returns v="3rKED9" i="0">是否开始重建</returns>
    </member>
    <member name="M:AntDesign.Table`1.ClearSelectedRows">
      <summary v="1OT3qB" i="0">
清除当前页的选定行
</summary>
    </member>
    <member name="M:AntDesign.Table`1.GetQueryModel">
      <summary v="3dqLFg" i="0">
获取表的查询模型
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.InvokeDataSourceHasChanged">
      <summary v="0pX44" i="0">
在更改数据源以刷新表的状态后调用此方法。
</summary>
            Make the method protected to allow derived classes to call it.
        </member>
    <member name="M:AntDesign.Table`1.ReloadData">
      <summary v="3acSVM" i="0">
重新加载表的数据，转到第1页
</summary>
    </member>
    <member name="M:AntDesign.Table`1.ReloadData(AntDesign.TableModels.QueryModel)">
      <summary v="1ge9b8" i="0">
从提供的查询模型重新加载表的数据
</summary>
      <param name="queryModel" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.ReloadData(System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary v="12ueqt" i="0">
重新加载表的数据并转到页面大小的特定页面
</summary>
      <param name="pageIndex" v="V8yia" i="0">重新加载后要加载的页面。默认为1。</param>
      <param name="pageSize" v="3BZbSS" i="0">重新加载后使用的页面大小。默认值为的当前值 <see cref="P:AntDesign.Table`1.PageSize" /></param>
    </member>
    <member name="M:AntDesign.Table`1.ResetData">
      <summary v="3T6SeN" i="0">
将表重置为其默认视图。转到页面1，默认页面大小并清除排序和筛选。
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SelectAll">
      <summary v="1zOBwL" i="0">
选择当前页的所有行
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(`0)">
      <summary v="20O0Av" i="0">
选择一个项目
</summary>
      <param name="item" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.ICollection{System.String})">
      <summary v="ZRvp2" i="0">
如果可能的话，请使用<see cref="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.IEnumerable{`0})" />，
因为启用虚拟化时，此方法将无法正确选择不可见行中的项目。
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.IEnumerable{`0})">
      <summary v="31oGTq" i="0">
设置所有选定项目
</summary>
      <param name="items" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.UnselectAll">
      <summary v="4ITSSv" i="0">
取消选择当前页的所有行
</summary>
    </member>
    <member name="M:AntDesign.TableModels.QueryModel`1.GetFilterExpression">
      <summary v="2TdfGV" i="0">
获取orm (如实体框架) 的当前过滤器表达式。
,您可以通过使用数据源执行表达式来获取过滤后的数据。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TableModels.SortModel`1.Compare(`0,`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.Tabs.AddTabPane(AntDesign.TabPane)">
      <summary v="2lX08c" i="0">
将<see cref="T:AntDesign.TabPane" />添加到 <see cref="T:AntDesign.Tabs" /></summary>
      <param name="tabPane" v="1YkHnc" i="0">要添加的AntTabPane</param>
      <exception cref="T:System.ArgumentNullException">Key is null</exception>
      <exception cref="T:System.ArgumentException">An AntTabPane with the same key already exists</exception>
    </member>
    <member name="M:AntDesign.TextArea.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.Tree`1.AddChildNode(AntDesign.TreeNode{`0})">
      <summary v="1A85p0" i="0">
添加节点
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.CollapseAll(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="4cORof" i="0">
折叠所有节点
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.DeselectAll">
      <summary v="22GThZ" i="0">
取消选择所有节点
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.ExpandAll(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="gV1mk" i="0">
展开所有节点
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.FindFirstOrDefaultNode(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="eypyL" i="0">
查找节点
</summary>
      <param name="predicate" v="3xQfy6" i="0">谓词</param>
      <param name="recursive" v="DgcMI" i="0">递归查找</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.GetNode(System.String)">
      <summary v="3HcUYe" i="0">
从密钥获取TreeNode
</summary>
      <param name="key" v="1LwHKs" i="0">钥匙</param>
    </member>
    <member name="M:AntDesign.Tree`1.SelectAll">
      <summary v="4NBEb5" i="0">
选择所有节点
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.TriggerOnSelect(AntDesign.TreeNode{`0})">
      <summary v="Z97NP" i="0">
触发事件OnSelect
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.TriggerOnUnselect(AntDesign.TreeNode{`0})">
      <summary v="3ttz41" i="0">
触发事件OnUnselect
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.UncheckAll">
      <summary v="4fGZnq" i="0">
取消选中所有节点
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.UpdateSelectedKeys">
      <summary v="4Ddxug" i="0">
更新绑定数据
</summary>
    </member>
    <member name="M:AntDesign.TreeIndent`1.GetParentNode(AntDesign.TreeNode{`0},System.Int32)">
      <summary v="21vmtR" i="0">
查找特定级别的父节点
</summary>
      <param name="node" v="0000" i="0" />
      <param name="level" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddChildNode(`0)">
      <summary v="4Woj0Y" i="0">
添加子节点
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddNextNode(`0)">
      <summary v="4UcvGu" i="0">
在节点下添加节点
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddNode(AntDesign.TreeNode{`0})">
      <summary v="11Ldf2" i="0">
将节点添加到父节点
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddPreviousNode(`0)">
      <summary v="1chHuB" i="0">
在节点前添加节点
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.CheckAllChildren">
      <summary v="44neT7" i="0">
检查所有子节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.CollapseAll">
      <summary v="0InAm" i="0">
折叠所有子节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.Downgrade">
      <summary v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.DragMoveDown(AntDesign.TreeNode{`0})">
      <summary v="24tZuq" i="0">
拖放到目标的底部
</summary>
      <param name="treeNode" v="3w3ozB" i="0">目标</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.DragMoveInto(AntDesign.TreeNode{`0})">
      <summary v="2DcpoU" i="0">
拖放到子节点中
</summary>
      <param name="treeNode" v="3w3ozB" i="0">目标</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.Expand(System.Boolean)">
      <summary v="1Mpf35" i="0">
展开节点
</summary>
      <param name="expanded" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.ExpandAll">
      <summary v="34qmuW" i="0">
展开所有子节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.FindFirstOrDefaultNode(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="3HXbN3" i="0">
查找节点
</summary>
      <param name="predicate" v="3xQfy6" i="0">谓词</param>
      <param name="recursive" v="DgcMI" i="0">递归查找</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetNextNode">
      <summary v="4CXVjG" i="0">
获取下一个节点
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentChildDataItems">
      <summary v="2YwfqR" i="0">
获得上级数据集合
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentChildNodes">
      <summary v="1kSesi" i="0">
获取父节点的子节点
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentNodes">
      <summary v="2gK1NO" i="0">
获取父数据集
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetPreviousNode">
      <summary v="WrvBC" i="0">
获取上一个节点
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveDown">
      <summary v="3BRJY8" i="0">
下移节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveInto(AntDesign.TreeNode{`0})">
      <summary v="1U6xDN" i="0">
节点移动到子节点
</summary>
      <param name="treeNode" v="4IISiB" i="0">目标节点</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveUp">
      <summary v="2ZOqfQ" i="0">
向上移动节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.OnCheckBoxClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="2xEXWN" i="0">
单击选择框时触发
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.OnSwitcherClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="3iMt4O" i="0">
节点切换
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.OpenPropagation(System.Boolean)">
      <summary v="4fa8eR" i="0">
扩张的父母
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.Remove">
      <summary v="sd5wW" i="0">
删除
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.RemoveNode">
      <summary v="dGVDZ" i="0">
删除当前节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.SetChecked(System.Boolean)">
      <summary v="1BDNpt" i="0">
设置复选框状态
</summary>
      <param name="check" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetChildChecked(AntDesign.TreeNode{`0},System.Boolean,System.Boolean,System.Boolean)">
      <summary v="1UnxiI" i="0">
设置子节点的复选框状态
</summary>
      <param name="subnode" v="0000" i="0" />
      <param name="check" v="0000" i="0" />
      <param name="isManual" v="0000" i="0" />
      <param name="forceRecursive" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetParentTargetContainer(System.Boolean)">
      <summary v="bQvqo" i="0">
设置拖放目标节点容器
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.SetSelected(System.Boolean)">
      <summary v="x0QNF" i="0">
设置选择状态
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetTargetBottom(System.Boolean)">
      <summary v="1VAIex" i="0">
设置释放目标位置的节点
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SwitchAllNodes(AntDesign.TreeNode{`0},System.Boolean)">
      <summary v="3aHy9v" i="0">
节点展开关闭
</summary>
      <param name="node" v="0000" i="0" />
      <param name="expanded" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.UnCheckAllChildren">
      <summary v="3yTjP3" i="0">
取消选中所有子节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.UpdateCheckState(System.Nullable{System.Boolean})">
      <summary v="9fWzk" i="0">
更新检查状态
</summary>
      <param name="halfChecked" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.Upgrade">
      <summary v="12yZbC" i="0">
升级节点
</summary>
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDblClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragEnd(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="9faGh" i="0">
拖动结束
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragEnter(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragLeave(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="1uwlgW" i="0">
离开释放目标
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragOver(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="2qw6tf" i="0">
如果目标向右移动超出OffsetX距离，则可以将其视为子级
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragStart(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDrop(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.UploadFileItem.IsPicture">
      <summary v="qcX1K" i="0">
检查文件是否为图片。有关将导致此返回true的扩展，请参见<see cref="P:AntDesign.UploadFileItem.ImageExtensions" />。
</summary>
      <returns v="ejNLF" i="0">布尔值，指示文件是否为图片。</returns>
    </member>
    <member name="P:AntDesign.ActionColumn.CellRender">
      <summary v="1CUwB6" i="0">
行的列内容。优先于 <see cref="P:AntDesign.ColumnBase.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Affix.ChildContent">
      <summary v="3ll9iq" i="0">
附加内容
</summary>
    </member>
    <member name="P:AntDesign.Affix.OffsetBottom">
      <summary v="1bVteV" i="0">
距视口底部的偏移量 (以像素为单位)
</summary>
    </member>
    <member name="P:AntDesign.Affix.OffsetTop">
      <summary v="2aj1Wk" i="0">
距视口顶部的偏移量 (以像素为单位)
</summary>
    </member>
    <member name="P:AntDesign.Affix.OnChange">
      <summary v="398SQU" i="0">
更改词缀状态时的回调。传递一个布尔值，该布尔值指示当前是否附加了词缀。
</summary>
    </member>
    <member name="P:AntDesign.Affix.TargetSelector">
      <summary v="4U8mqQ" i="0">
指定可滚动区域DOM节点的CSS选择器
</summary>
      <default value="window" />
    </member>
    <member name="P:AntDesign.Alert.AfterClose">
      <summary v="1HTYuL" i="0">
当关闭动画完成时调用
</summary>
    </member>
    <member name="P:AntDesign.Alert.Banner">
      <summary v="1rzYJy" i="0">
是否显示为横幅
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Alert.ChildContent">
      <summary v="3ll9iq" i="0">
附加内容
</summary>
    </member>
    <member name="P:AntDesign.Alert.Closable">
      <summary v="h5EMt" i="0">
是否可以关闭警报
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Alert.CloseText">
      <summary v="29NGpS" i="0">
关闭文本以显示
</summary>
    </member>
    <member name="P:AntDesign.Alert.Description">
      <summary v="3xZDj2" i="0">
警报的附加内容
</summary>
    </member>
    <member name="P:AntDesign.Alert.Icon">
      <summary v="rqvuO" i="0">
自定义图标，当showIcon为true时有效
</summary>
    </member>
    <member name="P:AntDesign.Alert.IconType">
      <summary v="4EXXPV" i="0">
要显示的图标。
</summary>
    </member>
    <member name="P:AntDesign.Alert.Message">
      <summary v="3ySxVB" i="0">
警报内容
</summary>
    </member>
    <member name="P:AntDesign.Alert.MessageTemplate">
      <summary v="1VjZjM" i="0">
内容模板
</summary>
    </member>
    <member name="P:AntDesign.Alert.OnClose">
      <summary v="3qPRmi" i="0">
警报关闭时的回调。
</summary>
    </member>
    <member name="P:AntDesign.Alert.ShowIcon">
      <summary v="2CtP65" i="0">
是否显示图标。
</summary>
    </member>
    <member name="P:AntDesign.Alert.Type">
      <summary v="4TLMol" i="0">
警报样式的类型，选项: 成功，信息，警告，错误
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Affix">
      <summary v="G5LeF" i="0">
锚定的固定方式
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Anchor.Bounds">
      <summary v="2ba1Sf" i="0">
锚区域的边界距离
</summary>
      <default value="5" />
    </member>
    <member name="P:AntDesign.Anchor.ChildContent">
      <summary v="voFNe" i="0">
组件的内容。
</summary>
    </member>
    <member name="P:AntDesign.Anchor.GetContainer">
      <summary v="2yuhxT" i="0">
滚动容器
</summary>
      <default value="window" />
    </member>
    <member name="P:AntDesign.Anchor.GetCurrentAnchor">
      <summary v="4JAkIk" i="0">
自定义锚点突出显示
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Key">
      <summary v="13ppKL" i="0">
用于在键更改时刷新链接列表。
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OffsetBottom">
      <summary v="4gFv5O" i="0">
计算滚动位置时从底部偏移的像素
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OffsetTop">
      <summary v="1vMGhz" i="0">
计算滚动位置时从顶部偏移的像素
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Anchor.OnChange">
      <summary v="4f9pah" i="0">
通过单击或滚动更改锚点时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OnClick">
      <summary v="4N09j8" i="0">
设置处理程序以处理click事件
</summary>
    </member>
    <member name="P:AntDesign.Anchor.ShowInkInFixed">
      <summary v="11ujva" i="0">
是否在固定模式下显示墨球
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Anchor.TargetOffset">
      <summary v="39FgZF" i="0">
锚点滚动偏移，默认为 <see cref="P:AntDesign.Anchor.OffsetTop" /></summary>
    </member>
    <member name="P:AntDesign.AnchorLink.ChildContent">
      <summary v="LxDa8" i="0">
附加内容。不覆盖标题。
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Href">
      <summary v="3mPUVd" i="0">
超链接的目标
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Target">
      <summary v="278vCU" i="0">
指定显示链接URL的位置
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Title">
      <summary v="1A9uXB" i="0">
超链接的内容
</summary>
    </member>
    <member name="P:AntDesign.AntComponentBase.RefBack">
      <summary v="2fs6li" i="0">
一个<see cref="T:AntDesign.ForwardRef" />实例。用于获取对内部DOM的引用。
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Class">
      <summary v="1PA7jq" i="0">
为DOM元素指定一个或多个类名。
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Id">
      <summary v="2sbSpG" i="0">
组件的HTML的ID
</summary>
      <default value="Uniquely Generated ID" />
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Ref">
      <summary v="3v0RLn" i="0">
已返回DOM元素的ElementRef引用。
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Style">
      <summary v="34unoz" i="0">
指定DOM元素的内联样式。
</summary>
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.AutoFocus">
      <summary v="1npFta" i="0">
是否对输入进行自动对焦
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.Checked">
      <summary v="pR8oE" i="0">
是否检查输入
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.CheckedChanged">
      <summary v="3VLzSp" i="0">
获取或设置更新绑定的checked值的回调。
</summary>
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.Disabled">
      <summary v="BRDoU" i="0">
禁用输入
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.OnChange">
      <summary v="2O4Jlz" i="0">
输入更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.AdditionalAttributes">
      <summary v="3jnG2N" i="0">
获取或设置将应用于创建的元素的附加特性的集合。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CultureInfo">
      <summary v="OrqPJ" i="0">
将字符串转换为值并将值转换为字符串时将使用什么文化
对于InputNumber组件很有用。
</summary>
      <default value="CultureInfo.CurrentCulture" />
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CurrentValue">
      <summary v="4WBLIM" i="0">
获取或设置输入的当前值。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString">
      <summary v="DJ3yY" i="0">
获取或设置输入的当前值，表示为字符串。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.EditContext">
      <summary v="3o9jfY" i="0">
获取关联的<see cref="P:AntDesign.AntInputComponentBase`1.EditContext" />。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.FieldIdentifier">
      <summary v="4LejCf" i="0">
获取绑定值的<see cref="P:AntDesign.AntInputComponentBase`1.FieldIdentifier" />。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.NameAttributeValue">
      <summary v="2QEQYC" i="0">
获取要用于输入的 "name" 属性的值。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.Size">
      <summary v="P25m2" i="0">
输入框的大小。注意: 在表单的上下文中，
使用 &ldquo;大” 尺寸。可用: &ldquo;大” &ldquo;默认” &ldquo;小”
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValidationMessages">
      <summary v="19XaGu" i="0">
FormItem的验证消息
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.Value">
      <summary v="yoUC3" i="0">
获取或设置输入的值。这应该与双向绑定一起使用。
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValueChanged">
      <summary v="2lXscZ" i="0">
更新绑定值的回调。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValueExpression">
      <summary v="28YahG" i="0">
标识绑定值的表达式。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValuesExpression">
      <summary v="3gftm2" i="0">
一个表达式，用于标识可枚举的绑定值。
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Bordered">
      <summary v="3eCm5E" i="0">
在列表上放一个边框
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntList`1.ChildContent">
      <summary v="2FxNFA" i="0">
列表的内容
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.DataSource">
      <summary v="1n0EpW" i="0">
要在列表中显示的项目列表
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Footer">
      <summary v="4QTEYo" i="0">
列表的页脚内容
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Grid">
      <summary v="3sH0AF" i="0">
列表的网格类型
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Header">
      <summary v="1F0C7c" i="0">
列表的标头内容
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.ItemLayout">
      <summary v="2nYwCr" i="0">
list的布局，默认为水平，如果需要垂直列表，请将itemLayout属性设置为vertical
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Loading">
      <summary v="3L4453" i="0">
在列表上显示加载
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntList`1.LoadMore">
      <summary v="2wqp8f" i="0">
用于加载的列表项末尾的内容更多
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.NoResult">
      <summary v="1XuNXN" i="0">
当前未使用
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Pagination">
      <summary v="4YhZwA" i="0">
用于对列表进行分页的选项
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Size">
      <summary v="1RqWZH" i="0">
列表的大小
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.AntList`1.Split">
      <summary v="3WTHju" i="0">
在列表项下切换拆分的呈现
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.AllowFilter">
      <summary v="31z86x" i="0">
允许筛选
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.AutoCompleteOptions">
      <summary v="4Vipzt" i="0">
列出对象集合
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.Backfill">
      <summary v="1eOqoK" i="0">
使用键盘选择项目时，将选定项目回填到输入中
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.BoundaryAdjustMode">
      <summary v="43Sv5h" i="0">
覆盖调整策略 (例如，当浏览器调整大小时)。检查
</summary>
      <default value="TriggerBoundaryAdjustMode.InView" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.ChildContent">
      <summary v="1ix7Vu" i="0">
下拉列表的内容
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.CompareWith">
      <summary v="3NNCvY" i="0">
对比度，用于比较两个对象是否相同
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.DebounceMilliseconds">
      <summary v="34bwxT" i="0">
延迟KeyUp事件的处理，直到用户停止
键入预定的时间量
</summary>
      <default value="250" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.DefaultActiveFirstOption">
      <summary v="39Ppty" i="0">
默认情况下使第一个选项处于活动状态或不处于活动状态
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.Disabled">
      <summary v="3lHEsi" i="0">
禁用
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.FilterExpression">
      <summary v="3el3u1" i="0">
筛选器表达式
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnActiveChange">
      <summary v="1TFw3l" i="0">
活动项更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnInput">
      <summary v="2R5yCc" i="0">
输入更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnPanelVisibleChange">
      <summary v="4UcsZ4" i="0">
面板可见性更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnSelectionChange">
      <summary v="1caslt" i="0">
选择更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionDataItems">
      <summary v="3hYL8K" i="0">
绑定列表数据项格式的数据源
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionFormat">
      <summary v="1vuYrb" i="0">
格式选项，您可以自定义显示格式
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.Options">
      <summary v="4ATRvE" i="0">
要在下拉列表中显示的选项
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionTemplate">
      <summary v="3T0G9o" i="0">
选项模板
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayClassName">
      <summary v="1Zz4Zw" i="0">
传递给overlay的类名
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayStyle">
      <summary v="4OJsAG" i="0">
传递到覆盖的样式
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayTemplate">
      <summary v="1v9d2K" i="0">
所有选项模板
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.Placeholder">
      <summary v="3VHNBc" i="0">
输入元素占位符
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.PopupContainerSelector">
      <summary v="1yjJ1F" i="0">
弹出窗口的容器选择器
</summary>
      <default value="body" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.SelectedItem">
      <summary v="1SHHXV" i="0">
从下拉列表中选择的项目
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.ShowPanel">
      <summary v="19YFkB" i="0">
显示选项下拉列表
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.Width">
      <summary v="5XEbj" i="0">
输入的宽度，给定int时的像素，给定字符串时给CSS Width属性的全值
</summary>
    </member>
    <member name="P:AntDesign.AutoCompleteOption.ChildContent">
      <summary v="2Yg8Yk" i="0">
选项的标签。优先于标签
</summary>
    </member>
    <member name="P:AntDesign.AutoCompleteOption.Disabled">
      <summary v="16XAKT" i="0">
是否禁用选项
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AutoCompleteOption.Label">
      <summary v="3qVCxl" i="0">
选项的标签
</summary>
      <default value="Value.ToString()" />
    </member>
    <member name="P:AntDesign.AutoCompleteOption.Value">
      <summary v="4AJSrd" i="0">
选项的值
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Alt">
      <summary v="4PwqeG" i="0">
图像的替代文本
</summary>
    </member>
    <member name="P:AntDesign.Avatar.ChildContent">
      <summary v="2sGD0A" i="0">
要在头像形状中显示的内容。优先于 <see cref="P:AntDesign.Avatar.Text" /></summary>
    </member>
    <member name="P:AntDesign.Avatar.Icon">
      <summary v="3FNtTd" i="0">
要显示的图标
</summary>
    </member>
    <member name="P:AntDesign.Avatar.OnError">
      <summary v="2GlTzv" i="0">
传递给<see cref="P:AntDesign.Avatar.Src" />的图像加载失败时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Overflow">
      <summary v="XJk6e" i="0">
超过组最大计数
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Shape">
      <summary v="2o70s4" i="0">
头像的形状
</summary>
      <default value="AvatarShape.Circle" />
    </member>
    <member name="P:AntDesign.Avatar.Size">
      <summary v="2ePoOp" i="0">
头像的大小。有关可能的值，请参见<see cref="T:AntDesign.AntSizeLDSType" />。
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Avatar.Src">
      <summary v="1td510" i="0">
头像的图像src。如果加载失败， <see cref="P:AntDesign.Avatar.Icon" />和<see cref="P:AntDesign.Avatar.ChildContent" />/<see cref="P:AntDesign.Avatar.Text" />将继续显示。
</summary>
    </member>
    <member name="P:AntDesign.Avatar.SrcSet">
      <summary v="1GCOtz" i="0">
用于不同屏幕分辨率的源列表。直接传递给<c>img</c>标签。
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Text">
      <summary v="1okoiv" i="0">
要在头像中显示的文本字符串。典型的用途是显示首字母。
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.ChildContent">
      <summary v="2cODQ0" i="0">
子内容
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.MaxCount">
      <summary v="1FHFVw" i="0">
要显示的最大头像
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.MaxPopoverPlacement">
      <summary v="zxrWk" i="0">
多余的头像Popover的放置
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.MaxStyle">
      <summary v="JOEEV" i="0">
多余的头像风格的风格:
</summary>
    </member>
    <member name="P:AntDesign.BackTop.ChildContent">
      <summary v="1TRzc0" i="0">
按钮的内容。优先于图标。
</summary>
    </member>
    <member name="P:AntDesign.BackTop.Icon">
      <summary v="Bghi3" i="0">
按钮的图标
</summary>
      <default value="vertical-align-top" />
    </member>
    <member name="P:AntDesign.BackTop.OnClick">
      <summary v="1MUw6n" i="0">
单击BackTop时执行回调。不会覆盖默认功能。
</summary>
    </member>
    <member name="P:AntDesign.BackTop.TargetSelector">
      <summary v="i3p2B" i="0">
按钮的可滚动区域
</summary>
      <default value="window" />
    </member>
    <member name="P:AntDesign.BackTop.VisibilityHeight">
      <summary v="9DMwc" i="0">
按钮变为可见的滚动偏移量，以px为
</summary>
      <default value="400" />
    </member>
    <member name="P:AntDesign.Badge.ChildContent">
      <summary v="3K0w9c" i="0">
包装这个项目。
</summary>
    </member>
    <member name="P:AntDesign.Badge.Color">
      <summary v="3hwCN6" i="0">
自定义徽章状态点颜色。使用此参数将使徽章成为状态点。
</summary>
    </member>
    <member name="P:AntDesign.Badge.Count">
      <summary v="3xDbds" i="0">
要在徽章中显示的数字
</summary>
    </member>
    <member name="P:AntDesign.Badge.CountTemplate">
      <summary v="3mO9Ri" i="0">
要显示在计数位置的模板
</summary>
    </member>
    <member name="P:AntDesign.Badge.Dot">
      <summary v="2fwY3p" i="0">
是否显示点而不是计数
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Badge.Offset">
      <summary v="2TKOcL" i="0">
设置徽章点的偏移量，如 (左，上)
</summary>
    </member>
    <member name="P:AntDesign.Badge.OverflowCount">
      <summary v="4wMP5" i="0">
要显示的最大计数
</summary>
      <default value="99" />
    </member>
    <member name="P:AntDesign.Badge.PresetColor">
      <summary v="48RxSA" i="0">
将徽章状态点设置为预设颜色。使用此参数将使徽章成为状态点。
</summary>
    </member>
    <member name="P:AntDesign.Badge.ShowZero">
      <summary v="An9Bu" i="0">
计数为零时是否显示徽章
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Badge.Size">
      <summary v="2hUVCd" i="0">
徽章的大小
</summary>
    </member>
    <member name="P:AntDesign.Badge.Status">
      <summary v="2SAJpA" i="0">
将标记点设置为状态颜色。使用此参数将使徽章成为状态点。
</summary>
    </member>
    <member name="P:AntDesign.Badge.Text">
      <summary v="mNMHX" i="0">
状态点旁边的显示文本
</summary>
    </member>
    <member name="P:AntDesign.Badge.Title">
      <summary v="GmAt5" i="0">
悬停在徽章上时要显示的文本。默认值为Count的值
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.ChildContent">
      <summary v="3K0w9c" i="0">
包装这个项目。
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Color">
      <summary v="45tQm" i="0">
自定义功能区颜色
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Placement">
      <summary v="1w1VYs" i="0">
设置功能区的位置。
</summary>
      <default value="end" />
    </member>
    <member name="P:AntDesign.BadgeRibbon.Text">
      <summary v="3jivWP" i="0">
ribbon的文本字符串。
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.TextTemplate">
      <summary v="b3qmQ" i="0">
功能区的文本内容。优先于 <see cref="P:AntDesign.BadgeRibbon.Text" /></summary>
    </member>
    <member name="P:AntDesign.Breadcrumb.AutoGenerate">
      <summary v="3CaXYE" i="0">
目前没有使用。计划未来的发展。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Breadcrumb.ChildContent">
      <summary v="02z6m" i="0">
面包屑的内容。应包含BreadcrumbItem元素
</summary>
    </member>
    <member name="P:AntDesign.Breadcrumb.Separator">
      <summary v="3PPCFZ" i="0">
项目之间的分隔符
</summary>
      <default value="/" />
    </member>
    <member name="P:AntDesign.BreadcrumbItem.ChildContent">
      <summary v="1tClXq" i="0">
项目的内部内容
</summary>
    </member>
    <member name="P:AntDesign.BreadcrumbItem.Href">
      <summary v="2ngrfH" i="0">
项目的链接。提供此功能会将ChildContent包装在此链接的锚点标记中。
</summary>
    </member>
    <member name="P:AntDesign.BreadcrumbItem.OnClick">
      <summary v="2PYceh" i="0">
单击回拨
</summary>
    </member>
    <member name="P:AntDesign.BreadcrumbItem.Overlay">
      <summary v="1TExH2" i="0">
覆盖下拉菜单
</summary>
    </member>
    <member name="P:AntDesign.Button.AriaLabel">
      <summary v="3lc7zV" i="0">
设置aria-label属性的值
</summary>
    </member>
    <member name="P:AntDesign.Button.Block">
      <summary v="4dlKNJ" i="0">
使按钮宽度适合其父宽度的选项
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.ChildContent">
      <summary v="2ZM4UH" i="0">
按钮的内容。
</summary>
    </member>
    <member name="P:AntDesign.Button.Color">
      <summary v="Zhn2Z" i="0">
设置按钮的颜色。
</summary>
      <default value="Color.None" />
    </member>
    <member name="P:AntDesign.Button.Danger">
      <summary v="38p6E3" i="0">
设置按钮的危险状态。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.Disabled">
      <summary v="2k5NmL" i="0">
是否禁用 &ldquo;按钮”。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.Ghost">
      <summary v="Sd2qi" i="0">
使背景透明并反转文本和边框颜色
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.HtmlType">
      <summary v="RzH3K" i="0">
设置按钮元素的原始html类型。
</summary>
      <default value="button" />
    </member>
    <member name="P:AntDesign.Button.Icon">
      <summary v="WDN78" i="0">
设置按钮的图标组件。
</summary>
    </member>
    <member name="P:AntDesign.Button.Loading">
      <summary v="3cOuxj" i="0">
显示加载指示器。你必须自己写加载逻辑。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.NoSpanWrap">
      <summary v="4UYg0o" i="0">
不要用 &lt;span&gt; 换行
</summary>
    </member>
    <member name="P:AntDesign.Button.OnClick">
      <summary v="2T2oFB" i="0">
单击 &ldquo;按钮” 时回调
</summary>
    </member>
    <member name="P:AntDesign.Button.OnClickStopPropagation">
      <summary v="QjNIe" i="0">
单击按钮时不传播事件。
</summary>
    </member>
    <member name="P:AntDesign.Button.Shape">
      <summary v="4PnLWH" i="0">
可以设置按钮形状: 'circle' | 'round' 或 'null' (默认为矩形)。
</summary>
      <default value="null" />
    </member>
    <member name="P:AntDesign.Button.Size">
      <summary v="P6T6U" i="0">
设置按钮的大小。
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.Button.Type">
      <summary v="V9Agx" i="0">
按钮的类型。
</summary>
      <default value="ButtonType.Default" />
    </member>
    <member name="P:AntDesign.Calendar.CultureInfo">
      <summary v="41bNP6" i="0">
用于设置格式的区域性信息
</summary>
    </member>
    <member name="P:AntDesign.Calendar.DateCellRender">
      <summary v="VjCJ3" i="0">
自定义日期单元格的显示，返回的内容将附加到单元格
</summary>
    </member>
    <member name="P:AntDesign.Calendar.DateFullCellRender">
      <summary v="N6Pzo" i="0">
自定义日期单元格的显示，返回的内容将覆盖单元格
</summary>
    </member>
    <member name="P:AntDesign.Calendar.DefaultValue">
      <summary v="2Td99N" i="0">
所选日期的默认值。设置时，将设置 <see cref="P:AntDesign.Calendar.Value" /></summary>
    </member>
    <member name="P:AntDesign.Calendar.DisabledDate">
      <summary v="2tbld3" i="0">
确定特定日期是否被禁用的函数
</summary>
    </member>
    <member name="P:AntDesign.Calendar.FullScreen">
      <summary v="2FPt2i" i="0">
日历是否应占用所有可用空间
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Calendar.HeaderRender">
      <summary v="1602a4" i="0">
函数来呈现自定义标头
</summary>
    </member>
    <member name="P:AntDesign.Calendar.Locale">
      <summary v="3wLPe1" i="0">
UI和日期格式的区域设置信息
</summary>
    </member>
    <member name="P:AntDesign.Calendar.Mode">
      <summary v="1SAMQ3" i="0">
显示模式。有关有效选项，请参阅 <see cref="T:AntDesign.CalendarMode" />
</summary>
      <default value="CalendarMode.Month" />
    </member>
    <member name="P:AntDesign.Calendar.MonthCellRender">
      <summary v="17JhHi" i="0">
自定义月份单元格的显示，返回的内容将附加到单元格
</summary>
    </member>
    <member name="P:AntDesign.Calendar.MonthFullCellRender">
      <summary v="37uoGA" i="0">
自定义月份单元格的显示，返回的内容将覆盖单元格
</summary>
    </member>
    <member name="P:AntDesign.Calendar.OnChange">
      <summary v="10MmkF" i="0">
选择日期时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Calendar.OnPanelChange">
      <summary v="3Dhe5L" i="0">
当正在查看的日历类型更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Calendar.OnSelect">
      <summary v="10MmkF" i="0">
选择日期时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Calendar.ValidRange">
      <summary v="4FvQW2" i="0">
验证日期或选择范围
</summary>
    </member>
    <member name="P:AntDesign.Calendar.Value">
      <summary v="45oWQ0" i="0">
为日历选择的值
</summary>
      <default value="DateTime.Now" />
    </member>
    <member name="P:AntDesign.Card.Actions">
      <summary v="1SldMO" i="0">
卡的操作
</summary>
    </member>
    <member name="P:AntDesign.Card.ActionTemplate">
      <summary v="2CBMwF" i="0">
要放入卡片的 &ldquo;操作” 部分的内容。优先于 <see cref="P:AntDesign.Card.Actions" /></summary>
    </member>
    <member name="P:AntDesign.Card.Body">
      <summary v="4SH28t" i="0">
卡片正文的内容。如上所示 <see cref="P:AntDesign.Card.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Card.BodyStyle">
      <summary v="fqCDe" i="0">
body节的样式字符串
</summary>
    </member>
    <member name="P:AntDesign.Card.Bordered">
      <summary v="QJSxs" i="0">
切换卡片周围边框的渲染
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Card.ChildContent">
      <summary v="3htK2L" i="0">
卡片正文的内容。如下所示 <see cref="P:AntDesign.Card.Body" /></summary>
    </member>
    <member name="P:AntDesign.Card.Cover">
      <summary v="4UC2Xa" i="0">
卡片的封面内容。显示在标题下方和正文上方
</summary>
    </member>
    <member name="P:AntDesign.Card.Extra">
      <summary v="m28sG" i="0">
要在卡片右上角呈现的内容
</summary>
    </member>
    <member name="P:AntDesign.Card.Hoverable">
      <summary v="1W1yJ5" i="0">
使卡片可悬停
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Card.Loading">
      <summary v="pZtqz" i="0">
在提取卡的内容时显示加载指示器
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Card.Size">
      <summary v="2QA6lV" i="0">
卡的大小
</summary>
    </member>
    <member name="P:AntDesign.Card.Title">
      <summary v="2PbqpP" i="0">
标题标题字符串
</summary>
    </member>
    <member name="P:AntDesign.Card.TitleTemplate">
      <summary v="3I3neW" i="0">
标题的标题内容。优先于 <see cref="P:AntDesign.Card.Title" /></summary>
    </member>
    <member name="P:AntDesign.Card.Type">
      <summary v="og1sW" i="0">
卡片样式类型，可设置为内部或不设置
</summary>
    </member>
    <member name="P:AntDesign.CardAction.ChildContent">
      <summary v="47cEvD" i="0">
卡的动作。
</summary>
    </member>
    <member name="P:AntDesign.CardGrid.ChildContent">
      <summary v="4WCqYB" i="0">
网格中该部分的内容
</summary>
    </member>
    <member name="P:AntDesign.CardGrid.Hoverable">
      <summary v="9IWLO" i="0">
如果该部分应该是可悬停的。如果为true，则添加dropshadow并在悬停时抬起。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.CardMeta.Avatar">
      <summary v="3wAzHd" i="0">
头像字符串。将传递给<see cref="T:AntDesign.Avatar" />组件的 <see cref="P:AntDesign.Avatar.Src" /></summary>
    </member>
    <member name="P:AntDesign.CardMeta.AvatarTemplate">
      <summary v="1lap2R" i="0">
头像内容。优先于 <see cref="P:AntDesign.CardMeta.Avatar" /></summary>
    </member>
    <member name="P:AntDesign.CardMeta.Description">
      <summary v="3rb2Fb" i="0">
描述字符串
</summary>
    </member>
    <member name="P:AntDesign.CardMeta.DescriptionTemplate">
      <summary v="3KzIC4" i="0">
描述内容。优先于 <see cref="P:AntDesign.CardMeta.Description" /></summary>
    </member>
    <member name="P:AntDesign.CardMeta.Title">
      <summary v="3QA4UE" i="0">
标题字符串
</summary>
    </member>
    <member name="P:AntDesign.CardMeta.TitleTemplate">
      <summary v="2smmKE" i="0">
标题内容。优先于 <see cref="P:AntDesign.CardMeta.Title" /></summary>
    </member>
    <member name="P:AntDesign.Carousel.Autoplay">
      <summary v="4Zlm4r" i="0">
是否自动滚动
</summary>
    </member>
    <member name="P:AntDesign.Carousel.ChildContent">
      <summary v="2C6aYD" i="0">
旋转木马的内容。典型的<see cref="T:AntDesign.CarouselSlick" />元素
</summary>
    </member>
    <member name="P:AntDesign.Carousel.DotPosition">
      <summary v="44UFvq" i="0">
点的位置，可以是顶部，底部，左侧或右侧， <see cref="T:AntDesign.CarouselDotPosition" /></summary>
    </member>
    <member name="P:AntDesign.Carousel.Effect">
      <summary v="0D1WU" i="0">
过渡效应， <see cref="T:AntDesign.CarouselEffect" /></summary>
    </member>
    <member name="P:AntDesign.CarouselSlick.ChildContent">
      <summary v="2FFEGG" i="0">
在轮播的此部分上显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Cascader.AllowClear">
      <summary v="4dvcJY" i="0">
是否允许清算
</summary>
      <summary xml:lang="zh-CN" v="3JhsZp" i="0">
是否允许清算
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Cascader.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
覆盖调整策略 (例如，当浏览器调整大小发生时)
</summary>
    </member>
    <member name="P:AntDesign.Cascader.ChangeOnSelect">
      <summary v="29HLgF" i="0">
如果设置为true，则更改每个选择的值，如果设置为false，则仅更改最终选择的值。
</summary>
    </member>
    <member name="P:AntDesign.Cascader.DefaultValue">
      <summary v="rrJLf" i="0">
最初选择的值
</summary>
    </member>
    <member name="P:AntDesign.Cascader.Disabled">
      <summary v="16Ifmn" i="0">
是否禁用输入
</summary>
    </member>
    <member name="P:AntDesign.Cascader.ExpandTrigger">
      <summary v="3wfMcF" i="0">
何时展开当前项目-单击或悬停
</summary>
      <default value="click" />
    </member>
    <member name="P:AntDesign.Cascader.NotFoundContent">
      <summary v="2DZlN9" i="0">
找不到时的空描述
</summary>
      <default value="No Data (in current locale)" />
    </member>
    <member name="P:AntDesign.Cascader.OnChange">
      <summary v="47ZR4f" i="0">
当所选值更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Cascader.Options">
      <summary v="4fNkeE" i="0">
覆盖的选项
</summary>
    </member>
    <member name="P:AntDesign.Cascader.Placeholder">
      <summary v="4SL0ph" i="0">
用于输入的占位符
</summary>
      <default value="Please select (in current locacle)" />
    </member>
    <member name="P:AntDesign.Cascader.Placement">
      <summary v="3OpREP" i="0">
覆盖的放置
</summary>
    </member>
    <member name="P:AntDesign.Cascader.PopupContainerSelector">
      <summary v="5ZZue" i="0">
要在其中显示弹出容器的元素
</summary>
      <deault value="body" />
    </member>
    <member name="P:AntDesign.Cascader.SelectedNodesChanged">
      <summary v="47ZR4f" i="0">
当所选值更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Cascader.ShowSearch">
      <summary v="2Z0h7z" i="0">
是否允许搜索
</summary>
    </member>
    <member name="P:AntDesign.CascaderNode.Children">
      <summary v="2OKsaB" i="0">
此选项下的选项
</summary>
    </member>
    <member name="P:AntDesign.CascaderNode.Disabled">
      <summary v="1ffam7" i="0">
禁用或不禁用该选项
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.CascaderNode.Label">
      <summary v="1bhx7x" i="0">
为值显示的标签
</summary>
    </member>
    <member name="P:AntDesign.CascaderNode.Value">
      <summary v="2VQYQD" i="0">
选择选项时的值
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.CheckedChange">
      <summary v="3bz624" i="0">
checked状态更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.ChildContent">
      <summary v="3QkRL0" i="0">
复选框旁边显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.Indeterminate">
      <summary v="3sJK36" i="0">
复选框的不确定选中状态
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.Label">
      <summary v="2Ppr5U" i="0">
复选框的标签
</summary>
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.ChildContent">
      <summary v="2IxI2A" i="0">
显示组中的内容。使用<see cref="P:AntDesign.CheckboxGroup`1.MixedMode" />指定在与<see cref="P:AntDesign.CheckboxGroup`1.Options" />一起使用时应该呈现的位置</summary>
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.Disabled">
      <summary v="1XADSI" i="0">
禁用组中的所有复选框
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.MixedMode">
      <summary v="116013" i="0">
当同时使用<see cref="P:AntDesign.CheckboxGroup`1.ChildContent" />和<see cref="P:AntDesign.CheckboxGroup`1.Options" />时，这指定应该首先呈现哪个。
</summary>
      <default value="CheckboxGroupMixedMode.ChildContentFirst" />
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.OnChange">
      <summary v="1ca82K" i="0">
当选中的选项更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.Options">
      <summary v="3PR40I" i="0">
复选框的选项
</summary>
    </member>
    <member name="P:AntDesign.CloseEventArgs`1.Cancel">
      <summary v="1g27YO" i="0">
如果为true，将阻止组件关闭
</summary>
    </member>
    <member name="P:AntDesign.Col.ChildContent">
      <summary v="1MLCNF" i="0">
列的内容
</summary>
    </member>
    <member name="P:AntDesign.Col.Flex">
      <summary v="1YY68q" i="0">
是否使用flex模式。如果为null，将不使用flex模式。
</summary>
    </member>
    <member name="P:AntDesign.Col.Lg">
      <summary v="1cG3ru" i="0">
&ge; 992px网格列
</summary>
    </member>
    <member name="P:AntDesign.Col.Md">
      <summary v="2JROGw" i="0">
&ge; 768px格列
</summary>
    </member>
    <member name="P:AntDesign.Col.Offset">
      <summary v="4dZsm6" i="0">
要从左侧偏移Col的Cols数
</summary>
    </member>
    <member name="P:AntDesign.Col.Order">
      <summary v="3kPKoz" i="0">
Col的顺序，用于flex模式
</summary>
    </member>
    <member name="P:AntDesign.Col.Pull">
      <summary v="21ldwV" i="0">
要将Col拉到左侧的Cols的数量
</summary>
    </member>
    <member name="P:AntDesign.Col.Push">
      <summary v="3dUgdy" i="0">
将Col推到右边的Cols的数量
</summary>
    </member>
    <member name="P:AntDesign.Col.Sm">
      <summary v="eWhMM" i="0">
&ge; 576px网格列
</summary>
    </member>
    <member name="P:AntDesign.Col.Span">
      <summary v="3mX4Ek" i="0">
Col的宽度
</summary>
    </member>
    <member name="P:AntDesign.Col.Xl">
      <summary v="xG0Zl" i="0">
&ge; 1200px格列
</summary>
    </member>
    <member name="P:AntDesign.Col.Xs">
      <summary v="4AyrfH" i="0">
&lt;576px网格列
</summary>
    </member>
    <member name="P:AntDesign.Col.Xxl">
      <summary v="20jLOR" i="0">
&ge; 1600px网格列
</summary>
    </member>
    <member name="P:AntDesign.Collapse.Accordion">
      <summary v="30sfSl" i="0">
启用/禁用折叠模式。当为true时，一次只能打开一个面板。当打开另一个时，其余的崩溃。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Collapse.Animation">
      <summary v="4N3BlR" i="0">
是否启用展开/折叠动画
</summary>
    </member>
    <member name="P:AntDesign.Collapse.Bordered">
      <summary v="1QCVGz" i="0">
启用/禁用边框
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Collapse.ChildContent">
      <summary v="UjjTN" i="0">
崩溃的内容。通常包含<see cref="T:AntDesign.Panel" />元素
</summary>
    </member>
    <member name="P:AntDesign.Collapse.DefaultActiveKey">
      <summary v="7Hd3f" i="0">
默认<see cref="T:AntDesign.Panel" />元素的 <see cref="P:AntDesign.Panel.Key" /></summary>
    </member>
    <member name="P:AntDesign.Collapse.ExpandIcon">
      <summary v="1EB3MA" i="0">
图标显示在 <see cref="P:AntDesign.Collapse.ExpandIconPosition" /></summary>
      <default value="right" />
    </member>
    <member name="P:AntDesign.Collapse.ExpandIconPosition">
      <summary v="CTbz8" i="0">
展开图标位置
</summary>
      <default value="CollapseExpandIconPosition.Left" />
    </member>
    <member name="P:AntDesign.Collapse.ExpandIconTemplate">
      <summary v="2OZ9Rq" i="0">
展开要在<see cref="P:AntDesign.Collapse.ExpandIconPosition" />中显示的图标内容。优先于 <see cref="P:AntDesign.Collapse.ExpandIcon" /></summary>
    </member>
    <member name="P:AntDesign.Collapse.OnChange">
      <summary v="1aCzNc" i="0">
打开的面板更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Column`1.CellRender">
      <summary v="1Jig4V" i="0">
设置要在表格中显示的列内容
</summary>
    </member>
    <member name="P:AntDesign.Column`1.DataIndex">
      <summary v="1Sz0pH" i="0">
数据项中列数据对应的路径，支持通过数组查询嵌套路径
</summary>
    </member>
    <member name="P:AntDesign.Column`1.DefaultFilters">
      <summary v="TOwn4" i="0">
是否允许多个过滤器
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Column`1.DefaultSortOrder">
      <summary v="1ZaXZp" i="0">
默认排序方向
</summary>
    </member>
    <member name="P:AntDesign.Column`1.DisplayName">
      <summary v="3o7yZ4" i="0">
列的显示名称
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Field">
      <summary v="2ZwpfU" i="0">
使用 @ bind-Field绑定到TItem的属性，建议使用 <see cref="T:AntDesign.PropertyColumn`2" />
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldChanged">
      <summary v="44B5H9" i="0">
仅用于 @ bind-Field并获取表达式，没有其他用途
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldExpression">
      <summary v="3qhONM" i="0">
用于获取字段数据的表达式
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldFilterType">
      <summary v="2llI5z" i="0">
列的筛选器类型
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldName">
      <summary v="281ImF" i="0">
列的字段名称
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filterable">
      <summary v="3VDP4M" i="0">
列是否可过滤
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Column`1.FilterDropdown">
      <summary v="3gLeeI" i="0">
此列表示的字段
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filtered">
      <summary v="2XyWA9" i="0">
是否过滤数据源。当它为true时，过滤器图标将被激活。
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FilterModel">
      <summary v="unuE7" i="0">
柱的过滤器模型
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FilterMultiple">
      <summary v="TOwn4" i="0">
是否允许多个过滤器
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filters">
      <summary v="3oTgXj" i="0">
列的筛选器选项
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Format">
      <summary v="3S8OJA" i="0">
列数据序列化规则，如DateTime.ToString("XXX")
</summary>
    </member>
    <member name="P:AntDesign.Column`1.GroupBy">
      <summary v="1UGtpz" i="0">
指定列的分组函数
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Grouping">
      <summary v="2rN9Yn" i="0">
列是否用于分组
</summary>
    </member>
    <member name="P:AntDesign.Column`1.OnCell">
      <summary v="3FLeni" i="0">
设置单元格属性
</summary>
    </member>
    <member name="P:AntDesign.Column`1.OnFilter">
      <summary>
确定筛选时是否显示行的函数

参数1: 筛选项的值
</summary>
    </member>
    <member name="P:AntDesign.Column`1.OnHeaderCell">
      <summary v="319MF3" i="0">
设置标题单元格属性
</summary>
    </member>
    <member name="P:AntDesign.Column`1.ShowSorterTooltip">
      <summary v="xignj" i="0">
将鼠标悬停在 &ldquo;排序” 按钮上时是否显示工具提示
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Column`1.Sortable">
      <summary v="Bafnq" i="0">
是否允许排序
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Column`1.SortDirections">
      <summary v="2yMDpG" i="0">
允许的排序方向
</summary>
    </member>
    <member name="P:AntDesign.Column`1.SorterCompare">
      <summary v="3e3LpK" i="0">
自定义排序的比较函数
</summary>
    </member>
    <member name="P:AntDesign.Column`1.SorterMultiple">
      <summary v="2jzGcm" i="0">
允许的相似排序数
</summary>
    </member>
    <member name="P:AntDesign.Column`1.SortModel">
      <summary v="sbr4L" i="0">
列的排序模型
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Title">
      <summary v="1T93cy" i="0">
列的标题。使用以下优先级顺序: <see cref="P:AntDesign.ColumnBase.Title" />、 <see cref="P:AntDesign.Column`1.DisplayName" />，然后 <see cref="P:AntDesign.Column`1.FieldName" /></summary>
    </member>
    <member name="P:AntDesign.ColumnBase.Align">
      <summary v="3qKVHu" i="0">
列内容的对齐方式
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.ChildContent">
      <summary v="1zSdTY" i="0">
列的内容
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.ColIndex">
      <summary v="3Bxg9L" i="0">
该列在表中的索引
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.ColSpan">
      <summary v="nFw52" i="0">
柱跨
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.ColumnBase.Ellipsis">
      <summary v="2Smf7V" i="0">
设置为true时，用省略号切断标题
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.ColumnBase.Fixed">
      <summary v="1vnqDP" i="0">
修复列
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.HeaderColSpan">
      <summary v="1ZuDrp" i="0">
标题列跨度
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.ColumnBase.HeaderStyle">
      <summary v="3tyoc5" i="0">
标题单元格的样式
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.Hidden">
      <summary v="2LdRgQ" i="0">
列是否隐藏
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.ColumnBase.RowSpan">
      <summary v="126EPD" i="0">
行跨距
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.ColumnBase.Title">
      <summary v="1BpkSN" i="0">
列标题的标题
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.TitleTemplate">
      <summary v="ZZ5wk" i="0">
列标题的标题内容
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.Width">
      <summary v="iOWZU" i="0">
列的宽度
</summary>
    </member>
    <member name="P:AntDesign.Comment.Actions">
      <summary v="4a6qvY" i="0">
要在注释的bottm处显示的操作列表
</summary>
    </member>
    <member name="P:AntDesign.Comment.Author">
      <summary v="3HjLwg" i="0">
作者字符串
</summary>
    </member>
    <member name="P:AntDesign.Comment.AuthorTemplate">
      <summary v="349wA1" i="0">
作者内容。优先于 <see cref="P:AntDesign.Comment.Author" /></summary>
    </member>
    <member name="P:AntDesign.Comment.Avatar">
      <summary v="3djsh0" i="0">
头像字符串。作为<see cref="P:AntDesign.Avatar.Src" />传递给<see cref="T:AntDesign.Avatar" />组件。
</summary>
    </member>
    <member name="P:AntDesign.Comment.AvatarTemplate">
      <summary v="HBxMO" i="0">
头像内容。优先于 <see cref="P:AntDesign.Comment.Avatar" /></summary>
    </member>
    <member name="P:AntDesign.Comment.ChildContent">
      <summary v="2tiMBd" i="0">
主要用于为回复等功能嵌套注释
</summary>
    </member>
    <member name="P:AntDesign.Comment.Content">
      <summary v="122OFo" i="0">
注释的内容字符串
</summary>
    </member>
    <member name="P:AntDesign.Comment.ContentTemplate">
      <summary v="15BBP2" i="0">
注释的内容。优先于 <see cref="P:AntDesign.Comment.Content" /></summary>
    </member>
    <member name="P:AntDesign.Comment.Datetime">
      <summary v="OnKv9" i="0">
注释的日期字符串
</summary>
    </member>
    <member name="P:AntDesign.Comment.DatetimeTemplate">
      <summary v="3PUAVO" i="0">
注释的日期内容。优先于 <see cref="P:AntDesign.Comment.Datetime" /></summary>
    </member>
    <member name="P:AntDesign.Comment.Placement">
      <summary v="1Fenhd" i="0">
设置注释的方向。<c>向左</c>或<c>向右</c>。
</summary>
      <default value="left" />
    </member>
    <member name="P:AntDesign.Confirm.Config">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Confirm.ConfirmRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Confirm.OnRemove">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button1Props">
      <summary v="3uYyxi" i="0">
LTR布局中最左边的按钮属性
</summary>
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button2Props">
      <summary v="22oJ1V" i="0">
LTR布局中的辅助按钮属性
</summary>
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button3Props">
      <summary v="4QlFFO" i="0">
LTR布局中的第三个按钮属性
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.AbortText">
      <summary v="4dymfT" i="0">
中止按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.CancelText">
      <summary v="3YxACC" i="0">
&ldquo;取消” 按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.IgnoreText">
      <summary v="4CzbV2" i="0">
忽略按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.NoText">
      <summary v="1MTUhf" i="0">
无按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.OkText">
      <summary v="1kbJyX" i="0">
好按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.RetryText">
      <summary v="3UaGPH" i="0">
&ldquo;重试” 按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.YesText">
      <summary v="eXHQf" i="0">
&ldquo;是” 按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.AutoFocusButton">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button1Props">
      <summary v="3zpJsY" i="0">
LTR布局中最左边的按钮
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button1Text">
      <summary v="QZq7a" i="0">
LTR布局中最左边的按钮，它将覆盖ConfirmLocale
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button2Props">
      <summary v="2XllId" i="0">
左边的第二个按钮位于LTR布局中
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button2Text">
      <summary v="2jO8Xs" i="0">
左边的第二个按钮在LTR布局中，它将覆盖ConfirmLocale
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button3Props">
      <summary v="twE2H" i="0">
LTR布局中最右边的按钮
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button3Text">
      <summary v="Y306A" i="0">
LTR布局中最右边的按钮，它将覆盖ConfirmLocale
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.CancelButtonProps">
      <summary v="3bEw4J" i="0">
好-取消确认对话框的取消按钮道具。它相当于Button2Props。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.CancelText">
      <summary v="1TKAGv" i="0">
为左边的第二个按钮设置取消按钮内容: 取消或没有按钮，它将覆盖ConfirmLocale
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.ClassName">
      <summary v="4ZPZXD" i="0">
&ldquo;.ant-modal” 元素的类名
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Content">
      <summary v="LVRKT" i="0">
ChildContent
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn1Text">
      <summary v="q3Wg3" i="0">
好
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn2Text">
      <summary v="1G3tB3" i="0">
取消
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn3Text">
      <summary v="3tdu1K" i="0">
忽略
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Icon">
      <summary v="34Ek9o" i="0">
&ldquo;确认左上方” 图标
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Locale">
      <summary v="4ZCiPk" i="0">
确认区域设置
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkButtonProps">
      <summary v="4fyyWA" i="0">
好-取消确认对话框的好按钮道具。它相当于Button1Props。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkCancel">
      <summary v="3FnioJ" i="0">
显示好的取消按钮-取消确认对话框
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkText">
      <summary v="1UJ85J" i="0">
为最左边的按钮设置好按钮内容: 好或是按钮，它将覆盖ConfirmLocale
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkType">
      <summary v="hftSf" i="0">
为最左边的按钮设置好按钮类型: 好或是按钮
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OnCancel">
      <summary v="297oJB" i="0">
对于好-取消确认对话框，取消按钮单击回调。
它仅在ModalService模式创建的Confirm中触发
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OnOk">
      <summary v="WcOPM" i="0">
对于好-取消确认对话框，好按钮单击回调。
它仅在ModalService模式创建的Confirm中触发
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Style">
      <summary v="4Bzv48" i="0">
。蚂蚁模态元素的风格
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmRef.Config">
      <summary v="1kUbEo" i="0">
确认对话框选项
</summary>
    </member>
    <member name="P:AntDesign.ConfirmRef.Service">
      <summary v="33W2aX" i="0">
ModalService
</summary>
    </member>
    <member name="P:AntDesign.ConfirmRef`1.OnCancel">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.ConfirmRef`1.OnOk">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.Content.ChildContent">
      <summary v="4bqEO7" i="0">
内在的内容
</summary>
    </member>
    <member name="P:AntDesign.CountDown.Format">
      <summary v="1rMSLZ" i="0">
时间的格式
</summary>
      <default value="hh:mm:ss" />
    </member>
    <member name="P:AntDesign.CountDown.OnFinish">
      <summary v="2FpaDF" i="0">
当倒计时用完时执行回调
</summary>
    </member>
    <member name="P:AntDesign.CountDown.RefreshInterval">
      <summary v="2HMj6L" i="0">
更新上的UI的时间间隔 (以毫秒为单位)
</summary>
      <default value="100ms" />
    </member>
    <member name="P:AntDesign.CountDown.Value">
      <summary v="2aJ36L" i="0">
倒计时的价值
</summary>
    </member>
    <member name="P:AntDesign.DatePicker`1.OnChange">
      <summary v="47ZR4f" i="0">
当所选值更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.AllowClear">
      <summary v="35o7iv" i="0">
是否允许清除选定的值
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.AntDesign#IDatePicker#CurrentDate">
      <summary v="4esopE" i="0">
用于 &ldquo;今天” 的日期
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.AutoFocus">
      <summary v="eEdOD" i="0">
是否在输入上自动对焦
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Bordered">
      <summary v="3srvvf" i="0">
是否显示边框
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
覆盖调整策略 (例如，当浏览器调整大小发生时)
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ChangeOnClose">
      <summary v="2QN4Qc" i="0">
保存模糊后的输入值
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ClassName">
      <summary v="4AYvSS" i="0">
选取器类名
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.CultureInfo">
      <summary v="AMJyd" i="0">
用于本地化的CultureInfo
</summary>
      <default value="CultureInfo for Locale" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DateRender">
      <summary v="lRPhf" i="0">
日期单元格的自定义呈现
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DefaultPickerValue">
      <summary v="2v0EN3" i="0">
选取器的默认值
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DefaultValue">
      <summary v="41kuBJ" i="0">
默认值
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Disabled">
      <summary v="Ld5cR" i="0">
禁用日期选择器。
当给定一个布尔值时，它将禁用所有它。
当给定一个布尔数组时，它表示禁用范围的开始/结束: [开始，结束]
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledDate">
      <summary v="3iakAW" i="0">
确定是否应禁用提供的日期的函数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledHours">
      <summary v="2RZLOY" i="0">
确定是否应禁用日期中的某个小时的函数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledMinutes">
      <summary v="2oS2cc" i="0">
确定是否应禁用日期中的分钟的函数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledSeconds">
      <summary v="1gPOvx" i="0">
函数来确定是否应禁用日期中的秒
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledTime">
      <summary v="tU0BC" i="0">
确定日期中应禁用哪些时间的函数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DropdownClassName">
      <summary v="1hhCai" i="0">
popover下拉列表的类名
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Format">
      <summary v="2Ezd1I" i="0">
DateTime显示的格式
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.InputReadOnly">
      <summary v="2hqfhc" i="0">
选取器是否为只读
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsNullable">
      <summary v="1y4yhm" i="0">
如果TValue是可以为nullable的类型，则存储信息。
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsRange">
      <summary v="alXa4" i="0">
如果选择器是一个范围选择器或不
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsShowTime">
      <summary v="3zr0ni" i="0">
是否应该显示时间。包含从设置<see cref="P:AntDesign.DatePickerBase`1.ShowTime" />中做出的布尔决策</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Mask">
      <summary v="2xkbae" i="0">
用于本地化UI字符串的区域设置
</summary>
      <default value="LocaleProvider.CurrentLocale.DatePicker" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.MonthCellRender">
      <summary v="39CEYm" i="0">
月份单元格的自定义渲染
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnClear">
      <summary v="2COoYI" i="0">
在单击 &ldquo;清除” 按钮时调用。
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnClearClick">
      <summary v="1IKomZ" i="0">
单击clear时执行回调
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnOk">
      <summary v="1xEqlw" i="0">
单击好时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnOpenChange">
      <summary v="2jMIqP" i="0">
打开或关闭popover日历时执行回调
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnPanelChange">
      <summary v="3m6HC" i="0">
当显示的面板类型更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Open">
      <summary v="2zKzDl" i="0">
选择器是否打开
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Picker">
      <summary v="2JrnWU" i="0">
设置选取器类型
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Placeholder">
      <summary v="4SL0ph" i="0">
用于输入的占位符
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Placement">
      <summary v="12BNeH" i="0">
选择框弹出的位置
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.PopupContainerSelector">
      <summary v="3lnb6a" i="0">
用于将弹出窗口的容器放置在
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.PopupStyle">
      <summary v="2U9lig" i="0">
应用于弹出窗口的样式
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Ranges">
      <summary v="3r80FK" i="0">
范围选择预设，以允许用户通过单击一个按钮来选择范围
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.RenderExtraFooter">
      <summary v="4R91El" i="0">
要在选取器页脚中显示的额外内容
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ShowTime">
      <summary v="3Blbxy" i="0">
显示时间或不。
<para>当为boolean时，它将ShowTime设置为boolean。</para><para>当为string时，它将ShowTime设置为true，并使用字符串值作为时间格式。</para></summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ShowTimeFormat">
      <summary v="2apdU1" i="0">
显示时间时的时间格式。包含带有字符串的设置<see cref="P:AntDesign.DatePickerBase`1.ShowTime" />中的字符串格式
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ShowToday">
      <summary v="2yFnRT" i="0">
是否显示从任何日期选择今天的 &ldquo;今天” 按钮
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.SuffixIcon">
      <summary v="4WGBgC" i="0">
自定义后缀图标
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Use12Hours">
      <summary v="4evlFx" i="0">
当为true时，将使用12小时时间。当false时将使用24小时时间
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.CalendarDateRender">
      <summary v="3GeJLc" i="0">
对于Calendar.DateCellRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.CalendarMonthCellRender">
      <summary v="1b4EGp" i="0">
对于Calendar.MonthCellRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.DateRender">
      <summary v="1faJpx" i="0">
对于Calendar.DateFullCellRender、DatePicker.DateRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.IsShowTime">
      <summary v="3q0ltB" i="0">
仅由DatePickerWithTimePanel使用
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.MonthCellRender">
      <summary v="1rnJ5M" i="0">
对于日历.MonthFullCellRender、DatePicker.MonthCellRender
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Bordered">
      <summary v="OHtzf" i="0">
是否显示边框
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Descriptions.ChildContent">
      <summary v="15TjF0" i="0">
元素的内容。通常包含<see cref="T:AntDesign.DescriptionsItem" />元素
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Colon">
      <summary v="3nj37O" i="0">
将默认道具<c>冒号</c>值更改为<see cref="T:AntDesign.DescriptionsItem" />。
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Column">
      <summary v="3yrPT6" i="0">
一行中的元素数<see cref="T:AntDesign.DescriptionsItem" />。可以是数字或对象，如 {xs: 8，sm: 16，md: 24}
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Layout">
      <summary v="3C9H5N" i="0">
布局-水平或垂直
</summary>
      <default value="DescriptionsLayout.Horizontal" />
    </member>
    <member name="P:AntDesign.Descriptions.Size">
      <summary v="1RqWZH" i="0">
列表的大小
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Title">
      <summary v="2iDc5H" i="0">
显示在元素顶部的标题
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.TitleTemplate">
      <summary v="38RU3L" i="0">
元素顶部显示的标题内容。优先于 <see cref="P:AntDesign.Descriptions.Title" /></summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.ChildContent">
      <summary v="2IbjLv" i="0">
项目的内容
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.ContentStyle">
      <summary v="1Uuc59" i="0">
自定义内容的样式
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.LabelStyle">
      <summary v="3SxOsd" i="0">
自定义标签的样式
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.Span">
      <summary v="1O3pHg" i="0">
项目的跨度
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.DescriptionsItem.Title">
      <summary v="46HUDe" i="0">
项目的标题
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.TitleTemplate">
      <summary v="4TzYyb" i="0">
项目的标题内容。优先于 <see cref="P:AntDesign.DescriptionsItem.Title" /></summary>
    </member>
    <member name="P:AntDesign.Dialog.SentinelStart">
      <summary v="1bBGgs" i="0">
Tab start控件id
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.BodyStyle">
      <summary v="Bh4MH" i="0">
ant-modal-body风格
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ChildContent">
      <summary v="LVRKT" i="0">
ChildContent
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ClassName">
      <summary v="4ZPZXD" i="0">
&ldquo;.ant-modal” 元素的类名
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Closable">
      <summary v="122WS7" i="0">
显示ant-modal-closer
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.CloseIcon">
      <summary v="1Bc5mm" i="0">
更接近的图标RenderFragment，默认值为 &ldquo;X”
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ConfirmLoading">
      <summary v="3IUGTG" i="0">
是否为好按钮应用加载视觉效果
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DefaultMaximized">
      <summary v="3BcFs7" i="0">
在组件初始化期间最大化对话框，它将忽略可最大化的值。
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DestroyOnClose">
      <summary v="45nYFl" i="0">
模态关闭后是否从DOM中删除模态
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Draggable">
      <summary v="3zmBrO" i="0">
可拖动模态
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DragInViewport">
      <summary v="4eoCF0" i="0">
仅在视口内拖放
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Footer">
      <summary v="3C0yk" i="0">
模态页脚
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ForceRender">
      <summary v="KgRwM" i="0">
是否在打开之前强制渲染模态dom。
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Header">
      <summary v="2e3Pxq" i="0">
模态页眉
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.MaxBodyHeight">
      <summary v="2FuBJq" i="0">
最大模态车身内容高度
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Maximizable">
      <summary v="4CJFl8" i="0">
显示模式最大化按钮
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
模式处于正常状态时最大化按钮的图标
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnCancel">
      <summary v="297oJB" i="0">
对于好-取消确认对话框，取消按钮单击回调。
它仅在ModalService模式创建的Confirm中触发
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnClosed">
      <summary v="2jjyi0" i="0">
对话框关闭后触发
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnOk">
      <summary v="WcOPM" i="0">
对于好-取消确认对话框，好按钮单击回调。
它仅在ModalService模式创建的Confirm中触发
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Resizable">
      <summary v="1COtwc" i="0">
可调整大小 (仅水平方向)
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
模式最大化时最大化按钮的图标
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.WrapClassName">
      <summary v="3xRJ9X" i="0">
模态对话框的容器的类名
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.CancelButtonProps">
      <summary v="2Vf3Gr" i="0">
取消按钮的道具
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.CancelText">
      <summary v="3qDtWd" i="0">
模态默认页脚取消文本
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Centered">
      <summary v="1nfblX" i="0">
是否居中显示
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.GetContainer">
      <summary v="1e0xvG" i="0">
获取或设置模态父DOM
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Keyboard">
      <summary v="4DS9c2" i="0">
是否支持按esc键关闭
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Mask">
      <summary v="4N1u35" i="0">
是否显示蒙版
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.MaskClosable">
      <summary v="1DBAFK" i="0">
单击蒙版 (模态以外的区域) 时是否关闭模态对话框
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.MaskStyle">
      <summary v="vgNzt" i="0">
对话框的蒙版元素的样式
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkButtonProps">
      <summary v="3Ndw8d" i="0">
好按钮的道具
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkText">
      <summary v="2IMgZI" i="0">
好按钮的文本
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkType">
      <summary v="1XT62s" i="0">
好按钮的按钮类型
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.PrefixCls">
      <summary v="3GXzUH" i="0">
类名前缀
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Rtl">
      <summary v="MHb3Z" i="0">
是RTL
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Title">
      <summary v="1gdKE7" i="0">
模态对话框的字符串标题
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.TitleTemplate">
      <summary v="3OT4NB" i="0">
模式对话框的标题RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Width">
      <summary v="7XF2B" i="0">
模式对话框的宽度
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.ZIndex">
      <summary v="10GCuH" i="0">
模态的z-index
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.ChildContent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.Config">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.Dialog">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.OnAfterHide">
      <summary v="a7xve" i="0">
当OnAfterRenderAsync方法上的visible为false时触发
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.OnAfterShow">
      <summary v="1VqOVh" i="0">
当OnAfterRenderAsync方法上的visible为true时触发
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.OnBeforeDestroy">
      <summary v="1w3viE" i="0">
在从DOM树中销毁组件之前。您可以通过设置取消销毁CancelEventArgs.cancel = true
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Divider.ChildContent">
      <summary v="1H4ejN" i="0">
要在分隔线内显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Divider.Dashed">
      <summary v="2gF7AJ" i="0">
是否将线条样式设置为虚线。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Divider.Orientation">
      <summary v="4I3ZJM" i="0">
内容/文本方向-&ldquo;左” | &ldquo;右” | &ldquo;中心”。不使用 &ldquo;text” 或 &ldquo;childcontent” 时忽略
</summary>
      <default value="center" />
    </member>
    <member name="P:AntDesign.Divider.Plain">
      <summary v="4Fjgcc" i="0">
当为false时，文本将不是标题样式。当true时，它将是标题样式。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Divider.Text">
      <summary v="2Sjfl0" i="0">
要在分隔线内显示的文本
</summary>
    </member>
    <member name="P:AntDesign.Divider.Type">
      <summary v="1mXxDF" i="0">
分隔器类型-'水平' | '垂直'
</summary>
      <default value="DirectionVHType.Horizontal" />
    </member>
    <member name="P:AntDesign.DownloadButton.FileName">
      <summary v="392ubQ" i="0">
文件的名称
</summary>
    </member>
    <member name="P:AntDesign.DownloadButton.Url">
      <summary v="zywYv" i="0">
文件的下载url
</summary>
    </member>
    <member name="P:AntDesign.Drawer.BodyStyle">
      <summary v="u6xjR" i="0">
模态车身元素的车身样式。如高度、填充等。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.ChildContent">
      <summary v="1iuu2Y" i="0">
抽屉的内容。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Closable">
      <summary v="40sJ3M" i="0">
关闭 (x) 按钮是否在抽屉对话框的右上角可见。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.Content">
      <summary v="1Ckdp9" i="0">
抽屉的内容， <para>如果<see cref="P:AntDesign.Drawer.Content" />是一个字符串，它将被呈现为HTML。</para></summary>
    </member>
    <member name="P:AntDesign.Drawer.HeaderStyle">
      <summary v="3ZaZX1" i="0">
模态标头元素的标头样式。如高度、填充等。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Height">
      <summary v="IBctt" i="0">
抽屉对话框的高度，只有当放置是 '顶部' 或 '底部'。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.Drawer.Keyboard">
      <summary v="3Xg479" i="0">
是否支持键盘esc off
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.Mask">
      <summary v="X5rmp" i="0">
是否显示面具或不。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.MaskClosable">
      <summary v="2E3M99" i="0">
点击蒙版 (抽屉外的区域) 关闭或不关闭抽屉。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.MaskStyle">
      <summary v="4LPjkp" i="0">
抽屉面具元素的样式。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetTransform">
      <summary v="1ovClK" i="0">
设置抽屉是否显示，以及显示时候的位置偏移
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetX">
      <summary v="26Ulx0" i="0">
X坐标偏移 (px)，只有当放置是 &ldquo;左” 或 &ldquo;右”。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Drawer.OffsetY">
      <summary v="hguA9" i="0">
Y坐标偏移 (px)，仅当放置为 &ldquo;顶部” 或 &ldquo;底部” 时。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Drawer.OnClose">
      <summary v="1ojkm0" i="0">
指定当用户单击 &ldquo;遮罩” 、 &ldquo;关闭” 按钮或 &ldquo;取消” 按钮时将调用的回调。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OnOpen">
      <summary v="rwHRP" i="0">
指定将在显示抽屉之前调用的回调
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Placement">
      <summary v="QCGNR" i="0">
抽屉的位置，选项可以是左，上，右，下
</summary>
      <default value="right" />
    </member>
    <member name="P:AntDesign.Drawer.Title">
      <summary v="fjARs" i="0">
抽屉的标题。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Transform">
      <summary v="oxkit" i="0">
设置抽屉是否隐藏，以及隐藏时候的位置偏移
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Visible">
      <summary v="yyFAv" i="0">
抽屉对话框是否可见。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Drawer.VisibleChanged">
      <summary v="Fls9t" i="0">
Visible上的EventCallback触发器已更改。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Width">
      <summary v="3bRCW2" i="0">
抽屉对话框的宽度，只有当放置是 &ldquo;左” 或 &ldquo;右”。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.Drawer.WrapClassName">
      <summary v="4S5JP6" i="0">
抽屉对话框的容器的类名。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.ZIndex">
      <summary v="4fn8QA" i="0">
抽屉的z-index。
</summary>
      <default value="1000" />
    </member>
    <member name="P:AntDesign.DrawerOpenEventArgs.Cancel">
      <summary v="3EbA1B" i="0">
获取或设置一个值，该值指示是否应取消事件。
返回结果: 如果应取消事件为true; 否则为为false。
获取或设置一个值，该值指示是否应取消事件。
返回结果: 如果应该取消事件，则为true; 否则为false。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.BodyStyle">
      <summary v="27nFs3" i="0">
抽屉主体元素的主体样式。如高度、填充等。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Closable">
      <summary v="40sJ3M" i="0">
关闭 (x) 按钮是否在抽屉对话框的右上角可见。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Content">
      <summary v="1xv37D" i="0">
抽屉正文内容。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.HeaderStyle">
      <summary v="3jKYHs" i="0">
抽屉标头元素的标头样式。如高度、填充等。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Height">
      <summary v="IBctt" i="0">
抽屉对话框的高度，只有当放置是 '顶部' 或 '底部'。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Keyboard">
      <summary v="3Xg479" i="0">
是否支持键盘esc off
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Mask">
      <summary v="X5rmp" i="0">
是否显示面具或不。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.MaskClosable">
      <summary v="2E3M99" i="0">
点击蒙版 (抽屉外的区域) 关闭或不关闭抽屉。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.MaskStyle">
      <summary v="4LPjkp" i="0">
抽屉面具元素的样式。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.OffsetX">
      <summary v="26Ulx0" i="0">
X坐标偏移 (px)，只有当放置是 &ldquo;左” 或 &ldquo;右”。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.DrawerOptions.OffsetY">
      <summary v="hguA9" i="0">
Y坐标偏移 (px)，仅当放置为 &ldquo;顶部” 或 &ldquo;底部” 时。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Placement">
      <summary v="Si3W4" i="0">
抽屉的位置-可能的值: &ldquo;左”，&ldquo;右”，&ldquo;顶部”，&ldquo;底部”
</summary>
      <default value="right" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Title">
      <summary v="fjARs" i="0">
抽屉的标题。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Visible">
      <summary v="3ewQSK" i="0">
抽屉是否可见
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Width">
      <summary v="1yZAO4" i="0">
抽屉对话框的宽度。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.DrawerOptions.WrapClassName">
      <summary v="4S5JP6" i="0">
抽屉对话框的容器的类名。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.ZIndex">
      <summary v="4fn8QA" i="0">
抽屉的z-index。
</summary>
      <default value="1000" />
    </member>
    <member name="P:AntDesign.Dropdown.Arrow">
      <summary v="2noVuk" i="0">
下拉箭头是否可见。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Dropdown.ArrowPointAtCenter">
      <summary v="eD92u" i="0">
下拉箭头是否应指向中心
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Block">
      <summary v="4dlKNJ" i="0">
使按钮宽度适合其父宽度的选项
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsClass">
      <summary v="2JSYNV" i="0">
允许将每个按钮的css类设置为相同的字符串
或分开。
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsRender">
      <summary v="2CfA26" i="0">
完全可定制的按钮。
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsStyle">
      <summary v="3pYu7U" i="0">
允许将每个按钮的样式设置为相同的字符串
或分开。
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Danger">
      <summary v="EU9VT" i="0">
设置按钮的危险状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Ghost">
      <summary v="x4g06" i="0">
用于背景复杂的场合，通常是主页。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Icon">
      <summary v="3hn7FB" i="0">
将在右侧呈现的图标
按钮。
</summary>
      <default value="ellipsis" />
    </member>
    <member name="P:AntDesign.DropdownButton.Loading">
      <summary v="3zCufH" i="0">
指示是否要包括加载图标。
如果设置为true，则下拉列表将不处于活动状态。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Size">
      <summary v="qmBSM" i="0">
按钮大小。
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.DropdownButton.Type">
      <summary v="485Sk2" i="0">
允许将每个按钮的类型设置为相同的字符串
或分开。使用AntDesign.ButtonType帮助器类。
</summary>
      <default value="ButtonType.Default" />
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Offset">
      <summary v="4dZsm6" i="0">
要从左侧偏移Col的Cols数
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Order">
      <summary v="3kPKoz" i="0">
Col的顺序，用于flex模式
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Pull">
      <summary v="21ldwV" i="0">
要将Col拉到左侧的Cols的数量
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Push">
      <summary v="3dUgdy" i="0">
将Col推到右边的Cols的数量
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Span">
      <summary v="3mX4Ek" i="0">
Col的宽度
</summary>
    </member>
    <member name="P:AntDesign.Empty.ChildContent">
      <summary v="1zrqzC" i="0">
空视图后显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Empty.Description">
      <summary v="2hbqKL" i="0">
空视图的区域设置配置
</summary>
      <default value="No Data (in current locale)" />
    </member>
    <member name="P:AntDesign.Empty.DescriptionTemplate">
      <summary v="2Cig2u" i="0">
视图的描述内容。优先于 <see cref="P:AntDesign.Empty.Description" /></summary>
    </member>
    <member name="P:AntDesign.Empty.Image">
      <summary v="33Dae7" i="0">
用于查看的图像URL。优先于 <see cref="P:AntDesign.Empty.Simple" /></summary>
    </member>
    <member name="P:AntDesign.Empty.ImageStyle">
      <summary v="2iPvvx" i="0">
图像包装器的样式。无论图像类型如何，始终使用。
</summary>
    </member>
    <member name="P:AntDesign.Empty.ImageTemplate">
      <summary v="4C9DfU" i="0">
空视图的图像内容。优先于<see cref="P:AntDesign.Empty.Image" />和 <see cref="P:AntDesign.Empty.Simple" /></summary>
    </member>
    <member name="P:AntDesign.Empty.Simple">
      <summary v="2yIGKQ" i="0">
使用Empty的简单变体。形象也改变了。
</summary>
    </member>
    <member name="P:AntDesign.Empty.Small">
      <summary v="1fuld7" i="0">
使用Empty的小变体
</summary>
    </member>
    <member name="P:AntDesign.FeedbackComponent`1.FeedbackRef">
      <summary v="11Cl1m" i="0">
允许您从外部传入模板的选项
</summary>
    </member>
    <member name="P:AntDesign.FeedbackComponent`1.OkCancelRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackComponent`2.OkCancelRefWithResult">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.AntDesign#IFeedbackRef#ModalTemplate">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.OnClose">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.OnOpen">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.FeedbackRefWithOkCancelBase.OnCancel">
      <summary v="uSJz1" i="0">
当取消按钮或关闭单击时调用
</summary>
    </member>
    <member name="P:AntDesign.FeedbackRefWithOkCancelBase.OnOk">
      <summary v="xi0GX" i="0">
单击好按钮时调用
</summary>
    </member>
    <member name="P:AntDesign.Flex.Align">
      <summary v="2At4GH" i="0">
设置元素在交叉轴方向上的对齐方式
参考align-items https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
</summary>
    </member>
    <member name="P:AntDesign.Flex.ChildContent">
      <summary v="3j5b8f" i="0">
设置子元素
</summary>
    </member>
    <member name="P:AntDesign.Flex.Component">
      <summary v="243oNo" i="0">
自定义元素类型
</summary>
    </member>
    <member name="P:AntDesign.Flex.FlexCss">
      <summary v="F363V" i="0">
flex CSS速记属性
参考flex https://developer.mozilla.org/en-US/docs/Web/CSS/flex
</summary>
    </member>
    <member name="P:AntDesign.Flex.Gap">
      <summary v="Uut0G" i="0">
设置网格之间的间隙
小 | 中 | 大 | 字符串 | 数字
</summary>
    </member>
    <member name="P:AntDesign.Flex.Justify">
      <summary v="3zFpKI" i="0">
设置元素在主轴方向上的对齐方式
参考justify-content https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
</summary>
    </member>
    <member name="P:AntDesign.Flex.Vertical">
      <summary v="rxl5t" i="0">
是flex的垂直方向，请使用flex-方向: 列
</summary>
    </member>
    <member name="P:AntDesign.Flex.Wrap">
      <summary v="rE4AA" i="0">
设置元素是显示在单行中还是显示在多行中
参考flex-wrap:https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap
</summary>
    </member>
    <member name="P:AntDesign.Footer.ChildContent">
      <summary v="4bqEO7" i="0">
内在的内容
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Autocomplete">
      <summary v="2cp7Sy" i="0">
默认情况下，输入元素是否可以由浏览器自动完成其值
</summary>
    </member>
    <member name="P:AntDesign.Form`1.ChildContent">
      <summary v="47H0xI" i="0">
形式的内容。通常包含不同的表单输入和布局元素。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.EditContext">
      <summary v="1Tm5U3" i="0">
获取<see cref="P:AntDesign.Form`1.EditContext" />窗体内部的实例
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Enhance">
      <summary v="vrllB" i="0">
如果启用，则在不完全重新加载页面的情况下执行表单提交。这等同于向表单添加数据增强。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.IsModified">
      <summary v="1vMqSK" i="0">
指示表单是否已被修改的标志
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelAlign">
      <summary v="3OS80Q" i="0">
将标签向左或向右对齐
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelCol">
      <summary v="3LC4ty" i="0">
控制标签的布局。通常用于设置不同屏幕尺寸的宽度。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelColOffset">
      <summary v="43cRlv" i="0">
获取/设置<see cref="P:AntDesign.Form`1.LabelCol" />上的<c>Offset</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelColSpan">
      <summary v="2WF29N" i="0">
获取/设置<see cref="P:AntDesign.Form`1.LabelCol" />上的<c>Span</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Layout">
      <summary v="3orA1g" i="0">
窗体中窗体项的布局
</summary>
      <default value="FormLayout.Horizontal" />
    </member>
    <member name="P:AntDesign.Form`1.Loading">
      <summary v="bimjG" i="0">
表单是否正在加载
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Form`1.Locale">
      <summary v="2XNC8o" i="0">
本地化选项
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Method">
      <summary v="36C0mf" i="0">
用于提交表单的Http方法
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Model">
      <summary v="22oHnU" i="0">
要将表单输入绑定到的模型
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Name">
      <summary v="1i6Jp4" i="0">
获取或设置窗体处理程序名称。这是将其发布到服务器端端点所必需的。
或使用从<see cref="T:AntDesign.FormProviderFinishEventArgs" />获取表单实例。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnFieldChanged">
      <summary v="3NRd9O" i="0">
当表单中的字段更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnFinish">
      <summary v="1aIq2R" i="0">
提交表单并通过验证时执行的回调。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnFinishFailed">
      <summary v="1OPHMT" i="0">
提交表单并验证失败时执行的回调。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnValidationRequested">
      <summary v="14Qb8V" i="0">
请求验证时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnValidationStateChanged">
      <summary v="1beYKx" i="0">
验证更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Form`1.RequiredMark">
      <summary v="0PrxO" i="0">
更改必需/可选字段标签在窗体上的显示方式。
<list type="bullet"><item>必填-将标记必填字段</item><item>可选-将标记可选字段</item><item>无-将不标记任何字段，无论是必需的/可选的</item></list></summary>
    </member>
    <member name="P:AntDesign.Form`1.Size">
      <summary v="4Pqlio" i="0">
窗体内ant组件的大小
</summary>
    </member>
    <member name="P:AntDesign.Form`1.ValidateMode">
      <summary v="1liC5Z" i="0">
表单应使用哪种验证模式
</summary>
      <default value="FormValidateMode.Default" />
    </member>
    <member name="P:AntDesign.Form`1.ValidateOnChange">
      <summary v="4Lbt9x" i="0">
组件值更改时启用验证
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Validator">
      <summary v="1i9ziH" i="0">
要在窗体中使用的验证程序。当<see cref="P:AntDesign.Form`1.ValidateMode" />为<c>FormValidateMode.Default</c>或<c>FormValidateMode.Complex</c>时使用</summary>
    </member>
    <member name="P:AntDesign.Form`1.WrapperCol">
      <summary v="3JEIvN" i="0">
控制输入元素的包装的布局。通常用于设置不同屏幕尺寸的宽度。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.WrapperColOffset">
      <summary v="2Wjjm6" i="0">
获取/设置<see cref="P:AntDesign.Form`1.WrapperColOffset" />上的<c>Offset</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.WrapperColSpan">
      <summary v="3Gjelz" i="0">
获取/设置<see cref="P:AntDesign.Form`1.WrapperCol" />上的<c>Span</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.ChildContent">
      <summary v="3igBxk" i="0">
表单项的内容。通常将包含一个输入元素
</summary>
    </member>
    <member name="P:AntDesign.FormItem.HasFeedback">
      <summary v="353jAg" i="0">
与<see cref="P:AntDesign.FormItem.ValidateStatus" />一起使用以显示验证状态图标。建议仅与输入组件一起使用
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Help">
      <summary v="MO3O4" i="0">
提示信息
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Label">
      <summary v="X4UOj" i="0">
项目的自定义标签。如果未提供<see cref="P:AntDesign.FormItem.Label" />或 <see cref="P:AntDesign.FormItem.LabelTemplate" />，则将使用DisplayName属性值或字段名称 (按该顺序)。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelAlign">
      <summary v="3OS80Q" i="0">
将标签向左或向右对齐
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelCol">
      <summary v="3LC4ty" i="0">
控制标签的布局。通常用于设置不同屏幕尺寸的宽度。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelColOffset">
      <summary v="2F97VI" i="0">
获取/设置<see cref="P:AntDesign.FormItem.LabelCol" />上的<c>Offset</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelColSpan">
      <summary v="3vd2QC" i="0">
获取/设置<see cref="P:AntDesign.FormItem.LabelCol" />上的<c>Span</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelStyle">
      <summary v="3B7Wrm" i="0">
将仅应用于label元素的样式。
如果设置了LabelTemplate，则不会应用。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelTemplate">
      <summary v="PZaAg" i="0">
项目的自定义标签内容。优先于<see cref="P:AntDesign.FormItem.Label" />如果未提供<see cref="P:AntDesign.FormItem.Label" />或 <see cref="P:AntDesign.FormItem.LabelTemplate" />，则将使用DisplayName属性值或字段名称 (按该顺序)。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Name">
      <summary v="3QBgnF" i="0">
指定表单项的名称。它也可以用作绑定模型属性的成员路径。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.NoStyle">
      <summary v="3IR3M8" i="0">
No style当为true时，它用作纯字段控件
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Required">
      <summary v="2ciJHa" i="0">
将此项目标记为验证所需
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Rules">
      <summary v="3ypAhl" i="0">
要应用于此项目的验证规则
</summary>
    </member>
    <member name="P:AntDesign.FormItem.ShowFeedbackOnError">
      <summary v="O1HvB" i="0">
是否显示错误反馈图标。如果设置为false，即使字段处于错误状态，也不会显示图标。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.ValidateStatus">
      <summary v="1lJV5K" i="0">
验证状态，如果未设置，则根据验证规则自动生成
</summary>
    </member>
    <member name="P:AntDesign.FormItem.WrapperCol">
      <summary v="3JEIvN" i="0">
控制输入元素的包装的布局。通常用于设置不同屏幕尺寸的宽度。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.WrapperColOffset">
      <summary v="11w8hO" i="0">
获取/设置<see cref="P:AntDesign.FormItem.WrapperColOffset" />上的<c>Offset</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.WrapperColSpan">
      <summary v="3JCOYd" i="0">
获取/设置<see cref="P:AntDesign.FormItem.WrapperCol" />上的<c>Span</c>属性。
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Array">
      <summary v="26nM3x" i="0">
数组类型的消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Date">
      <summary v="2r4JC7" i="0">
日期类型的消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Default">
      <summary v="4SZJly" i="0">
默认通用验证错误消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Enum">
      <summary v="t7fMZ" i="0">
枚举规则的默认验证消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Number">
      <summary v="3nwDNJ" i="0">
字符串类型的消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Pattern">
      <summary v="2kaoLJ" i="0">
模式验证规则的消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Required">
      <summary v="3MctTm" i="0">
所需规则的默认验证消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.String">
      <summary v="3nwDNJ" i="0">
字符串类型的消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Types">
      <summary v="12Pz3l" i="0">
字段类型与预期类型不匹配时的消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Whitespace">
      <summary v="2OACdj" i="0">
空白规则的默认验证消息
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.DefaultField">
      <summary v="4YhX7o" i="0">
验证所有数组元素的规则。有效的<see cref="P:AntDesign.FormValidationRule.Type" />s: Array。(现在不支持<c>FormItem</c>)
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Enum">
      <summary v="hOZvb" i="0">
验证值是否属于指定的枚举类型。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Fields">
      <summary v="1B6BNd" i="0">
验证子元素的规则。有效<see cref="P:AntDesign.FormValidationRule.Type" />s: Array，Object (现在不支持<c>FormItem</c>)
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Len">
      <summary v="157HF9" i="0">
验证长度。有效<see cref="P:AntDesign.FormValidationRule.Type" />: 字符串、数字或数组。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Max">
      <summary v="kqvo8" i="0">
验证长度小于或等于此数字。有效<see cref="P:AntDesign.FormValidationRule.Type" />: 字符串、数字或数组。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Message">
      <summary v="yBQIK" i="0">
自定义错误消息。如果未提供，将自动生成。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Min">
      <summary v="3WGoC4" i="0">
验证长度大于或等于此数字。有效<see cref="P:AntDesign.FormValidationRule.Type" />: 字符串、数字或数组。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.OneOf">
      <summary v="1EC7Yk" i="0">
值是否在指定值中
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Pattern">
      <summary v="2rANEb" i="0">
验证传递正则表达式模式的值
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Range">
      <summary v="YR1aY" i="0">
验证值是否在指定范围内
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Required">
      <summary v="2voiGS" i="0">
使字段为必填项
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Transform">
      <summary v="xW7gK" i="0">
在执行验证之前调用的转换函数。返回值将对其运行验证。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Type">
      <summary v="2vA6P4" i="0">
表单域的类型。有关所有可能的值，请参见<see cref="T:AntDesign.FormFieldType" />。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.ValidationAttribute">
      <summary v="1YIhEY" i="0">
使用指定的属性验证值。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Validator">
      <summary v="3a51oY" i="0">
自定义验证功能
</summary>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.Definitions">
      <summary v="1ORrMe" i="0">
定义每个列的操作
</summary>
      <param name="propertyName" v="3HDKAv" i="0">绑定列的属性的名称。</param>
      <param name="column" v="3n42MC" i="0">列实例，您需要显式强制转换为具体的列类型。</param>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.HideColumnsByName">
      <summary v="Ree44" i="0">
按属性名称隐藏列。
</summary>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.Range">
      <summary v="3qtd4o" i="0">
指定需要显示的列的范围。
</summary>
    </member>
    <member name="P:AntDesign.Header.ChildContent">
      <summary v="4bqEO7" i="0">
内在的内容
</summary>
    </member>
    <member name="P:AntDesign.Icon.Alt">
      <summary v="10HuhZ" i="0">
图标的替代文本
</summary>
    </member>
    <member name="P:AntDesign.Icon.AriaLabel">
      <summary v="3lc7zV" i="0">
设置aria-label属性的值
</summary>
    </member>
    <member name="P:AntDesign.Icon.Component">
      <summary v="4fknUN" i="0">
要呈现为自定义图标的组件
</summary>
    </member>
    <member name="P:AntDesign.Icon.Fill">
      <summary v="2koOx6" i="0">
图标SVG的填充值
</summary>
      <default value="currentColor" />
    </member>
    <member name="P:AntDesign.Icon.Height">
      <summary v="1jEJav" i="0">
图标的高度
</summary>
      <default value="1em" />
    </member>
    <member name="P:AntDesign.Icon.IconFont">
      <summary v="2Vr5Nx" i="0">
的类型 <see cref="T:AntDesign.IconFont" /></summary>
    </member>
    <member name="P:AntDesign.Icon.OnClick">
      <summary v="4QoFth" i="0">
图标的OnClick事件
</summary>
    </member>
    <member name="P:AntDesign.Icon.Role">
      <summary v="25YJGp" i="0">
带动画的旋转图标
</summary>
      <default value="img" />
    </member>
    <member name="P:AntDesign.Icon.Rotate">
      <summary v="4eYRAl" i="0">
旋转n度-在IE9中不起作用
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Icon.Spin">
      <summary v="25YJGp" i="0">
带动画的旋转图标
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Icon.StopPropagation">
      <summary v="21omOB" i="0">
图标上的click事件停止传播
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Icon.TabIndex">
      <summary v="2V9EpG" i="0">
包装跨度的Tabindex
</summary>
    </member>
    <member name="P:AntDesign.Icon.Theme">
      <summary v="2xXhYa" i="0">
图标的哪个主题-'fill' | 'outline' | 'twotone'；
</summary>
      <default value="IconThemeType.Outline" />
    </member>
    <member name="P:AntDesign.Icon.TwotoneColor">
      <summary v="3O0TYt" i="0">
使用TwoTone主题时指定主要颜色。其他主题忽略此参数。
</summary>
    </member>
    <member name="P:AntDesign.Icon.Type">
      <summary v="4ey7Ul" i="0">
要显示的图标名称
</summary>
    </member>
    <member name="P:AntDesign.Icon.Width">
      <summary v="2qUkbY" i="0">
图标的宽度
</summary>
      <default value="1em" />
    </member>
    <member name="P:AntDesign.IFeedbackRef.ModalTemplate">
      <summary v="BHg9M" i="0">
获取反馈内部组件的事件
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.OnClose">
      <summary v="2JaQDk" i="0">
在反馈关闭时
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.OnOpen">
      <summary v="49INqh" i="0">
在反馈打开时
</summary>
    </member>
    <member name="P:AntDesign.IForm.EditContext">
      <summary v="z1gfH" i="0">
从表单中获取当前的EditContext。
</summary>
    </member>
    <member name="P:AntDesign.IForm.IsModified">
      <summary v="4RJ8hI" i="0">
表单是否已修改。
</summary>
    </member>
    <member name="P:AntDesign.IForm.Model">
      <summary v="kFSC0" i="0">
窗体绑定到的数据对象。
</summary>
    </member>
    <member name="P:AntDesign.IForm.Name">
      <summary v="zR1Ov" i="0">
窗体的名称。
</summary>
    </member>
    <member name="P:AntDesign.Image.Alt">
      <summary v="1BWz2X" i="0">
图像的替代文本
</summary>
    </member>
    <member name="P:AntDesign.Image.Fallback">
      <summary v="4JfU9S" i="0">
如果图像无法加载，则回退
</summary>
    </member>
    <member name="P:AntDesign.Image.Height">
      <summary v="4GSy3p" i="0">
图像的高度
</summary>
    </member>
    <member name="P:AntDesign.Image.Locale">
      <summary v="kEbhD" i="0">
组件的区域设置数据
</summary>
    </member>
    <member name="P:AntDesign.Image.OnClick">
      <summary v="32SRkB" i="0">
单击图像时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Image.Placeholder">
      <summary v="1ljUwD" i="0">
正在加载占位符
</summary>
    </member>
    <member name="P:AntDesign.Image.Preview">
      <summary v="Jxhp6" i="0">
启用或禁用预览功能
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Image.PreviewSrc">
      <summary v="49DMHG" i="0">
预览图像源
</summary>
    </member>
    <member name="P:AntDesign.Image.PreviewVisible">
      <summary v="272j96" i="0">
预览是否可见
</summary>
    </member>
    <member name="P:AntDesign.Image.PreviewVisibleChanged">
      <summary v="2MBaTP" i="0">
更改时<see cref="P:AntDesign.Image.PreviewVisible" />执行回调
</summary>
    </member>
    <member name="P:AntDesign.Image.Src">
      <summary v="2MruVO" i="0">
图像源
</summary>
    </member>
    <member name="P:AntDesign.Image.Width">
      <summary v="3FH5eE" i="0">
图像宽度
</summary>
    </member>
    <member name="P:AntDesign.ImagePreviewGroup.ChildContent">
      <summary v="yr7kY" i="0">
组的内容。通常包含<see cref="T:AntDesign.Image" />元素。
</summary>
    </member>
    <member name="P:AntDesign.ImagePreviewGroup.PreviewVisible">
      <summary v="4ebIx2" i="0">
是否打开预览图像。双向绑定。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.ImagePreviewGroup.PreviewVisibleChanged">
      <summary v="3YqJna" i="0">
更改时<see cref="P:AntDesign.ImagePreviewGroup.PreviewVisible" />执行回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AddOnAfter">
      <summary v="8vf60" i="0">
在输入字段之后 (右侧) 显示的标签文本。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AddOnBefore">
      <summary v="36H0rJ" i="0">
显示在输入字段之前 (左侧) 的标签文本。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AllowClear">
      <summary v="gEOSA" i="0">
允许删除带有清晰图标的输入内容
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AutoComplete">
      <summary v="1aFWnI" i="0">
控制输入HTML元素的autocomplete特性。
默认值 = true
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AutoFocus">
      <summary v="eEdOD" i="0">
是否在输入上自动对焦
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Input`1.BindOnInput">
      <summary v="2efoKI" i="0">
是否更改输入值
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Bordered">
      <summary v="2zghRL" i="0">
是否有边框样式
</summary>
    </member>
    <member name="P:AntDesign.Input`1.DebounceMilliseconds">
      <summary v="3QPF7H" i="0">
延迟KeyUp事件的处理，直到用户停止
键入预定的时间。默认值为250毫秒。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.DefaultValue">
      <summary v="1t7Dcf" i="0">
初始输入内容
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Disabled">
      <summary v="2pb5l" i="0">
是否禁用输入。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.InputElementSuffixClass">
      <summary v="2XanWf" i="0">
将添加到输入元素类的Css类
作为最后一个类条目。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.MaxLength">
      <summary v="lftDP" i="0">
最大长度
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnBlur">
      <summary v="ZLSVg" i="0">
输入失去焦点时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnChange">
      <summary v="ptUEL" i="0">
内容更改时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnClear">
      <summary v="3PGUwN" i="0">
通过单击 &ldquo;ClearIcon” 清除内容时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnFocus">
      <summary v="44qPny" i="0">
输入接收焦点时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnInput">
      <summary v="2OIWbo" i="0">
输入值时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnkeyDown">
      <summary v="3ksyLG" i="0">
按下键时回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnkeyUp">
      <summary v="2t1JgE" i="0">
释放键时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnMouseUp">
      <summary v="1ZcYJf" i="0">
释放鼠标按钮时的回调
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnPressEnter">
      <summary v="1KYPr0" i="0">
回车键时触发的回调函数
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Placeholder">
      <summary v="4Bbqr0" i="0">
提供描述输入字段的预期值的提示信息
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Prefix">
      <summary v="1gKiV2" i="0">
输入的前缀图标。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.ReadOnly">
      <summary v="5klsi" i="0">
当存在时，它指定输入字段是只读的。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.ShowCount">
      <summary v="AEzFb" i="0">
显示输入中的字符数
</summary>
    </member>
    <member name="P:AntDesign.Input`1.StopPropagation">
      <summary v="35yoCv" i="0">
控制onclick和模糊事件传播。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Suffix">
      <summary v="e99Ci" i="0">
输入的后缀图标。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Type">
      <summary v="31w74n" i="0">
输入的类型，请参阅: MDN (使用 &ldquo;input.Textara” 而不是type = &ldquo;textara”)
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Width">
      <summary v="1RMHwt" i="0">
输入的宽度
</summary>
    </member>
    <member name="P:AntDesign.Input`1.WrapperStyle">
      <summary v="2dMr07" i="0">
设置包装器的CSS样式。当组件具有可见: 前缀/后缀时使用
或具有参数集<seealso cref="P:AntDesign.Input`1.AllowClear" />或组件: <see cref="T:AntDesign.InputPassword" />
还有 <see cref="T:AntDesign.Search" />.在这些情况下，使用html span元素
包装html输入元素。
在span元素上使用<seealso cref="P:AntDesign.Input`1.WrapperStyle" />。
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.ChildContent">
      <summary v="42rJBC" i="0">
由InputGroup包装的内容。
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.Compact">
      <summary v="RmJZU" i="0">
是否使用紧凑样式
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.InputGroup.Size">
      <summary v="46I7pX" i="0">
InputGroup的大小指定包含的输入字段的大小。
可用: 大默认小
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Bordered">
      <summary v="2piZbF" i="0">
是否显示边框
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.DefaultValue">
      <summary v="42sCPk" i="0">
初始值
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Disabled">
      <summary v="3akgvh" i="0">
是否禁用输入
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Format">
      <summary v="4XJP71" i="0">
解析器从格式化程序中提取数字
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Formatter">
      <summary v="3TwQpv" i="0">
从数字到字符串的格式化程序用于显示
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Max">
      <summary v="1612iu" i="0">
最大可分配数量
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.MaxLength">
      <summary v="Jsrs4" i="0">
输入的最大长度
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.InputNumber`1.Min">
      <summary v="1BMdya" i="0">
最小允许数量
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.OnChange">
      <summary v="3R1heX" i="0">
当输入值更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.OnFocus">
      <summary v="4LPnxj" i="0">
当输入获得焦点时执行回调
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Parser">
      <summary v="2ScB9J" i="0">
指定从格式化程序中提取的值
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.PlaceHolder">
      <summary v="1Wpyiz" i="0">
占位符值
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Precision">
      <summary v="34OkP8" i="0">
用于数字和显示的小数位数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.InputNumber`1.Prefix">
      <summary v="1KhT15" i="0">
将前缀内容设置为输入
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Step">
      <summary v="1Qk5vQ" i="0">
当前值随输入箭头增加或减少的数字。它可以是整数或小数。
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Width">
      <summary v="1RMHwt" i="0">
输入的宽度
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.IconRender">
      <summary v="4TMYeJ" i="0">
自定义图标渲染
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.ShowPassword">
      <summary v="39Vatj" i="0">
是否显示密码
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.InputPassword.VisibilityToggle">
      <summary v="10ZHRq" i="0">
是否显示密码可见性切换按钮
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Internal.Overlay.HiddenMode">
      <summary v="3QUJQe" i="0">
默认情况下，叠加不呈现其内容，如果叠加尚未
激活 (至少显示一次)。设置HiddenMode = true将
完成渲染过程。
用例: 使用<see cref="T:AntDesign.SimpleSelectOption" />或<see cref="T:AntDesign.SelectOption`2" />时选择组件
需要HiddenMode = true，因此select选项被初始化并
潜在的默认值可以正确呈现。
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.HorizontalOffset">
      <summary v="3vWYjR" i="0">
触发器和覆盖之间的水平偏移，默认为4
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.ParentTrigger">
      <summary v="48SclE" i="0">
在嵌套覆盖中使用 (例如菜单-&gt; 子菜单)
触发器是另一个叠加层。
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.Trigger">
      <summary v="4bvUky" i="0">
将触发叠加显示的组件。
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.VerticalOffset">
      <summary v="1HnpzC" i="0">
触发器和覆盖之间的垂直偏移，默认值为4
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.BoundaryAdjustMode">
      <summary v="KChSv" i="0">
覆盖调整策略 (例如，当浏览器调整大小时)。检查
枚举的细节。
</summary>
      <default value="TriggerBoundaryAdjustMode.InView" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.ChildContent">
      <summary v="1gMxc" i="0">
触发器 (链接、按钮等)
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.ComplexAutoCloseAndVisible">
      <summary v="2fDqL" i="0">
是否需要自动关闭和可见控制关闭。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Disabled">
      <summary v="2QRQsZ" i="0">
是否禁用触发器。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.HiddenMode">
      <summary v="wznUH" i="0">
属性转发到覆盖组件。查阅覆盖图
属性以获得更详细的解释。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.InlineFlexMode">
      <summary v="1XN23m" i="0">
(未在未绑定中使用) 将包装div样式设置为 &ldquo;display: inline-flex;”。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.IsButton">
      <summary v="25Xeqt" i="0">
行为像一个按钮: 点击时调用OnClick
(除非OnClickDiv被覆盖并且不调用base)。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnClick">
      <summary v="3d74MK" i="0">
单击triggger时的回调
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMaskClick">
      <summary v="ikdSq" i="0">
回调-等效于触发触发器上的OnMouseUp事件。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMouseEnter">
      <summary v="35YiFL" i="0">
当鼠标进入触发器边界时回调。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMouseLeave">
      <summary v="1VUc5I" i="0">
鼠标离开触发器边界时的回调。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnOverlayHiding">
      <summary v="24gkPj" i="0">
覆盖隐藏时的回调。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnVisibleChange">
      <summary v="3buQek" i="0">
覆盖可见性发生变化时的回调。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Overlay">
      <summary v="2RFxLE" i="0">
覆盖内容 (触发器激活后将呈现的内容)
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayClassName">
      <summary v="3QEUgi" i="0">
覆盖容器自定义css类。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayEnterCls">
      <summary v="2LgbEv" i="0">
显示叠加时添加到叠加的Css类。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayHiddenCls">
      <summary v="12iLR6" i="0">
当覆盖被隐藏时，Css类被添加到覆盖。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayLeaveCls">
      <summary v="1PwGmh" i="0">
当overlay隐藏时添加到overlay的Css类。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayStyle">
      <summary v="2XefjF" i="0">
将添加到覆盖div的Css样式。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Placement">
      <summary v="GYoId" i="0">
下拉叠加相对于目标的位置。
可以是: 顶部，左侧，右侧，底部，TopLeft，TopRight，BottomLeft，BottomRight，LeftBottom，RightTop，RightBottom
</summary>
      <default value="PlacementType.BottomLeft" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.PlacementCls">
      <summary v="WTn3s" i="0">
覆盖基于 'Placement' 参数的默认放置类。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.PopupContainerSelector">
      <summary v="2eHWNH" i="0">
定义什么将成为覆盖的容器。
示例用例: 当覆盖必须包含在
可滚动区域。
</summary>
      <default value="body" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Trigger">
      <summary v="40VgVu" i="0">
触发模式。通过传递一个数组可以是多个。
</summary>
      <default value="TriggerType.Hover" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.TriggerCls">
      <summary v="3T7wiN" i="0">
触发器元素CSS类。
</summary>
      <default value="ant-dropdown-trigger" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.TriggerReference">
      <summary v="1DTqfD" i="0">
手动将参考设置为触发元素。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Unbound">
      <summary v="2o8VWA" i="0">
设置了ElementReference以避免包装div的ChildElement。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Visible">
      <summary v="18BKHv" i="0">
切换覆盖可行性。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.VisibleChanged">
      <summary v="1mRbGW" i="0">
可见性更改时的回调。
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef.OnCancel">
      <summary v="3A1HW6" i="0">
当取消按钮或关闭单击时调用
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef.OnOk">
      <summary v="pmyYN" i="0">
好按钮单击时调用
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef`1.OnCancel">
      <summary v="uSJz1" i="0">
当取消按钮或关闭单击时调用
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef`1.OnOk">
      <summary v="xi0GX" i="0">
单击好按钮时调用
</summary>
    </member>
    <member name="P:AntDesign.Layout.ChildContent">
      <summary v="4bqEO7" i="0">
内在的内容
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Column">
      <summary v="2yHOkI" i="0">
网格列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Gutter">
      <summary v="lrZLp" i="0">
网格之间的间距
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Lg">
      <summary v="1cG3ru" i="0">
&ge; 992px网格列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Md">
      <summary v="2JROGw" i="0">
&ge; 768px格列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Sm">
      <summary v="eWhMM" i="0">
&ge; 576px网格列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Xl">
      <summary v="xG0Zl" i="0">
&ge; 1200px格列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Xs">
      <summary v="4AyrfH" i="0">
&lt;576px网格列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Xxl">
      <summary v="20jLOR" i="0">
&ge; 1600px网格列
</summary>
    </member>
    <member name="P:AntDesign.ListItem.Actions">
      <summary v="3Rv1Eg" i="0">
列表项的操作内容。如果itemLayout是垂直的，则在底部显示内容，否则在最右边显示内容。
</summary>
    </member>
    <member name="P:AntDesign.ListItem.ChildContent">
      <summary v="cIZCH" i="0">
项目的主要内容
</summary>
    </member>
    <member name="P:AntDesign.ListItem.Extra">
      <summary v="EjRd1" i="0">
列表项的额外内容。如果itemLayout是垂直的，则在右侧显示内容，否则在最右侧显示内容。
</summary>
    </member>
    <member name="P:AntDesign.ListItem.NoFlex">
      <summary v="2aIBXK" i="0">
是否使用flex for item。当为true时，将不使用flex。
</summary>
    </member>
    <member name="P:AntDesign.ListItem.OnClick">
      <summary v="4ZeOz1" i="0">
单击项目时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.Avatar">
      <summary v="1V3DSW" i="0">
列表项的头像
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.AvatarTemplate">
      <summary v="3g8dON" i="0">
列表项的头像内容。优先于 <see cref="P:AntDesign.ListItemMeta.Avatar" /></summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.Description">
      <summary v="3W6x2d" i="0">
列表项的描述
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.DescriptionTemplate">
      <summary v="3M9tM9" i="0">
列表项的描述内容。优先于 <see cref="P:AntDesign.ListItemMeta.Description" /></summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.Title">
      <summary v="76EDB" i="0">
列表项的标题
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.TitleTemplate">
      <summary v="2LZGTk" i="0">
列表项的标题内容。优先于 <see cref="P:AntDesign.ListItemMeta.Title" /></summary>
    </member>
    <member name="P:AntDesign.Mentions.LoadOptions">
      <summary v="27wMxz" i="0">
当用户在 @ 符号后键入值时，动态加载提及选项以供显示
</summary>
    </member>
    <member name="P:AntDesign.Menu.Accordion">
      <summary v="f14MC" i="0">
手风琴模式。当为true时，一次只能打开一个子菜单。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Menu.Animation">
      <summary v="1N1gTG" i="0">
启用或禁用动画
</summary>
    </member>
    <member name="P:AntDesign.Menu.AutoCloseDropdown">
      <summary v="2UhE9I" i="0">
单击项目时关闭下拉列表
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Menu.ChildContent">
      <summary v="4SpSZe" i="0">
菜单的内容。应包含MenuItem元素。
</summary>
    </member>
    <member name="P:AntDesign.Menu.DefaultOpenKeys">
      <summary v="2lxAur" i="0">
数组与默认打开的子菜单的键
</summary>
    </member>
    <member name="P:AntDesign.Menu.DefaultSelectedKeys">
      <summary v="36MfIM" i="0">
具有默认选定菜单项的键的数组
</summary>
    </member>
    <member name="P:AntDesign.Menu.InlineCollapsed">
      <summary v="2JiYRd" i="0">
指定菜单为内联模式时的折叠状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Menu.InlineIndent">
      <summary v="46JFye" i="0">
每个级别上的内联菜单项的缩进 (以像素为单位)
</summary>
      <default value="24" />
    </member>
    <member name="P:AntDesign.Menu.Mode">
      <summary v="2dRL9C" i="0">
菜单类型
</summary>
      <default value="MenuMode.Vertical" />
    </member>
    <member name="P:AntDesign.Menu.Multiple">
      <summary v="3ZzXs2" i="0">
允许选择多个项目
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Menu.OnMenuItemClicked">
      <summary v="1eFRz7" i="0">
单击主菜单项时的回调
</summary>
    </member>
    <member name="P:AntDesign.Menu.OnOpenChange">
      <summary v="3A0FP7" i="0">
打开的子菜单更改时回调。传递了打开键的数组。
</summary>
    </member>
    <member name="P:AntDesign.Menu.OnSubmenuClicked">
      <summary v="3n2qYO" i="0">
单击子菜单时回调
</summary>
    </member>
    <member name="P:AntDesign.Menu.OpenKeys">
      <summary v="44j6TW" i="0">
数组与当前打开的子菜单的键
</summary>
    </member>
    <member name="P:AntDesign.Menu.OpenKeysChanged">
      <summary v="3A0FP7" i="0">
打开的子菜单更改时回调。传递了打开键的数组。
</summary>
    </member>
    <member name="P:AntDesign.Menu.Selectable">
      <summary v="3Or9Bv" i="0">
允许选择菜单项。当它为false时，在OnClick之后未选择菜单项。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Menu.SelectedKeys">
      <summary v="1FFvn6" i="0">
具有当前选定菜单项的键的数组
</summary>
    </member>
    <member name="P:AntDesign.Menu.SelectedKeysChanged">
      <summary v="qYNe9" i="0">
当所选项目更改时回调。已传递打开键的数组。
</summary>
    </member>
    <member name="P:AntDesign.Menu.ShowCollapsedTooltip">
      <summary v="3Kif8z" i="0">
在折叠菜单上显示工具提示
</summary>
    </member>
    <member name="P:AntDesign.Menu.Theme">
      <summary v="ShPcT" i="0">
菜单的颜色主题
</summary>
      <default value="MenuTheme.Light" />
    </member>
    <member name="P:AntDesign.Menu.TriggerSubMenuAction">
      <summary v="2Cdqoh" i="0">
哪个动作可以触发子菜单打开/关闭
</summary>
      <default value="Trigger.Hover" />
    </member>
    <member name="P:AntDesign.MenuItem.ChildContent">
      <summary v="1mo04R" i="0">
显示标题
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.Disabled">
      <summary v="33jili" i="0">
是否禁用菜单项
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.MenuItem.Icon">
      <summary v="1RX7Qj" i="0">
菜单项的图标
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.IconTemplate">
      <summary v="3qw2if" i="0">
自定义图标模板，当同时设置图标和IconTemplate时，首选IconTemplate
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.Key">
      <summary v="1EY7q0" i="0">
菜单项的唯一ID
</summary>
      <default value="Uniquely Generated ID" />
    </member>
    <member name="P:AntDesign.MenuItem.OnClick">
      <summary v="9EfIX" i="0">
单击项目时的回调
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.RouterLink">
      <summary v="eb4ZX" i="0">
Href路由
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.RouterMatch">
      <summary v="17cbW4" i="0">
修改NavLink的URL匹配行为
</summary>
      <default value="NavLinkMatch.All" />
    </member>
    <member name="P:AntDesign.MenuItem.Title">
      <summary v="BxZlz" i="0">
菜单项的标题
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.ChildContent">
      <summary v="2Gnqmp" i="0">
子菜单或菜单项
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.Key">
      <summary v="4ET1jk" i="0">
唯一ID
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.Title">
      <summary v="1mCFtT" i="0">
组的标题
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.TitleTemplate">
      <summary v="1mCFtT" i="0">
组的标题
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.ActiveClass">
      <summary v="2vOtf4" i="0">
获取或设置应用于NavLink的CSS类名称，当
当前路由与NavLink href匹配。
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.ChildContent">
      <summary v="23NMCf" i="0">
获取或设置组件的子内容。
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.Match">
      <summary v="3aS9Lu" i="0">
获取或设置表示URL匹配行为的值。
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Content">
      <summary v="2DU392" i="0">
消息的内容
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Duration">
      <summary v="2VrphD" i="0">
自动解除前的时间，以秒为单位
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Icon">
      <summary v="2waSLe" i="0">
消息的图标
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Key">
      <summary v="2AqDBg" i="0">
组件的唯一标识符
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Type">
      <summary v="4EOGvC" i="0">
消息的风格
</summary>
    </member>
    <member name="P:AntDesign.MessageItem.Config">
      <summary v="3zhdBm" i="0">
消息配置
</summary>
    </member>
    <member name="P:AntDesign.Modal.AfterClose">
      <summary v="22x97b" i="0">
指定当模态关闭时将被调用的函数
</summary>
    </member>
    <member name="P:AntDesign.Modal.BodyStyle">
      <summary v="20QVv7" i="0">
模态车身元素的车身样式。如高度，填充等
</summary>
    </member>
    <member name="P:AntDesign.Modal.CancelButtonProps">
      <summary v="43SP5U" i="0">
取消按钮道具
</summary>
    </member>
    <member name="P:AntDesign.Modal.CancelText">
      <summary v="36siBe" i="0">
取消按钮的文本或RenderFragment，它将覆盖ModalLocale
</summary>
    </member>
    <member name="P:AntDesign.Modal.Centered">
      <summary v="4ae1Lx" i="0">
居中
</summary>
    </member>
    <member name="P:AntDesign.Modal.ChildContent">
      <summary v="2GRB5G" i="0">
子内容
</summary>
    </member>
    <member name="P:AntDesign.Modal.Closable">
      <summary v="6Ku7u" i="0">
关闭 (x) 按钮是否在模式对话框的右上角可见
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.CloseIcon">
      <summary v="1Bc5mm" i="0">
更接近的图标RenderFragment，默认值为 &ldquo;X”
</summary>
      <default value="close-outline" />
    </member>
    <member name="P:AntDesign.Modal.ConfirmLoading">
      <summary v="3IUGTG" i="0">
是否为好按钮应用加载视觉效果
</summary>
    </member>
    <member name="P:AntDesign.Modal.DefaultMaximized">
      <summary v="iMY02" i="0">
在组件初始化期间最大化模态，它将忽略可最大化的值。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Modal.DestroyOnClose">
      <summary v="3L0ice" i="0">
是否卸载onClose上的子组件
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Modal.Draggable">
      <summary v="2CuRqx" i="0">
是否拖动模式对话框
</summary>
    </member>
    <member name="P:AntDesign.Modal.DragInViewport">
      <summary v="4eoCF0" i="0">
仅在视口内拖放
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.Footer">
      <summary v="geWVh" i="0">
页脚内容，不需要默认按钮时设置为页脚 = null
</summary>
    </member>
    <member name="P:AntDesign.Modal.ForceRender">
      <summary v="2f0TiM" i="0">
是否在打开之前强制渲染模态dom。
</summary>
    </member>
    <member name="P:AntDesign.Modal.GetContainer">
      <summary v="18bBhe" i="0">
获取或设置模态父DOM，默认值为null: 指定document.body
</summary>
    </member>
    <member name="P:AntDesign.Modal.Header">
      <summary v="2AdhVw" i="0">
标题内容
</summary>
    </member>
    <member name="P:AntDesign.Modal.Keyboard">
      <summary v="4DS9c2" i="0">
是否支持按esc键关闭
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.Locale">
      <summary v="8rCHK" i="0">
模态区域设置
</summary>
      <default value="LocaleProvider.CurrentLocacle.Modal" />
    </member>
    <member name="P:AntDesign.Modal.Mask">
      <summary v="4N1u35" i="0">
是否显示蒙版
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.MaskClosable">
      <summary v="1DBAFK" i="0">
单击蒙版 (模态以外的区域) 时是否关闭模态对话框
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.MaskStyle">
      <summary v="37Y5Kb" i="0">
模态的遮罩元素的样式
</summary>
    </member>
    <member name="P:AntDesign.Modal.MaxBodyHeight">
      <summary v="RA58v" i="0">
最大模态内容车身高度
</summary>
    </member>
    <member name="P:AntDesign.Modal.Maximizable">
      <summary v="4CJFl8" i="0">
显示模式最大化按钮
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Modal.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
模式处于正常状态时最大化按钮的图标
</summary>
      <default value="fullscreen-outline" />
    </member>
    <member name="P:AntDesign.Modal.OkButtonProps">
      <summary v="y5TMV" i="0">
好按钮道具
</summary>
    </member>
    <member name="P:AntDesign.Modal.OkText">
      <summary v="3XDkqM" i="0">
好按钮的RenderFragment的文本，它将覆盖ModalLocale
</summary>
      <default value="null" />
    </member>
    <member name="P:AntDesign.Modal.OkType">
      <summary v="1XT62s" i="0">
好按钮的按钮类型
</summary>
      <default value="ButtonType.Primary" />
    </member>
    <member name="P:AntDesign.Modal.OnCancel">
      <summary v="1CxuiP" i="0">
指定当用户单击蒙版，右上角的关闭按钮或取消按钮时将调用的函数
</summary>
    </member>
    <member name="P:AntDesign.Modal.OnOk">
      <summary v="1gOn2R" i="0">
指定当用户单击好按钮时将调用的函数
</summary>
    </member>
    <member name="P:AntDesign.Modal.Resizable">
      <summary v="1COtwc" i="0">
可调整大小 (仅水平方向)
</summary>
    </member>
    <member name="P:AntDesign.Modal.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
模式最大化时最大化按钮的图标
</summary>
      <default value="fullscreen-exit-outline" />
    </member>
    <member name="P:AntDesign.Modal.Rtl">
      <summary v="MHb3Z" i="0">
是RTL
</summary>
    </member>
    <member name="P:AntDesign.Modal.Title">
      <summary v="3xtZMa" i="0">
模态对话框的标题
</summary>
    </member>
    <member name="P:AntDesign.Modal.TitleTemplate">
      <summary v="4O2U5z" i="0">
模态对话框的标题。优先于所有权。
</summary>
    </member>
    <member name="P:AntDesign.Modal.Visible">
      <summary v="1nqRXC" i="0">
模态对话框是否可见
</summary>
    </member>
    <member name="P:AntDesign.Modal.VisibleChanged">
      <summary v="2xcii5" i="0">
当模式对话框可见或不可见时指定函数调用
</summary>
    </member>
    <member name="P:AntDesign.Modal.Width">
      <summary v="3Ed7Ef" i="0">
模式对话框的宽度，默认值为520
</summary>
      <default value="520" />
    </member>
    <member name="P:AntDesign.Modal.WrapClassName">
      <summary v="3xRJ9X" i="0">
模态对话框的容器的类名
</summary>
    </member>
    <member name="P:AntDesign.Modal.ZIndex">
      <summary v="10GCuH" i="0">
模态的z-index
</summary>
      <default value="1000" />
    </member>
    <member name="P:AntDesign.ModalCancelFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalClosingEventArgs.Cancel">
      <summary v="49f55H" i="0">
是否应取消结账。
如果应取消关闭，则设置为true; 默认值为false。
是否应取消关闭模态。
如果应取消关闭，请设置为true; 默认为false。
</summary>
    </member>
    <member name="P:AntDesign.ModalFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalLocale.CancelText">
      <summary v="3YxACC" i="0">
&ldquo;取消” 按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ModalLocale.OkText">
      <summary v="1kbJyX" i="0">
好按钮文本
</summary>
    </member>
    <member name="P:AntDesign.ModalOkFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalOptions.AfterClose">
      <summary v="2jjyi0" i="0">
对话框关闭后触发
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.BodyStyle">
      <summary v="Bh4MH" i="0">
ant-modal-body风格
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Closable">
      <summary v="122WS7" i="0">
显示ant-modal-closer
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.CloseIcon">
      <summary v="1Bc5mm" i="0">
更接近的图标RenderFragment，默认值为 &ldquo;X”
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.ConfirmLoading">
      <summary v="3IUGTG" i="0">
是否为好按钮应用加载视觉效果
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Content">
      <summary v="LVRKT" i="0">
ChildContent
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DefaultMaximized">
      <summary v="iMY02" i="0">
在组件初始化期间最大化模态，它将忽略可最大化的值。
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DestroyOnClose">
      <summary v="45nYFl" i="0">
模态关闭后是否从DOM中删除模态
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Draggable">
      <summary v="3zmBrO" i="0">
可拖动模态
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DragInViewport">
      <summary v="4eoCF0" i="0">
仅在视口内拖放
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Footer">
      <summary v="4GmrOX" i="0">
模态页脚。如果页脚 = = null，对话框将没有页脚
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Maximizable">
      <summary v="4CJFl8" i="0">
显示模式最大化按钮
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
模式处于正常状态时最大化按钮的图标
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.OnCancel">
      <summary v="4XxZcU" i="0">
指定当用户单击蒙版，右上角的关闭按钮或取消按钮时将调用的函数。
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.OnOk">
      <summary v="1gOn2R" i="0">
指定当用户单击好按钮时将调用的函数
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Resizable">
      <summary v="2v6bNP" i="0">
可调整大小
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
模式最大化时最大化按钮的图标
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Style">
      <summary v="449EWV" i="0">
蚂蚁模态风格
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalOptions.WrapClassName">
      <summary v="3xRJ9X" i="0">
模态对话框的容器的类名
</summary>
    </member>
    <member name="P:AntDesign.ModalRef.Config">
      <summary v="tybuH" i="0">
模态选项
</summary>
    </member>
    <member name="P:AntDesign.ModalRef`1.OnCancel">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.ModalRef`1.OnOk">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.NotificationConfig.AnimationClass">
      <summary v="jSnlC" i="0">
控制出现与消失的动画
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Btn">
      <summary v="3rMr6n" i="0">
自定义关闭按钮
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.ClassName">
      <summary v="JO5pm" i="0">
自定义CSS类
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.CloseIcon">
      <summary v="3vgdNM" i="0">
自定义关闭图标
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Description">
      <summary v="4XGzTg" i="0">
通知提醒内容，必选，字符串或者RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Duration">
      <summary v="4USzIz" i="0">
自动关闭的延时，单位为秒。默认4.5秒后自动关闭，配置为null则不自动关闭
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Icon">
      <summary v="4Ai0SO" i="0">
自定义图标
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Key">
      <summary v="2OV090" i="0">
当前通知唯一标志
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Message">
      <summary v="419bj1" i="0">
通知提醒标题，必选，字符串或者RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.NotificationType">
      <summary v="1WRYqg" i="0">
通知提醒框左侧的图标类型
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Placement">
      <summary v="1Cg6Tf" i="0">
弹出位置
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Style">
      <summary v="1EFSed" i="0">
自定义内联样式
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Bottom">
      <summary v="4CcfGP" i="0">
消息从底部弹出时，距离底部的位置，单位像素。
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.CloseIcon">
      <summary v="3vgdNM" i="0">
自定义关闭图标
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Duration">
      <summary v="4USzIz" i="0">
自动关闭的延时，单位为秒。默认4.5秒后自动关闭，配置为null则不自动关闭
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Placement">
      <summary v="1Cg6Tf" i="0">
弹出位置
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Rtl">
      <summary v="1mUF1k" i="0">
是否开启RTL模式
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Top">
      <summary v="PvlTX" i="0">
消息从顶部弹出时，距离顶部的位置，单位像素。
</summary>
    </member>
    <member name="P:AntDesign.NotificationRef.Config">
      <summary v="1axnfs" i="0">
通知框的配置
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.BackIcon">
      <summary v="4F836i" i="0">
后退按钮的图标
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.BackIconTemplate">
      <summary v="iOsTP" i="0">
&ldquo;后退” 按钮RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.Ghost">
      <summary v="1YTvWo" i="0">
使背景透明
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.PageHeader.OnBack">
      <summary v="terW1" i="0">
单击 &ldquo;返回” 时回调
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderAvatar">
      <summary v="3uTINn" i="0">
头像部分
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderBreadcrumb">
      <summary v="4409WA" i="0">
面包屑部分
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderContent">
      <summary v="4eWvLL" i="0">
内容部分
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderExtra">
      <summary v="3ceD31" i="0">
操作区域，在标题行的行尾
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderFooter">
      <summary v="1FBfWP" i="0">
页脚节
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderSubtitle">
      <summary v="17U1OJ" i="0">
副标题部分
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderTags">
      <summary v="IZ4xN" i="0">
标题后的 &ldquo;标记” 部分
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderTitle">
      <summary v="1kTnKr" i="0">
标题部分
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.Subtitle">
      <summary v="1mCGmU" i="0">
副标题
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.SubtitleTemplate">
      <summary v="1mCGmU" i="0">
副标题
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.Title">
      <summary v="22Q5W6" i="0">
标题
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.TitleTemplate">
      <summary v="22Q5W6" i="0">
标题
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Current">
      <summary v="3Wc86f" i="0">
当前页码
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Pagination.DefaultCurrent">
      <summary v="YzgoJ" i="0">
默认初始页码
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Pagination.DefaultPageSize">
      <summary v="v8TqS" i="0">
每页的默认数据项数量
</summary>
      <default value="10" />
    </member>
    <member name="P:AntDesign.Pagination.Direction">
      <summary v="2HhBb8" i="0">
语言方向
</summary>
      <default value="ltr" />
    </member>
    <member name="P:AntDesign.Pagination.Disabled">
      <summary v="2oikWA" i="0">
禁用分页
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.GoButton">
      <summary v="C0jWQ" i="0">
快速跳线确认按钮渲染片段
</summary>
    </member>
    <member name="P:AntDesign.Pagination.HideOnSinglePage">
      <summary v="iqAev" i="0">
是否在单页上隐藏寻呼机
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.ItemRender">
      <summary v="3mISLh" i="0">
页面项目的自定义呈现
</summary>
    </member>
    <member name="P:AntDesign.Pagination.JumpNextIcon">
      <summary v="1Qy79w" i="0">
&ldquo;跳转下一个” 图标
</summary>
    </member>
    <member name="P:AntDesign.Pagination.JumpPrevIcon">
      <summary v="lvbR8" i="0">
&ldquo;跳转到上一个” 按钮
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Locale">
      <summary v="1w1TMr" i="0">
本地化选项
</summary>
      <default value="LocaleProvider.CurrentLocale.Pagination" />
    </member>
    <member name="P:AntDesign.Pagination.NextIcon">
      <summary v="2idV0x" i="0">
&ldquo;下一步” 按钮
</summary>
    </member>
    <member name="P:AntDesign.Pagination.OnChange">
      <summary v="18LSAy" i="0">
在页码更改时调用，它将生成的页码和pageSize作为其参数
</summary>
    </member>
    <member name="P:AntDesign.Pagination.OnShowSizeChange">
      <summary v="3q2Ck1" i="0">
当PageSize更改时调用
</summary>
    </member>
    <member name="P:AntDesign.Pagination.PageSize">
      <summary v="1YbZ2v" i="0">
每页的数据项数量
</summary>
      <default value="10" />
    </member>
    <member name="P:AntDesign.Pagination.PageSizeOptions">
      <summary v="1tiULv" i="0">
指定sizeChanger选项
</summary>
      <default value="10, 20, 50, 100" />
    </member>
    <member name="P:AntDesign.Pagination.PrevIcon">
      <summary v="3n5isH" i="0">
&ldquo;上一个” 按钮
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Responsive">
      <summary v="16r8QA" i="0">
(未实现) 如果未指定大小，则分页将根据窗口的宽度调整大小
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Pagination.ShowLessItems">
      <summary v="2i2MLu" i="0">
显示较少的页面项目
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.ShowPrevNextJumpers">
      <summary v="2paCrv" i="0">
显示或隐藏下一个/上一个按钮
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Pagination.ShowQuickJumper">
      <summary v="289rdc" i="0">
确定是否可以直接跳转到页面
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.ShowSizeChanger">
      <summary v="16wrN4" i="0">
确定是否显示PageSize select
</summary>
      <default value="true when Total &gt;= TotalBoundaryShowSizeChanger" />
    </member>
    <member name="P:AntDesign.Pagination.ShowTitle">
      <summary v="3I65nw" i="0">
显示页面项目的标题
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Pagination.ShowTotal">
      <summary v="28nNfR" i="0">
显示总数和范围
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Simple">
      <summary v="3FjsK6" i="0">
是否使用简单模式
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.Size">
      <summary v="1tTwV6" i="0">
指定分页的大小，可以设置为小。
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Total">
      <summary v="2iIimT" i="0">
数据项的总数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Pagination.TotalBoundaryShowSizeChanger">
      <summary v="3MqTSs" i="0">
用于确定大小更改器是否应使用默认逻辑显示。如果提供了ShowSizeChanger，则忽略。
</summary>
      <default value="50" />
    </member>
    <member name="P:AntDesign.Pagination.UnmatchedAttributes">
      <summary v="1NPCAo" i="0">
传入的任何其他参数都被splatted到容器元素上
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.ChangeSize">
      <summary v="3E28V2" i="0">
页面大小更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.Current">
      <summary v="2wAuaG" i="0">
当前页面
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.Disabled">
      <summary v="13w0uu" i="0">
是否禁用分页
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.PaginationOptions.GoButton">
      <summary v="4bLRcd" i="0">
快速跳线确认按钮，这是react版本的<c>ShowQuickJumper: {gotutton: ReactNode }</c></summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.IsSmall">
      <summary v="EvxPJ" i="0">
如果分页很小或不
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.PaginationOptions.Locale">
      <summary v="3J87cK" i="0">
用于组件本地化的区域设置
</summary>
      <default value="LocaleProvider.CurrentLocale.Pagination" />
    </member>
    <member name="P:AntDesign.PaginationOptions.PageSize">
      <summary v="1yY8N1" i="0">
当前pag大小
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.PageSizeOptions">
      <summary v="QQhPQ" i="0">
页面大小选择选项
</summary>
      <default value="{ 10, 20, 50, 100 }" />
    </member>
    <member name="P:AntDesign.PaginationOptions.QuickGo">
      <summary v="3uFN61" i="0">
跳转到特定页面时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Panel.Active">
      <summary v="2amOsH" i="0">
面板是否处于活动状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Panel.ChildContent">
      <summary v="QKn5O" i="0">
面板的内容。
</summary>
    </member>
    <member name="P:AntDesign.Panel.Disabled">
      <summary v="1EQSBP" i="0">
如果为true，则无法打开或关闭面板。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Panel.Extra">
      <summary v="2ekzGl" i="0">
面板角的额外字符串
</summary>
    </member>
    <member name="P:AntDesign.Panel.ExtraTemplate">
      <summary v="4IrP6r" i="0">
面板角落的额外内容。优先于 <see cref="P:AntDesign.Panel.Extra" /></summary>
    </member>
    <member name="P:AntDesign.Panel.Header">
      <summary v="fxSFy" i="0">
面板的标头字符串
</summary>
    </member>
    <member name="P:AntDesign.Panel.HeaderTemplate">
      <summary v="TXEyH" i="0">
面板的标题内容。优先于 <see cref="P:AntDesign.Panel.Header" /></summary>
    </member>
    <member name="P:AntDesign.Panel.Key">
      <summary v="18WOVn" i="0">
面板的唯一标识符
</summary>
    </member>
    <member name="P:AntDesign.Panel.OnActiveChange">
      <summary v="BCIxD" i="0">
当此面板的活动状态更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Panel.ShowArrow">
      <summary v="1CrqfF" i="0">
显示或不显示面板的箭头
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Popconfirm.ArrowPointAtCenter">
      <summary v="wzAnt" i="0">
将工具提示箭头指向中心
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Popconfirm.CancelButtonProps">
      <summary v="23m1vg" i="0">
传递给 &ldquo;取消” 按钮的属性
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.CancelText">
      <summary v="3YxACC" i="0">
&ldquo;取消” 按钮文本
</summary>
      <default value="Cancel" />
    </member>
    <member name="P:AntDesign.Popconfirm.Icon">
      <summary v="4Ep0jC" i="0">
文本显示的图标
</summary>
      <default value="exclamation-circle" />
    </member>
    <member name="P:AntDesign.Popconfirm.IconTemplate">
      <summary v="3IZ5x9" i="0">
由文本显示的图标。优先于图标。
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.Locale">
      <summary v="3xYBvu" i="0">
传递到 &ldquo;确定” 按钮的属性
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.MouseEnterDelay">
      <summary v="2Ffm0m" i="0">
当触发器悬停且鼠标进入时，显示popconfirm之前的延迟 (以秒为单位)
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popconfirm.MouseLeaveDelay">
      <summary v="40jyxC" i="0">
当触发器悬停且鼠标离开时，隐藏popconfirm之前的延迟 (以秒为单位)
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popconfirm.OkButtonProps">
      <summary v="3xYBvu" i="0">
传递到 &ldquo;确定” 按钮的属性
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.OkText">
      <summary v="oc4KL" i="0">
&ldquo;确定” 按钮文本
</summary>
      <default value="OK" />
    </member>
    <member name="P:AntDesign.Popconfirm.OkType">
      <summary v="3Yi8aY" i="0">
Ok按钮类型
</summary>
      <default value="primary" />
    </member>
    <member name="P:AntDesign.Popconfirm.OnCancel">
      <summary v="2OQchn" i="0">
单击 &ldquo;取消” 按钮时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.OnConfirm">
      <summary v="oUEEu" i="0">
单击 &ldquo;确定” 按钮时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.Title">
      <summary v="22Q5W6" i="0">
标题
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.TitleTemplate">
      <summary v="3jNoHo" i="0">
标题。优先于标题。
</summary>
    </member>
    <member name="P:AntDesign.Popover.ArrowPointAtCenter">
      <summary v="4ZyO5q" i="0">
是否将箭头指向已包装元素的中心
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Popover.Content">
      <summary v="14N6If" i="0">
卡片的内容字符串
</summary>
    </member>
    <member name="P:AntDesign.Popover.ContentTemplate">
      <summary v="4DfGdN" i="0">
卡的内容。优先于 <see cref="P:AntDesign.Popover.Content" /></summary>
    </member>
    <member name="P:AntDesign.Popover.MouseEnterDelay">
      <summary v="3jSDeO" i="0">
鼠标输入显示工具提示之前的延迟 (以秒为单位)
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popover.MouseLeaveDelay">
      <summary v="2crCrt" i="0">
在鼠标离开时隐藏工具提示之前，以秒为单位的延迟
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popover.Title">
      <summary v="2aanMX" i="0">
卡片的标题字符串
</summary>
    </member>
    <member name="P:AntDesign.Popover.TitleTemplate">
      <summary v="4XkKDk" i="0">
卡的标题内容。优先于 <see cref="P:AntDesign.Popover.Title" /></summary>
    </member>
    <member name="P:AntDesign.Progress.Format">
      <summary v="4Lqn3Z" i="0">
内容的模板函数
</summary>
      <default value="i%" />
    </member>
    <member name="P:AntDesign.Progress.GapDegree">
      <summary v="12RNGJ" i="0">
半圆的间隙度，0 ~ 295
</summary>
      <default value="75" />
    </member>
    <member name="P:AntDesign.Progress.GapPosition">
      <summary v="21CHJQ" i="0">
间隙位置，选项: 上下左右
</summary>
      <default value="ProgressGapPosition.Bottom" />
    </member>
    <member name="P:AntDesign.Progress.Percent">
      <summary v="3NOeu0" i="0">
设置完成百分比
</summary>
    </member>
    <member name="P:AntDesign.Progress.ShowInfo">
      <summary v="LnI2g" i="0">
是否显示进度值和状态图标
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Progress.Size">
      <summary v="3T93xE" i="0">
进度大小
</summary>
      <default value="ProgressSize.Default" />
    </member>
    <member name="P:AntDesign.Progress.Status">
      <summary v="1r9Emr" i="0">
要设置进度的状态，选项: 成功异常正常活动 (仅行)
</summary>
      <default value="ProgressStatus.Normal" />
    </member>
    <member name="P:AntDesign.Progress.Steps">
      <summary v="42cdeR" i="0">
总步数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Progress.StrokeColor">
      <summary v="4XWxFu" i="0">
进度条的颜色，传递对象时呈现线性渐变
循环进程的颜色，传递对象时呈现线性渐变
</summary>
    </member>
    <member name="P:AntDesign.Progress.StrokeLinecap">
      <summary v="3jsLOz" i="0">
设置progress linecap的样式
</summary>
      <default value="ProgressStrokeLinecap.Round" />
    </member>
    <member name="P:AntDesign.Progress.StrokeWidth">
      <summary v="4JZZdB" i="0">
设置进度条的宽度，单位: px
设置循环进度的宽度，单位: 画布宽度的百分比
设置仪表板进度的宽度，单位: 画布宽度的百分比
</summary>
      <default value="Type = line: 10, Type = circle or dashboard: 6" />
    </member>
    <member name="P:AntDesign.Progress.SuccessPercent">
      <summary v="196roM" i="0">
分段成功百分比
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Progress.TrailColor">
      <summary v="zWVJN" i="0">
未填充部分的颜色
</summary>
    </member>
    <member name="P:AntDesign.Progress.Type">
      <summary v="3E83zd" i="0">
要设置类型，选项: 直线圆操控板
</summary>
      <default value="ProgressType.Line" />
    </member>
    <member name="P:AntDesign.Progress.Width">
      <summary v="1IrjNn" i="0">
要设置循环进度的画布宽度，单位: px
设置仪表板进度的画布宽度，单位: px
</summary>
      <default value="120" />
    </member>
    <member name="P:AntDesign.PropertyColumn`2.Property">
      <summary v="24tPyG" i="0">
定义要在此列的单元格中显示的值。
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.AutoFocus">
      <summary v="1HCy19" i="0">
是否自动对焦
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Radio`1.Checked">
      <summary v="ocZri" i="0">
指定是否选择无线电
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.CheckedChange">
      <summary v="Zx50T" i="0">
checked状态更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.CheckedChanged">
      <summary v="Zx50T" i="0">
checked状态更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.ChildContent">
      <summary v="1Uw6Ur" i="0">
显示收音机的标签内容
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.DefaultChecked">
      <summary v="4DHC1F" i="0">
指定最初是否选中单选按钮
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Radio`1.Disabled">
      <summary v="OMN4Y" i="0">
禁用无线电buton
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.RadioButton">
      <summary v="2motyg" i="0">
设置为<c>true</c>可将单选样式设置为按钮组。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Radio`1.Value">
      <summary v="2zndEn" i="0">
所选值
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.ButtonStyle">
      <summary v="4ZvOUP" i="0">
组的按钮样式。
</summary>
      <default value="RadioButtonStyle.Outline" />
    </member>
    <member name="P:AntDesign.RadioGroup`1.ChildContent">
      <summary v="2tXoH4" i="0">
该组的无线电元素。使用此或 <see cref="P:AntDesign.RadioGroup`1.Options" /></summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.DefaultValue">
      <summary v="3ecaL6" i="0">
组的默认选定值
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.Disabled">
      <summary v="4M7mxL" i="0">
如果该组已禁用或未禁用
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.Name">
      <summary v="3d51I4" i="0">
输入组中所有无线电的名称
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.OnChange">
      <summary v="47ZR4f" i="0">
当所选值更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.Options">
      <summary v="0Yvct" i="0">
用于在组中显示单选的选项。使用此或 <see cref="P:AntDesign.RadioGroup`1.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.RangePicker`1.OnChange">
      <summary v="48PQMr" i="0">
选定范围更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.RangePicker`1.Value">
      <summary v="yoUC3" i="0">
获取或设置输入的值。这应该与双向绑定一起使用。
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.Rate.AllowClear">
      <summary v="CcqNu" i="0">
再次点击时是否允许清除
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Rate.AllowHalf">
      <summary v="28MDVC" i="0">
是否允许选择两半
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Rate.AutoFocus">
      <summary v="1zMhyj" i="0">
是否专注于渲染
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Rate.Character">
      <summary v="2fMPKJ" i="0">
每个费率的自定义字符
</summary>
    </member>
    <member name="P:AntDesign.Rate.Count">
      <summary v="zRaE1" i="0">
要显示的用于评级的图标数
</summary>
      <default value="5" />
    </member>
    <member name="P:AntDesign.Rate.DefaultValue">
      <summary v="M1qrc" i="0">
呈现评级时的默认值
</summary>
    </member>
    <member name="P:AntDesign.Rate.Disabled">
      <summary v="wt6DV" i="0">
是否禁用选择
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Rate.OnBlur">
      <summary v="1sCaDf" i="0">
当速率失去焦点时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Rate.OnFocus">
      <summary v="366fno" i="0">
当速率获得焦点时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Rate.Tooltips">
      <summary v="298Zgu" i="0">
以评级0-n的索引顺序显示评级的每个增量的工具提示
</summary>
    </member>
    <member name="P:AntDesign.Rate.Value">
      <summary v="1tpDGz" i="0">
当前额定值
</summary>
    </member>
    <member name="P:AntDesign.Rate.ValueChanged">
      <summary v="2nCCVt" i="0">
当评级更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.RateItemRenderContext.Type">
      <summary v="34NDQy" i="0">
'AntIcon' | '文本'
</summary>
    </member>
    <member name="P:AntDesign.Result.ChildContent">
      <summary v="v6uJE" i="0">
子内容。在标题/副标题和额外之间显示。
</summary>
    </member>
    <member name="P:AntDesign.Result.Extra">
      <summary v="2fQpfl" i="0">
所有其他内容下显示的额外内容
</summary>
    </member>
    <member name="P:AntDesign.Result.Icon">
      <summary v="RF40T" i="0">
自定义图标。格式: &ldquo;{type}-{theme}”
</summary>
    </member>
    <member name="P:AntDesign.Result.IsShowIcon">
      <summary v="2YKqbg" i="0">
是否显示图标
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Result.Status">
      <summary v="382blm" i="0">
结果的类型。影响样式和默认图像/图标。可能的值: 成功、错误、信息、警告、404、403、500
</summary>
      <default value="info" />
    </member>
    <member name="P:AntDesign.Result.SubTitle">
      <summary v="1mCGmU" i="0">
副标题
</summary>
    </member>
    <member name="P:AntDesign.Result.SubTitleTemplate">
      <summary v="3a97oJ" i="0">
副标题。优先于字幕。
</summary>
    </member>
    <member name="P:AntDesign.Result.Title">
      <summary v="22Q5W6" i="0">
标题
</summary>
    </member>
    <member name="P:AntDesign.Result.TitleTemplate">
      <summary v="3jNoHo" i="0">
标题。优先于标题。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Body">
      <summary v="151KL0" i="0">
用于自定义页面内容的模板。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Draggable">
      <summary v="3ONg1t" i="0">
是否可以拖放Tab。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.HidePages">
      <summary v="2DzMAJ" i="0">
是否隐藏页面显示并仅保留标题选项卡。然后，您可以使用<see cref="T:AntDesign.ReusePages" />来显示页面conent。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Locale">
      <summary v="2Y3MCv" i="0">
本地化设置。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.ReuseTabsRouteData">
      <summary v="2MfoI1" i="0">
当前页的路由信息，该页是<see cref="T:Microsoft.AspNetCore.Components.RouteData" />的可序列化版本。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Size">
      <summary v="2haZnj" i="0">
制表符的大小。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.TabPaneClass">
      <summary v="1gD4lo" i="0">
内部选项卡窗格的类名。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabsService.Pages">
      <summary v="1FZzbS" i="0">
当前打开页面的页面信息列表，可用于缓存和恢复
</summary>
    </member>
    <member name="P:AntDesign.Row.Align">
      <summary v="oevfR" i="0">
flex布局的垂直对齐方式: 'top' | 'middle' | 'bottom'
</summary>
    </member>
    <member name="P:AntDesign.Row.ChildContent">
      <summary v="vVL0U" i="0">
行的内容，一般包含<see cref="T:AntDesign.Col" />元素。
</summary>
    </member>
    <member name="P:AntDesign.Row.DefaultBreakpoint">
      <summary v="3n5DQ7" i="0">
默认屏幕大小断点。用于在预渲染期间设置装订线
</summary>
    </member>
    <member name="P:AntDesign.Row.Gutter">
      <summary v="35Yklo" i="0">
网格之间的间距，可以是一个数字或字典，如
<c>{ xs: 8，sm: 16，md: 24 }</c> 使水平和垂直间距同时工作的数组 <c>[水平，垂直]</c></summary>
    </member>
    <member name="P:AntDesign.Row.Justify">
      <summary v="O14rv" i="0">
flex布局的Hotizontal对齐方式: 'start' | 'end' | 'center' | 'space-around' |' space-between'
</summary>
    </member>
    <member name="P:AntDesign.Row.OnBreakpoint">
      <summary v="KVmKm" i="0">
触发屏幕大小断点时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Row.Type">
      <summary v="1XuNXN" i="0">
当前未使用
</summary>
    </member>
    <member name="P:AntDesign.Row.Wrap">
      <summary v="37MaKM" i="0">
是否允许行的内容换行
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Search.ClassicSearchIcon">
      <summary v="2T9jbs" i="0">
搜索输入以后缀搜索图标呈现，而不是作为按钮。
当<see cref="P:AntDesign.Search.EnterButton" />时将被忽略!= false
</summary>
    </member>
    <member name="P:AntDesign.Search.EnterButton">
      <summary v="nrhIW" i="0">
输入后是否显示enter按钮。此属性与 <see cref="P:AntDesign.Input`1.AddOnAfter" /></summary>
    </member>
    <member name="P:AntDesign.Search.Loading">
      <summary v="4HPN9Y" i="0">
带加载的搜索框
</summary>
    </member>
    <member name="P:AntDesign.Search.OnSearch">
      <summary v="4QsosL" i="0">
当您单击搜索图标，清除图标或按Enter键时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Block">
      <summary v="RHatn" i="0">
使组件的宽度为父级
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.ChildContent">
      <summary v="jo4Z6" i="0">
段。优先于<see cref="P:AntDesign.Segmented`1.Labels" />和 <see cref="P:AntDesign.Segmented`1.Options" /></summary>
    </member>
    <member name="P:AntDesign.Segmented`1.DefaultValue">
      <summary v="3ijebS" i="0">
默认选定值
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Disabled">
      <summary v="2hf0ml" i="0">
禁用所有段
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Segmented`1.Labels">
      <summary v="4ZBE1A" i="0">
区段的标签
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.OnChange">
      <summary v="MKRop" i="0">
状态变化时触发的回调函数
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Options">
      <summary v="1Nta55" i="0">
区段的选项。优先于 <see cref="P:AntDesign.Segmented`1.Labels" /></summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Size">
      <summary v="2geSzV" i="0">
UI元素的大小
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Value">
      <summary v="1AeloX" i="0">
当前选择的值
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.ValueChanged">
      <summary v="2HiGd1" i="0">
选定段更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.ChildContent">
      <summary v="42554R" i="0">
要在区段中显示的UI内容。优先于<see cref="P:AntDesign.SegmentedItem`1.Label" />和 <see cref="P:AntDesign.SegmentedItem`1.Icon" /></summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Disabled">
      <summary v="aX1BE" i="0">
如果段被禁用
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Icon">
      <summary v="2p0kbD" i="0">
图标显示在区段的标签旁边。仅在未提供<see cref="P:AntDesign.SegmentedItem`1.ChildContent" />时使用。
</summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Label">
      <summary v="OeF48" i="0">
区段项的UI的标签
</summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Value">
      <summary v="20JvA1" i="0">
段项目的值
</summary>
    </member>
    <member name="P:AntDesign.Select.Internal.SelectOptionItem`2.SelectedTagRef">
      <summary v="r6r8j" i="0">
仅供<see cref="T:AntDesign.Select.Internal.SelectContent`2" />使用的ElementRef
对于选定的模式 = 多个和MaxTagCount = 响应
</summary>
    </member>
    <member name="P:AntDesign.Select.Internal.SelectSuffixIcon`2.ShowSearchIcon">
      <summary v="1mzP4W" i="0">
是否在单一模式下显示搜索输入。
</summary>
    </member>
    <member name="P:AntDesign.Select.LabelTemplateItem`2.Ref">
      <summary v="3v0RLn" i="0">
已返回DOM元素的ElementRef引用。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.Bordered">
      <summary v="3MXGxp" i="0">
切换边框样式。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.DataSource">
      <summary v="3vflFW" i="0">
此组件的数据源。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DataSourceEqualityComparer">
      <summary v="2AEbcd" i="0">
将在数据源更改期间使用的EqualityComparer
检测。如果未设置比较器，则为默认值。Net将是
使用。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DefaultActiveFirstOption">
      <summary v="gQ3Lr" i="0">
激活第一个未停用的项目。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DefaultValue">
      <summary v="f4vCE" i="0">
在Mode = default时使用-在初始化期间以及在表单中按下重置按钮时使用该值。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DisabledName">
      <summary v="4Y7Gl5" i="0">
要用作禁用指示器的属性的名称。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DisabledPredicate">
      <summary v="ksaX5" i="0">
指定禁用选项的谓词
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DropdownMatchSelectWidth">
      <summary v="3eKhdS" i="0">
将匹配下拉宽度。如果<c>为true</c> ，则匹配下拉列表中最宽项的宽度。如果是<c>字符串</c> ，则匹配字符串值的宽度 (例如: 250px)
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.DropdownMaxWidth">
      <summary v="1LaV7G" i="0">
不允许下拉宽度在这里值 (例如 &ldquo;768px”) 上增长
</summary>
      <default value="auto" />
    </member>
    <member name="P:AntDesign.Select`2.EnableVirtualization">
      <summary v="39WGkE" i="0">
无论是否启用虚拟化功能，仅适用于。NET 5及以上
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Select`2.GroupName">
      <summary v="V3xJV" i="0">
要用作组指示符的属性的名称。
如果设置了该值，则会按组显示条目。
使用额外的<see cref="P:AntDesign.SelectBase`2.SortByGroup" />和<see cref="P:AntDesign.SelectBase`2.SortByLabel" />。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.IgnoreItemChanges">
      <summary v="419yAi" i="0">
是用来提高速度的。如果您希望更改标签名称，
组名称或禁用的指示器，禁用此属性。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.IsGroupingEnabled">
      <summary v="23rvdX" i="0">
指示是否使用GroupName。当此值为True时，SelectOptions将以组模式呈现。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ItemTemplate">
      <summary v="3q66H2" i="0">
用于自定义项样式。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.LabelProperty">
      <summary v="3Tbo9L" i="0">
指定选项对象中的label属性。如果使用此属性，则不应使用 <see cref="!:LabelName" /></summary>
    </member>
    <member name="P:AntDesign.Select`2.NotFoundContent">
      <summary v="3ITps3" i="0">
指定当没有结果匹配时要显示的内容。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnBlur">
      <summary v="3D7tWb" i="0">
当模糊时调用。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnCreateCustomTag">
      <summary v="3KnduO" i="0">
在创建自定义标记时调用。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnDataSourceChanged">
      <summary v="IHVwI" i="0">
当datasource对象/引用更改时调用。
如果数据源中的值发生变化，它不会触发。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnDropdownVisibleChange">
      <summary v="QTkZe" i="0">
当dropdown可见性更改时调用。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnSearch">
      <summary v="1JqXvj" i="0">
输入更改时触发的回调函数。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ShowArrowIcon">
      <summary v="3T7UEw" i="0">
是否显示下拉箭头
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.TokenSeparators">
      <summary v="2uDnIP" i="0">
定义哪些字符将被视为新创建标记的令牌分隔符。
仅使用键盘创建新标签时非常有用。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.Value">
      <summary v="4UcFXa" i="0">
获取或设置选定的值。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ValueChanged">
      <summary v="1koZkv" i="0">
用于双向绑定。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ValueProperty">
      <summary v="2FBrf9" i="0">
指定选项对象中的value属性。如果使用此属性，则不应使用 <see cref="!:ValueName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AccessKey">
      <summary v="290XqI" i="0">
accesskey全局属性。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ActiveOption">
      <summary v="3ReKb8" i="0">
当前活动 (突出显示) 选项。
它不必等于选定的选项。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AllowClear">
      <summary v="4g3Xf1" i="0">
显示清除按钮。不起作用，如果<see cref="P:AntDesign.AntInputComponentBase`1.Value" />默认类型
也在<see cref="T:AntDesign.SelectOption`2" />列表中，
除非与<see cref="P:AntDesign.SelectBase`2.ValueOnClear" />一起使用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AutoClearSearchValue">
      <summary v="4LMxuO" i="0">
是否在选择项目时清除当前搜索。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AutoFocus">
      <summary v="14xblZ" i="0">
自动对焦。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
覆盖调整策略 (例如，当浏览器调整大小发生时)
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.CustomTagLabelToValue">
      <summary v="3EMaK3" i="0">
将自定义标记 (字符串) 转换为TItemValue类型。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.DefaultValues">
      <summary v="2J5DPu" i="0">
当Mode = multiple | 标签时使用-在初始化期间以及在表单中按下重置按钮时使用这些值。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Disabled">
      <summary v="2bl4pp" i="0">
选择组件是否已禁用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.DropdownRender">
      <summary v="4Zzqb3" i="0">
自定义下拉内容。上下文是原始内容。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.EnableSearch">
      <summary v="2naqqM" i="0">
指示搜索功能是否处于活动状态。模式标记始终为true。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.HasValue">
      <summary v="4VVb1k" i="0">
确定SelectOptions是否具有任何选定项
</summary>
      <returns v="2R5twB" i="0">如果SelectOptions具有任何选定项，则为true，否则为false</returns>
    </member>
    <member name="P:AntDesign.SelectBase`2.HideSelected">
      <summary v="4AwoTD" i="0">
在选定项目时隐藏选定项目。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.IsSearchEnabled">
      <summary v="2ABzzv" i="0">
返回用户是否可以输入模式来搜索匹配项
</summary>
      <returns v="3ORAAp" i="0">如果已启用搜索，则为true</returns>
    </member>
    <member name="P:AntDesign.SelectBase`2.ItemLabel">
      <summary v="4Yg7SF" i="0">
指定选项对象中的label属性。如果使用此属性，则不应使用 <see cref="P:AntDesign.SelectBase`2.LabelName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ItemValue">
      <summary v="1CAphC" i="0">
指定选项对象中的value属性。如果使用此属性，则不应使用 <see cref="P:AntDesign.SelectBase`2.ValueName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelInValue">
      <summary v="1U3ymK" i="0">
是否在value中嵌入label，将value的格式从TItemValue转换为string (JSON)
例如 {"value": TItemValue，"label": "Label value"}
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelName">
      <summary v="3AwSrr" i="0">
要用于标签的属性的名称。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelTemplate">
      <summary v="hwEOh" i="0">
用于自定义标签样式。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LastValueBeforeReset">
      <summary v="44YdO2" i="0">
当在SelectOptionItems中找不到新设置的值时，将其重置为
默认值。此属性保留重置前的值。可能需要
(例如，当同时设置新值时
由于添加了新的SelectOption，但设置了组件中的值
在创建新的SelectOptionItem之前)。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Loading">
      <summary v="3cOuxj" i="0">
显示加载指示器。你必须自己写加载逻辑。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagCount">
      <summary v="3GSRJr" i="0">
要显示的最大标记数。响应将牺牲渲染性能。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagPlaceholder">
      <summary v="3mQAeT" i="0">
用于隐藏标记的占位符。如果与ResponsiveTag.Responsive一起使用，请实现您自己的处理逻辑。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagTextLength">
      <summary v="3C8N89" i="0">
标签的长度 (字符数)。
仅适用于Mode = "multiple" 或Mode = "tags"
</summary>
      <value>
            The maximum length of the tag text.
            </value>
    </member>
    <member name="P:AntDesign.SelectBase`2.Mode">
      <summary v="3S2B5T" i="0">
设置选择模式-默认 | 多个 | 标签
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnClearSelected">
      <summary v="14UtFb" i="0">
当用户清除选择时调用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnFocus">
      <summary v="1ERQAl" i="0">
焦点时调用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnMouseEnter">
      <summary v="46zJaG" i="0">
当鼠标进入时调用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnMouseLeave">
      <summary v="ninB2" i="0">
当鼠标离开时调用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnSelectedItemChanged">
      <summary v="2ittuq" i="0">
当选定项更改时调用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnSelectedItemsChanged">
      <summary v="g9Onl" i="0">
当选定项更改时调用。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Open">
      <summary v="2tPov4" i="0">
控制下拉菜单的打开状态。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OpenChanged">
      <summary v="2sxC6Q" i="0">
打开状态更改时调用的回调函数。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Placeholder">
      <summary v="4QgNG1" i="0">
选择的占位符。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.PopupContainerSelector">
      <summary v="2FFcRl" i="0">
使用此来修复覆盖问题，例如 # arec
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.PrefixIcon">
      <summary v="YZqdW" i="0">
自定义前缀图标。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SearchDebounceMilliseconds">
      <summary v="2lpe12" i="0">
延迟搜索输入事件的处理，直到用户停止
键入预定的时间。默认为250毫秒。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SelectOptions">
      <summary v="2msqsT" i="0">
用于手动渲染选择选项。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ShowSearchIcon">
      <summary v="1mzP4W" i="0">
是否在单一模式下显示搜索输入。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortByGroup">
      <summary v="35WDeN" i="0">
要用作组指示符的属性的名称。
如果设置了该值，则会按组显示条目。
使用其他SortByGroup和SortByLabel。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortByLabel">
      <summary v="2TkxTE" i="0">
按标签值对项目进行排序。无 | 升序 | 降序
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortedSelectOptionItems">
      <summary v="2ME8BB" i="0">
SelectOptionItems的排序列表
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SuffixIcon">
      <summary v="20vubH" i="0">
自定义后缀图标。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueChanged">
      <summary v="1koZkv" i="0">
用于双向绑定。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueName">
      <summary v="1eRofc" i="0">
要用于值的属性的名称。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueOnClear">
      <summary v="3t8E6Y" i="0">
当按下清除按钮时，值将设置为
无论在ValueOnClear中设置了什么
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Values">
      <summary v="38zUL6" i="0">
获取或设置选定的值。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValuesChanged">
      <summary v="1koZkv" i="0">
用于双向绑定。
</summary>
    </member>
    <member name="P:AntDesign.Selection.CellRender">
      <summary v="35Fgqe" i="0">
自定义单元格的内容。
</summary>
    </member>
    <member name="P:AntDesign.Selection.CheckStrictly">
      <summary v="2Lj7pU" i="0">
精确检查表行; 父行和子行不关联
</summary>
    </member>
    <member name="P:AntDesign.Selection.Disabled">
      <summary v="1aaMLr" i="0">
是否禁用选择列。
</summary>
    </member>
    <member name="P:AntDesign.Selection.Key">
      <summary v="ieiZV" i="0">
现在没用了。
</summary>
    </member>
    <member name="P:AntDesign.Selection.Type">
      <summary v="3aIS36" i="0">
选择列、复选框或单选的类型。
</summary>
      <default value="checkbox" />
    </member>
    <member name="P:AntDesign.SelectOption`2.Disabled">
      <summary v="zh3il" i="0">
禁用此选项
仅当直接创建SelectOption时才应使用参数。
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Label">
      <summary v="44K7nB" i="0">
选择此选项后选择的标签
仅当直接创建SelectOption时才应使用参数。
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Value">
      <summary v="2QHMVs" i="0">
选择此选项后的Select值
仅当直接创建SelectOption时才应使用参数。
</summary>
    </member>
    <member name="P:AntDesign.Sider.Breakpoint">
      <summary v="l5AYt" i="0">
sider将在默认情况下崩溃的断点
</summary>
    </member>
    <member name="P:AntDesign.Sider.ChildContent">
      <summary v="2OsGMG" i="0">
sider的内容
</summary>
    </member>
    <member name="P:AntDesign.Sider.Collapsed">
      <summary v="1PDgJx" i="0">
如果sider是否崩溃
</summary>
    </member>
    <member name="P:AntDesign.Sider.CollapsedChanged">
      <summary v="18vYU0" i="0">
当sider从打开更改为折叠时执行回调，无论是什么原因导致的
</summary>
    </member>
    <member name="P:AntDesign.Sider.CollapsedWidth">
      <summary v="8jub4" i="0">
折叠时sider的宽度，以像素为单位
</summary>
      <default value="80" />
    </member>
    <member name="P:AntDesign.Sider.Collapsible">
      <summary v="1GG81C" i="0">
sider是否可折叠
</summary>
    </member>
    <member name="P:AntDesign.Sider.DefaultCollapsed">
      <summary v="ypMIg" i="0">
设置初始状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Sider.NoTrigger">
      <summary v="1YVJA1" i="0">
手动删除折叠/展开的UI触发器
</summary>
    </member>
    <member name="P:AntDesign.Sider.OnBreakpoint">
      <summary v="1Qt3os" i="0">
当窗口大小更改断点时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Sider.OnCollapse">
      <summary v="18vYU0" i="0">
当sider从打开更改为折叠时执行回调，无论是什么原因导致的
</summary>
    </member>
    <member name="P:AntDesign.Sider.Theme">
      <summary v="2DyVtS" i="0">
颜色主题
</summary>
      <default value="SiderTheme.Dark" />
    </member>
    <member name="P:AntDesign.Sider.Trigger">
      <summary v="3Sa2ea" i="0">
折叠/展开UI元素以允许手动更改。
</summary>
    </member>
    <member name="P:AntDesign.Sider.Width">
      <summary v="3PhOPs" i="0">
扩展时sider的宽度，以像素为单位
</summary>
      <default value="200" />
    </member>
    <member name="P:AntDesign.Skeleton.Active">
      <summary v="4Qco43" i="0">
是否显示活动动画
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Avatar">
      <summary v="3bIvfu" i="0">
在占位符中显示头像
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.AvatarShape">
      <summary v="3djQs" i="0">
头像形状
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.AvatarSize">
      <summary v="2D3uY4" i="0">
头像大小
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.ChildContent">
      <summary v="1QbVs4" i="0">
骨架不活动时显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Loading">
      <summary v="2LkvDh" i="0">
当为true时显示骨架
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Paragraph">
      <summary v="V2eU0" i="0">
显示段落骨架
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.ParagraphRows">
      <summary v="chHri" i="0">
段落骨架的行数
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.ParagraphWidth">
      <summary v="2Xyziw" i="0">
段落骨架的宽度
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Title">
      <summary v="2IHjue" i="0">
显示标题占位符
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.TitleWidth">
      <summary v="IsND5" i="0">
标题占位符的宽度
</summary>
    </member>
    <member name="P:AntDesign.SkeletonElement.Active">
      <summary v="WC1lx" i="0">
如果骨架处于活动状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SkeletonElement.Shape">
      <summary v="17Pcfb" i="0">
头像的形状。不用于输入类型。
</summary>
      <default value="SkeletonButtonShape.Default" />
    </member>
    <member name="P:AntDesign.SkeletonElement.Size">
      <summary v="2iO6kz" i="0">
元素的大小。可能的值: 大、小、默认值。如果type是avatar，则也可以提供整数。
</summary>
    </member>
    <member name="P:AntDesign.SkeletonElement.Type">
      <summary v="34WUAl" i="0">
元素的类型。可能的值: 输入，头像，按钮
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.DefaultValue">
      <summary v="3Dmrok" i="0">
slider的默认值。当<see cref="P:AntDesign.Slider`1.Range" />为false时，使用number，否则，使用 [number，number]
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Disabled">
      <summary v="vRGcV" i="0">
如果为true，则滑块将不可交互
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Dots">
      <summary v="11Mxqn" i="0">
目前尚未实施。
拇指是否只能拖动刻度
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.GetTooltipPopupContainer">
      <summary v="4GI0Ek" i="0">
目前尚未实施。工具提示的DOM容器
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.HasTooltip">
      <summary v="2B6XSU" i="0">
标记是否应该有工具提示
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Slider`1.Included">
      <summary v="2gasHt" i="0">
不为null时<see cref="P:AntDesign.Slider`1.Marks" />生效，true表示包含，false表示协调
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Slider`1.Marks">
      <summary v="OkQCc" i="0">
滑块的刻度标记
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Max">
      <summary v="4PpL6k" i="0">
滑块可以滑动到的最大值
</summary>
      <default value="100" />
    </member>
    <member name="P:AntDesign.Slider`1.Min">
      <summary v="4F0VRd" i="0">
滑块可以滑动到的最小值
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Slider`1.OnAfterChange">
      <summary v="1XSLST" i="0">
触发onmouseup时执行的回调。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.OnChange">
      <summary v="3UblL7" i="0">
当用户更改滑块的值时执行回调。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Range">
      <summary v="3geVKs" i="0">
滑块是否为范围滑块。由<c>TValue</c>的类型确定</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Reverse">
      <summary v="40HW7G" i="0">
数字和最小/最大的顺序和方向。
<para>当为true时，Max在左侧，Min在右侧</para>，<para>当为false时，Min在左侧，Max在右侧</para></summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Slider`1.Step">
      <summary v="16PNUi" i="0">
滑块可以逐步通过值的粒度。必须大于0，并除以 (<see cref="P:AntDesign.Slider`1.Max" />-<see cref="P:AntDesign.Slider`1.Min" />)。当<see cref="P:AntDesign.Slider`1.Marks" />不为null时， <see cref="P:AntDesign.Slider`1.Step" />可以为null。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.TipFormatter">
      <summary v="4XcMJw" i="0">
方法获取工具提示的显示值。将传递滑块值并获取字符串以显示回来
</summary>
      <default value="(value) =&gt; value.ToString()" />
    </member>
    <member name="P:AntDesign.Slider`1.TooltipPlacement">
      <summary v="2MwlsN" i="0">
设置工具提示显示位置。有关详细信息，请参见 <see cref="T:AntDesign.Tooltip" />
</summary>
      <default value="Right for vertical. Top for horizontal" />
    </member>
    <member name="P:AntDesign.Slider`1.TooltipVisible">
      <summary v="23vRSE" i="0">
如果为true，则工具提示将始终显示
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Value">
      <summary v="yoUC3" i="0">
获取或设置输入的值。这应该与双向绑定一起使用。
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.Slider`1.Vertical">
      <summary v="4UJ2xl" i="0">
如果为true，滑块将是垂直的。如果为false，它将是水平的。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SliderMark.Key">
      <summary v="3BuUXn" i="0">
标记的编号。必须在包含滑块的最小值和最大值的范围内
</summary>
    </member>
    <member name="P:AntDesign.SliderMark.Style">
      <summary v="48xki2" i="0">
标记的样式
</summary>
    </member>
    <member name="P:AntDesign.SliderMark.Value">
      <summary v="1xfGgl" i="0">
显示标记的内容
</summary>
    </member>
    <member name="P:AntDesign.Space.Align">
      <summary v="kdFSL" i="0">
项目的对齐方式-开始 | 结束 | 中心 | 基线
</summary>
    </member>
    <member name="P:AntDesign.Space.ChildContent">
      <summary v="49aglq" i="0">
space的内容-应包含SpaceItem元素
</summary>
    </member>
    <member name="P:AntDesign.Space.Direction">
      <summary v="4FrPH4" i="0">
项目流向
</summary>
      <default value="DirectionVHType.Horizontal" />
    </member>
    <member name="P:AntDesign.Space.Size">
      <summary v="2cU1F5" i="0">
项目之间的空间大小
</summary>
      <default value="small" />
    </member>
    <member name="P:AntDesign.Space.Split">
      <summary v="aPaqQ" i="0">
在项目之间的空间中显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Space.Wrap">
      <summary v="312RhJ" i="0">
将项目包装到多行或不包装。方向为垂直时忽略。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Spin.ChildContent">
      <summary v="1ejn5W" i="0">
内容旋转将指示加载
</summary>
    </member>
    <member name="P:AntDesign.Spin.Delay">
      <summary v="3a3R5q" i="0">
指定加载状态的延迟 (毫秒) (防止刷新)
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Spin.Indicator">
      <summary v="48dpH6" i="0">
旋转指示器的自定义显示
</summary>
    </member>
    <member name="P:AntDesign.Spin.Size">
      <summary v="A9GA8" i="0">
微调器的大小。可能的值: small、default、大
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Spin.Spinning">
      <summary v="1LhzXV" i="0">
spin是否激活
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Spin.Tip">
      <summary v="4COwEx" i="0">
自旋有子时自定义描述内容
</summary>
    </member>
    <member name="P:AntDesign.Spin.WrapperClassName">
      <summary v="nhVgE" i="0">
包装器的类名
</summary>
    </member>
    <member name="P:AntDesign.Statistic`1.CultureInfo">
      <summary v="FOm7E" i="0">
指定用于设置数字格式的区域性。
</summary>
    </member>
    <member name="P:AntDesign.Statistic`1.DecimalSeparator">
      <summary v="100raw" i="0">
用于数字格式的小数分隔符
</summary>
      <default value="." />
    </member>
    <member name="P:AntDesign.Statistic`1.GroupSeparator">
      <summary v="3mGnx4" i="0">
用于数字格式设置的组分隔符
</summary>
      <default value="," />
    </member>
    <member name="P:AntDesign.Statistic`1.Precision">
      <summary v="1ToWcK" i="0">
四舍五入的小数位数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Prefix">
      <summary v="QddMl" i="0">
显示值之前的前缀文本
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.PrefixTemplate">
      <summary v="3BYIbr" i="0">
显示值之前的前缀内容
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Suffix">
      <summary v="UEDaQ" i="0">
显示值后的后缀字符串
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.SuffixTemplate">
      <summary v="47WnBH" i="0">
显示值后的后缀内容
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Title">
      <summary v="hnB1O" i="0">
值的标题字符串
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.TitleTemplate">
      <summary v="2QutkU" i="0">
值的标题内容
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Value">
      <summary v="4Wq3k5" i="0">
显示值
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.ValueStyle">
      <summary v="1w1aS8" i="0">
值显示的样式
</summary>
    </member>
    <member name="P:AntDesign.Step.Description">
      <summary v="1Rr90P" i="0">
步骤的说明
</summary>
      <default value="string.Empty" />
    </member>
    <member name="P:AntDesign.Step.DescriptionTemplate">
      <summary v="1Rr90P" i="0">
步骤的说明
</summary>
    </member>
    <member name="P:AntDesign.Step.Disabled">
      <summary v="6oEBN" i="0">
禁用单击
</summary>
    </member>
    <member name="P:AntDesign.Step.Icon">
      <summary v="1zzOMG" i="0">
步骤的图标
</summary>
    </member>
    <member name="P:AntDesign.Step.OnClick">
      <summary v="2T5djG" i="0">
单击步骤时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Step.Status">
      <summary v="3LMXV0" i="0">
指定状态。如果未配置，它将由当前步骤自动设置。可能的值: wait、process、finish、error
</summary>
    </member>
    <member name="P:AntDesign.Step.Subtitle">
      <summary v="4gJp2b" i="0">
步骤的字幕
</summary>
    </member>
    <member name="P:AntDesign.Step.SubtitleTemplate">
      <summary v="4gJp2b" i="0">
步骤的字幕
</summary>
    </member>
    <member name="P:AntDesign.Step.Title">
      <summary v="2h3qN9" i="0">
步骤的标题
</summary>
    </member>
    <member name="P:AntDesign.Step.TitleTemplate">
      <summary v="2h3qN9" i="0">
步骤的标题
</summary>
    </member>
    <member name="P:AntDesign.Steps.ChildContent">
      <summary v="4NRpsh" i="0">
子内容应包含Step元素
</summary>
    </member>
    <member name="P:AntDesign.Steps.Current">
      <summary v="3VXwMa" i="0">
当前步长索引，从零开始
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Steps.Direction">
      <summary v="Uid6p" i="0">
台阶栏的方向
</summary>
      <default value="horizontal" />
    </member>
    <member name="P:AntDesign.Steps.LabelPlacement">
      <summary v="2J8HO0" i="0">
水平或垂直放置标题和描述
</summary>
      <default value="horizontal" />
    </member>
    <member name="P:AntDesign.Steps.OnChange">
      <summary v="91zLV" i="0">
步骤更改时执行的回调。已收到更改为的步骤的索引
</summary>
    </member>
    <member name="P:AntDesign.Steps.Percent">
      <summary v="6qEoh" i="0">
当前步骤的百分比显示
</summary>
    </member>
    <member name="P:AntDesign.Steps.ProgressDot">
      <summary v="VTRIa" i="0">
进度圆点的自定义渲染。如果设置，还将ShowProgressDot设置为true。
</summary>
    </member>
    <member name="P:AntDesign.Steps.ShowProgressDot">
      <summary v="2sd3f5" i="0">
显示进度点，而不是标题、描述、图标等
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Steps.Size">
      <summary v="2F0Jjf" i="0">
步骤的大小。可能的值: default、small
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Steps.StartIndex">
      <summary v="SyTzo" i="0">
起始步数索引
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Steps.Status">
      <summary v="4Oerp9" i="0">
当前步骤的状态。可能的值: wait、process、finish、error
</summary>
      <default value="process" />
    </member>
    <member name="P:AntDesign.Steps.Type">
      <summary v="4Rw5SS" i="0">
步骤的类型。可能的值: 默认值、导航
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.SubMenu.ChildContent">
      <summary v="3nyrbf" i="0">
子菜单或子菜单项
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.Disabled">
      <summary v="t289t" i="0">
是否禁用子菜单
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SubMenu.IsOpen">
      <summary v="fF7BB" i="0">
子菜单的打开状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SubMenu.Key">
      <summary v="3gCZC4" i="0">
子菜单的唯一ID
</summary>
      <default value="Uniquely Generated ID" />
    </member>
    <member name="P:AntDesign.SubMenu.OnTitleClick">
      <summary v="31eptA" i="0">
单击子菜单标题时执行回调
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.Placement">
      <summary v="4XFNwR" i="0">
菜单位置
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.PopupClassName">
      <summary v="40rw5P" i="0">
弹出窗口的类名
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.Title">
      <summary v="22Q5W6" i="0">
标题
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.TitleTemplate">
      <summary v="4fNdtM" i="0">
标题模板
</summary>
    </member>
    <member name="P:AntDesign.SummaryCell.CellRender">
      <summary v="ekqlz" i="0">
设置单元格的内容。
</summary>
    </member>
    <member name="P:AntDesign.SummaryRow.ChildContent">
      <summary v="5blj7" i="0">
摘要行内容。
</summary>
    </member>
    <member name="P:AntDesign.Switch.CheckedChildren">
      <summary v="1pNxlQ" i="0">
当checked为true时，开关内显示的字符串
</summary>
    </member>
    <member name="P:AntDesign.Switch.CheckedChildrenTemplate">
      <summary v="1vABV5" i="0">
当checked为true时，开关内部显示的内容。优先于 <see cref="P:AntDesign.Switch.CheckedChildren" />
</summary>
    </member>
    <member name="P:AntDesign.Switch.Control">
      <summary v="zkBSn" i="0">
如果为true，则开关的状态不再根据click事件自动更改数据。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Switch.Loading">
      <summary v="3n4ne7" i="0">
开关是否正在加载。当为true时，将在句柄上显示微调器。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Switch.OnClick">
      <summary v="3Ze3uW" i="0">
单击开关时执行的回调。当与<see cref="P:AntDesign.Switch.Control" />结合使用时，它允许手动控制开关。
</summary>
    </member>
    <member name="P:AntDesign.Switch.UnCheckedChildren">
      <summary v="4MeTYV" i="0">
当checked为false时，开关内显示的字符串。
</summary>
    </member>
    <member name="P:AntDesign.Switch.UnCheckedChildrenTemplate">
      <summary v="1SY6ug" i="0">
当checked为false时，开关内部显示的内容。优先于 <see cref="P:AntDesign.Switch.UnCheckedChildren" />
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Bordered">
      <summary v="1LMUif" i="0">
是否有边框表
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.ChildContent">
      <summary v="3IVwhS" i="0">
表的内容。通常将包含<see cref="T:AntDesign.PropertyColumn`2" />和<see cref="T:AntDesign.ActionColumn" />元素。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ColumnDefinitions">
      <summary v="3Pyc6Q" i="0">
列定义的模板
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DataSource">
      <summary v="CBosf" i="0">
要在表格中显示的数据
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DefaultExpandAllRows">
      <summary v="1loluX" i="0">
最初，是否展开所有行
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DefaultExpandMaxLevel">
      <summary v="1EN01t" i="0">
使用DefaultExpandAllRows时的最大展开级别。
当树记录具有循环引用时，此属性用于避免无限循环。
默认值为4。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.EmptyTemplate">
      <summary v="o07VQ" i="0">
表为空时自定义空模板
</summary>
    </member>
    <member name="P:AntDesign.Table`1.EnableVirtualization">
      <summary v="39WGkE" i="0">
无论是否启用虚拟化功能，仅适用于。NET 5及以上
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ExpandedRowClassName">
      <summary v="27l4ze" i="0">
函数来确定特定行在展开时的类名
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ExpandIconColumnIndex">
      <summary v="UFUZq" i="0">
自定义展开图标所在列的索引
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Table`1.ExpandTemplate">
      <summary v="3Vh1v8" i="0">
模板用于展开行时要显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Table`1.FieldFilterTypeResolver">
      <summary v="1AcXEL" i="0">
设置字段筛选器类型resolver
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Footer">
      <summary v="4UgrBC" i="0">
页脚文本
</summary>
    </member>
    <member name="P:AntDesign.Table`1.FooterTemplate">
      <summary v="6Si86" i="0">
页脚内容
</summary>
    </member>
    <member name="P:AntDesign.Table`1.GroupFooterTemplate">
      <summary v="25UYhp" i="0">
分组块的页脚模板
</summary>
    </member>
    <member name="P:AntDesign.Table`1.GroupTitleTemplate">
      <summary v="3nZ4NJ" i="0">
分组块标题的模板
</summary>
    </member>
    <member name="P:AntDesign.Table`1.HeaderTemplate">
      <summary v="1ER2BD" i="0">
标题的模板
</summary>
    </member>
    <member name="P:AntDesign.Table`1.HidePagination">
      <summary v="G9Z3B" i="0">
是否隐藏分页
</summary>
    </member>
    <member name="P:AntDesign.Table`1.IndentSize">
      <summary v="0TUTH" i="0">
显示树数据时，每一级缩进的宽度，以px为
</summary>
      <default value="15" />
    </member>
    <member name="P:AntDesign.Table`1.Loading">
      <summary v="1lDJa" i="0">
是正在加载的表
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.Locale">
      <summary v="3hZfyT" i="0">
默认文案设置，目前包含排序、筛选、空数据文案
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnChange">
      <summary v="1vFewv" i="0">
分页、排序和过滤更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnExpand">
      <summary v="1wBZhl" i="0">
行展开时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnHeaderRow">
      <summary v="1uX0dO" i="0">
设置标题行属性
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnPageIndexChange">
      <inheritdoc cref="P:AntDesign.Table`1.PageIndexChanged" />
    </member>
    <member name="P:AntDesign.Table`1.OnPageSizeChange">
      <inheritdoc cref="P:AntDesign.Table`1.PageSizeChanged" />
    </member>
    <member name="P:AntDesign.Table`1.OnRow">
      <summary v="4cKEW3" i="0">
设置行属性
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnRowClick">
      <summary v="3Eo0u2" i="0">
单击行时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnSelectAll">
      <summary v="1RBgQO" i="0">
单击SelectAll按钮时执行的回调。
当表被虚拟化或不仅显示在当前页面上时，这对于选择所有行很有用。

该参数在选择所有行时为true，在取消选择所有行时为false。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.PageIndex">
      <summary v="4ZJTqU" i="0">
当前可见页面
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Table`1.PageIndexChanged">
      <summary v="9ZKHV" i="0">
当前可见页面更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.PageSize">
      <summary v="34nae" i="0">
每页的记录数
</summary>
      <default value="10" />
    </member>
    <member name="P:AntDesign.Table`1.PageSizeChanged">
      <summary v="19QPKZ" i="0">
页面大小更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.PaginationPosition">
      <summary v="7icTY" i="0">
分页的位置。有效值: topLeft、topCenter、topRight、bottomLeft、bottomCenter、bottomRight
</summary>
      <default value="bottomRight" />
    </member>
    <member name="P:AntDesign.Table`1.PaginationTemplate">
      <summary v="23S5vB" i="0">
分页的自定义渲染
</summary>
    </member>
    <member name="P:AntDesign.Table`1.RemoteDataSource">
      <summary v="2wTRYK" i="0">
如果数据源是远程的或不是更复杂的用例
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.RerenderStrategy">
      <summary v="ye1Q5" i="0">
表的渲染模式。有关详细信息，请参见<see cref="!:AntDesign.RenderMode" />文档。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Resizable">
      <summary v="3IDB7H" i="0">
启用可调整大小的列
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Responsive">
      <summary v="2hAkU4" i="0">
当设置为true且屏幕宽度小于960px时，表将切换到小屏幕模式。
在小屏幕模式下，当前仅支持某些功能，并且在具有某些功能 (例如组，扩展列，树数据，摘要单元格等) 的表中会出现错误样式。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.RowClassName">
      <summary v="3pOLIx" i="0">
确定特定行的类名的函数
</summary>
    </member>
    <member name="P:AntDesign.Table`1.RowExpandable">
      <summary v="37RV6v" i="0">
确定特定行是否可扩展的函数
</summary>
      <default value="true for any rows" />
    </member>
    <member name="P:AntDesign.Table`1.RowKey">
      <summary v="2m2gKF" i="0">
指定每行的标识符
</summary>
    </member>
    <member name="P:AntDesign.Table`1.RowTemplate">
      <summary v="2o12Me" i="0">
行的模板
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ScrollBarWidth">
      <summary v="2IBGt2" i="0">
滚动条宽度
</summary>
      <default value="17px" />
    </member>
    <member name="P:AntDesign.Table`1.ScrollX">
      <summary v="bAfF5" i="0">
设置水平滚动，也可以用于指定滚动区域的宽度，可以设置为像素值，百分比
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ScrollY">
      <summary v="uxdHk" i="0">
设置垂直滚动，也可以用于指定滚动区域的高度，可以设置为像素值
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SelectedRows">
      <summary v="LSD8Z" i="0">
跨页选择的行
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SelectedRowsChanged">
      <summary v="4UwGA4" i="0">
当选定的行更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Size">
      <summary v="226VxJ" i="0">
表大小
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SortDirections">
      <summary v="3x2HG" i="0">
支持的排序方法，覆盖表中的排序方向
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TableLayout">
      <summary v="2shcM1" i="0">
table元素的table-layout属性，设置为fixed表示内容不会影响列的布局
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Title">
      <summary v="2PNMY0" i="0">
表标题文本
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TitleTemplate">
      <summary v="1IJDZG" i="0">
表标题内容
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Total">
      <summary v="4dTgb8" i="0">
记录总数
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TotalChanged">
      <summary v="1G9Vkx" i="0">
总记录更改时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TreeChildren">
      <summary v="2Lkbct" i="0">
子树项
</summary>
      <default value="Enumerable.Empty&lt;TItem&gt;()" />
    </member>
    <member name="P:AntDesign.TableFilter.FilterCompareOperator">
      <summary v="1pVhjI" i="0">
筛选器项支持的比较运算符
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.FilterCondition">
      <summary v="3c9EWO" i="0">
筛选器项的条件
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.Selected">
      <summary v="f3fJh" i="0">
是否选中筛选项
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.Text">
      <summary v="1bRTmA" i="0">
筛选器项的显示文本
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.Value">
      <summary v="2vfYmC" i="0">
筛选项的值
</summary>
    </member>
    <member name="P:AntDesign.TableModels.RowData`1.Children">
      <summary v="3jUogV" i="0">
保存子行的状态
</summary>
    </member>
    <member name="P:AntDesign.TabPane.Closable">
      <summary v="2MWupg" i="0">
如果选项卡是可关闭的
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.TabPane.Disabled">
      <summary v="6z6hI" i="0">
如果选项卡被禁用
</summary>
    </member>
    <member name="P:AntDesign.TabPane.ForceRender">
      <summary v="2Cvjf8" i="0">
强制呈现选项卡中的内容，而不是在单击选项卡后延迟呈现
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TabPane.Key">
      <summary v="2YYIS2" i="0">
TabPane的密钥
</summary>
    </member>
    <member name="P:AntDesign.TabPane.Tab">
      <summary v="8N7Wf" i="0">
在<see cref="T:AntDesign.TabPane" />的头部显示文本
</summary>
    </member>
    <member name="P:AntDesign.TabPane.TabContextMenu">
      <summary v="3rGTKq" i="0">
客户上下文菜单模板
</summary>
    </member>
    <member name="P:AntDesign.TabPane.TabTemplate">
      <summary v="2CqtJc" i="0">
TabPane的头部模板
</summary>
    </member>
    <member name="P:AntDesign.Tabs.ActiveKey">
      <summary v="2FY5Zq" i="0">
当前<see cref="T:AntDesign.TabPane" />的 <see cref="P:AntDesign.TabPane.Key" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.ActiveKeyChanged">
      <summary v="25YUE4" i="0">
活动选项卡更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Tabs.AfterTabCreated">
      <summary v="1PczkQ" i="0">
创建选项卡后执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Animated">
      <summary v="2fNQfe" i="0">
是否使用动画更改选项卡。仅在 <see cref="P:AntDesign.Tabs.TabPosition" />= <see cref="F:AntDesign.TabPosition.Top" />或<see cref="F:AntDesign.TabPosition.Bottom" />时有效</summary>
    </member>
    <member name="P:AntDesign.Tabs.Centered">
      <summary v="2fDlGu" i="0">
如果制表符居中或不居中
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tabs.ChildContent">
      <summary v="3OcQpY" i="0">
选项卡的内容。应包括<c>TabPane</c>元素
</summary>
    </member>
    <member name="P:AntDesign.Tabs.DefaultActiveKey">
      <summary v="CcZho" i="0">
初始活动<see cref="T:AntDesign.TabPane" />的 <see cref="P:AntDesign.TabPane.Key" />(如果未设置<see cref="P:AntDesign.Tabs.ActiveKey" />)
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Draggable">
      <summary v="Xk18L" i="0">
使标签可拖动
</summary>
    </member>
    <member name="P:AntDesign.Tabs.HideAdd">
      <summary v="3x3txU" i="0">
隐藏加号图标或不。仅在 <see cref="P:AntDesign.Tabs.Type" />= <see cref="F:AntDesign.TabType.EditableCard" />时有效</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tabs.InkBarAnimated">
      <summary v="3Ld9Bx" i="0">
墨迹栏是否为动画
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Tabs.OnAddClick">
      <summary v="2TbA35" i="0">
单击 &ldquo;添加” 按钮时执行回调
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnChange">
      <summary v="ozKGD" i="0">
更改活动选项卡时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnClose">
      <summary v="24p9uY" i="0">
选项卡关闭时的回调
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnEdit">
      <summary v="2pplmx" i="0">
添加或删除选项卡时执行的回调。仅在 <see cref="P:AntDesign.Tabs.Type" />= <see cref="F:AntDesign.TabType.EditableCard" />时有效</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnTabClick">
      <summary v="nzs2r" i="0">
单击选项卡时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Tabs.RenderTabBar">
      <summary v="4bb92P" i="0">
替换TabBar
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Size">
      <summary v="2uRSg3" i="0">
预设标签栏大小
</summary>
      <default value="TabSize.Default" />
    </member>
    <member name="P:AntDesign.Tabs.TabBarClass">
      <summary v="3e35Zi" i="0">
标签栏css类
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContent">
      <summary v="3x7TO1" i="0">
标签栏中的额外内容
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContentLeft">
      <summary v="hMPJ4" i="0">
标签栏左侧的额外内容
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContentRight">
      <summary v="31ffT1" i="0">
标签栏右侧的额外内容
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarGutter">
      <summary v="2R1oV0" i="0">
制表符之间的间隙
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Tabs.TabBarStyle">
      <summary v="3aIVwY" i="0">
选项卡栏样式对象
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabPosition">
      <summary v="4ceKgX" i="0">
制表符的位置
</summary>
      <default value="TabPosition.Top" />
    </member>
    <member name="P:AntDesign.Tabs.Type">
      <summary v="sK3mA" i="0">
制表符的基本样式
</summary>
      <default value="TabType.Line" />
    </member>
    <member name="P:AntDesign.Tag.Checkable">
      <summary v="4SrypX" i="0">
是否可以检查标签
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tag.Checked">
      <summary v="420tmQ" i="0">
标记的检查状态
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tag.CheckedChanged">
      <summary v="1VfqF2" i="0">
选中/取消选中标签时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Tag.ChildContent">
      <summary v="4FUS9X" i="0">
标签内容
</summary>
    </member>
    <member name="P:AntDesign.Tag.Closable">
      <summary v="E9gms" i="0">
标签是否可以关闭
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tag.Color">
      <summary v="2JUVUq" i="0">
标签颜色。可以是预定义的颜色 (字符串)
或十六进制颜色。
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Tag.Icon">
      <summary v="21J6lk" i="0">
设置标记的图标
</summary>
    </member>
    <member name="P:AntDesign.Tag.IconTheme">
      <summary v="3RjsZn" i="0">
'fill' | 'outline' | 'twotone';
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClick">
      <summary v="3I8uAB" i="0">
单击标记时执行的回调 (不调用
单击关闭图标时)。
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClose">
      <summary v="2cb9Pq" i="0">
标签关闭时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClosing">
      <summary v="3vb75u" i="0">
在真正关闭之前触发，可以防止关闭
</summary>
    </member>
    <member name="P:AntDesign.Tag.PresetColor">
      <summary v="4NrD3Z" i="0">
标记PresetColor列表中的颜色
</summary>
    </member>
    <member name="P:AntDesign.Tag.Visible">
      <summary v="1Wdmg" i="0">
标签是否关闭
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.TemplateComponentBase`1.Options">
      <summary v="11Cl1m" i="0">
允许您从外部传入模板的选项
</summary>
    </member>
    <member name="P:AntDesign.Text.Keyboard">
      <summary v="1MGNYT" i="0">
键盘风格
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TextArea.AutoSize">
      <summary v="SoSx4" i="0">
将根据内容调整 (增大或缩小) <c>TextArea</c>。
可以与<see cref="P:AntDesign.TextArea.MaxRows" />和<see cref="P:AntDesign.TextArea.MinRows" />一起工作。
将textarea HTML元素的调整大小特性设置为: none。
</summary>
    </member>
    <member name="P:AntDesign.TextArea.DefaultToEmptyString">
      <summary v="41YTmi" i="0">
当为true时，value将设置为空字符串。
如果为false，则当内容为空或空白时，value将设置为<c>null</c>。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TextArea.MaxRows">
      <summary v="nIkK8" i="0">
允许增长，但当可见行 = MaxRows时停止 (不会进一步增长)。
</summary>
      <default value="uint.MaxValue" />
    </member>
    <member name="P:AntDesign.TextArea.MinRows">
      <summary v="46kMS2" i="0">
允许收缩，但当可见行 = MinRows时停止 (不会进一步收缩)。
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.TextArea.OnResize">
      <summary v="1hVama" i="0">
大小更改时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.TextArea.Rows">
      <summary v="2RTodR" i="0">
设置以行数表示的TextArea的高度。
</summary>
      <default value="3" />
    </member>
    <member name="P:AntDesign.TextArea.Value">
      <summary v="OQGwK" i="0">
获取或设置TextArea的值。
</summary>
    </member>
    <member name="P:AntDesign.Timeline.ChildContent">
      <summary v="2DJvVC" i="0">
时间线的内容。应包含<c>TimelineItem</c>元素
</summary>
    </member>
    <member name="P:AntDesign.Timeline.Mode">
      <summary v="1jQQCt" i="0">
其中行将与项目相关-左、右或备用
</summary>
      <default value="left" />
    </member>
    <member name="P:AntDesign.Timeline.Pending">
      <summary v="1QyZP8" i="0">
设置最后一个ghost节点的存在或其内容
</summary>
    </member>
    <member name="P:AntDesign.Timeline.PendingDot">
      <summary v="KQV85" i="0">
当pending为true时，设置最后一个ghost节点的点
</summary>
    </member>
    <member name="P:AntDesign.Timeline.Reverse">
      <summary v="2F3fW1" i="0">
是否反转节点
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TimelineItem.ChildContent">
      <summary v="Txx6j" i="0">
时间线项目的内容。
</summary>
    </member>
    <member name="P:AntDesign.TimelineItem.Color">
      <summary v="4M2ncs" i="0">
时间线项目的颜色。
</summary>
    </member>
    <member name="P:AntDesign.TimelineItem.Dot">
      <summary v="3oXArg" i="0">
timeline项的dot。
</summary>
    </member>
    <member name="P:AntDesign.TimelineItem.Label">
      <summary v="1gWNcK" i="0">
时间线项的标签。
</summary>
    </member>
    <member name="P:AntDesign.Title.Level">
      <summary v="4M61RR" i="0">
航向级别 (ex: h1为1)。必须介于1和4之间 (包括1和4)。如果超出该范围，它将默认返回到1。
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Tooltip.ArrowPointAtCenter">
      <summary v="7mOUS" i="0">
箭头是否指向目标的中心
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tooltip.MouseEnterDelay">
      <summary v="3jSDeO" i="0">
鼠标输入显示工具提示之前的延迟 (以秒为单位)
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Tooltip.MouseLeaveDelay">
      <summary v="2crCrt" i="0">
在鼠标离开时隐藏工具提示之前，以秒为单位的延迟
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Tooltip.TabIndex">
      <summary v="385qzI" i="0">
工具提示的Tab键索引
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Tooltip.Title">
      <summary v="2L6F1p" i="0">
工具提示中显示的文本
</summary>
    </member>
    <member name="P:AntDesign.Tooltip.TitleTemplate">
      <summary v="3k54tB" i="0">
工具提示中显示的内容
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ChildContent">
      <summary v="2GRB5G" i="0">
子内容
</summary>
    </member>
    <member name="P:AntDesign.Transfer.DataSource">
      <summary v="7aVbP" i="0">
用于设置源数据。
作为此数组一部分的元素将出现在左列中，但其键包含在<see cref="P:AntDesign.Transfer.TargetKeys" />中的元素除外。
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Disabled">
      <summary v="A8fMN" i="0">
是否禁用组件
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Transfer.Footer">
      <summary v="2iraGj" i="0">
每列的页脚中显示的页脚字符串
</summary>
    </member>
    <member name="P:AntDesign.Transfer.FooterTemplate">
      <summary v="mUMhG" i="0">
每列的页脚中显示的页脚内容
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ListStyle">
      <summary v="Hovrn" i="0">
用于呈现传输列的自定义CSS样式
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Locale">
      <summary v="267djz" i="0">
用于文本本地化的Locacle
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnChange">
      <summary v="3WP5Tt" i="0">
项目移动列时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnScroll">
      <summary v="2LBcow" i="0">
滚动列时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnSearch">
      <summary v="3gilvT" i="0">
搜索列时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnSelectChange">
      <summary v="2jujnr" i="0">
当任一列中的选定项更改时执行Callbac
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Operations">
      <summary v="3jNeD4" i="0">
要在操作图标旁边从上到下显示的标签。必须是具有2个元素的数组。
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Render">
      <summary v="3x7ERo" i="0">
列中项目的自定义渲染
</summary>
    </member>
    <member name="P:AntDesign.Transfer.SelectedKeys">
      <summary v="1HpVjB" i="0">
当前选定的项目
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ShowSearch">
      <summary v="2FWr8b" i="0">
是否在列中显示搜索栏
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Transfer.ShowSelectAll">
      <summary v="HvY1e" i="0">
是否在列中显示 &ldquo;全选” 按钮
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Transfer.TargetKeys">
      <summary v="696A3" i="0">
在右列中列出的元素的键
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Titles">
      <summary v="2Jma60" i="0">
从左到右的列标题。必须是具有2个元素的数组。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.BlockNode">
      <summary v="1C1tz" i="0">
treeNode是否填充剩余的水平空间
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Checkable">
      <summary v="2AZD7w" i="0">
在节点前添加复选框
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckableExpression">
      <summary v="rEuK6" i="0">
指定返回可检查节点的方法
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckedKeys">
      <summary v="2X1ZjM" i="0">
选中的键
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckedKeysChanged">
      <summary v="14s0ey" i="0">
@ bind-CheckedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckOnClickNode">
      <summary v="1ewR9Z" i="0">
如果可检查，请通过单击treenodebitle选中或取消选中节点
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckStrictly">
      <summary v="42UEkh" i="0">
精确检查treeNode; 父treeNode和子treeNode不关联
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildContent">
      <summary v="2jczzo" i="0">
树的节点。使用此、<see cref="P:AntDesign.Tree`1.DataSource" />或 <see cref="P:AntDesign.Tree`1.Nodes" /></summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildNodes">
      <summary v="1SoIAs" i="0">
树childnodes
初始化节点时添加值
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildrenExpression">
      <summary v="3TPg7j" i="0">
指定用于返回节点的子级的方法
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DataSource">
      <summary v="1OoQzZ" i="0">
树的数据源。可以是任何自定义对象类型的列表，通过提供表达式来获取孩子，叶子，标题等。使用此或 <see cref="P:AntDesign.Tree`1.ChildContent" />
使用此、<see cref="P:AntDesign.Tree`1.Nodes" />或 <see cref="P:AntDesign.Tree`1.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultCheckedKeys">
      <summary v="18LgiI" i="0">
指定默认选中的treenode的键
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandAll">
      <summary v="3JETK1" i="0">
是否默认为所有节点展开
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandedKeys">
      <summary v="2sJkXY" i="0">
默认展开指定的树节点
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandParent">
      <summary v="lOqhO" i="0">
默认情况下展开父节点
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DisableCheckKeys">
      <summary v="1cxA3L" i="0">
禁用节点复选框
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Disabled">
      <summary v="1QaL60" i="0">
树已禁用
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DisabledExpression">
      <summary v="4QpUNh" i="0">
指定返回禁用节点的方法
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Draggable">
      <summary v="1IFV7v" i="0">
节点是否允许拖放
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DragItem">
      <summary v="2APWtc" i="0">
当前拖拽项
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ExpandedKeys">
      <summary v="4d5ThB" i="0">
(受控) 展开指定的树节点
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ExpandOnClickNode">
      <summary v="1DJafz" i="0">
通过单击treenodeditle展开或折叠节点
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IconExpression">
      <summary v="37B3eq" i="0">
指定用于返回节点图标的方法。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IndentTemplate">
      <summary v="3FAxcU" i="0">
缩进模板
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IsLeafExpression">
      <summary v="3OYLNx" i="0">
指定一个方法，该方法返回表达式是否为叶节点。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.KeyExpression">
      <summary v="3F1pUh" i="0">
指定返回节点的键的方法。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.MatchedClass">
      <summary v="1w8FmP" i="0">
与搜索匹配的节点片段的类名
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.MatchedStyle">
      <summary v="1fhXCx" i="0">
与搜索匹配的节点片段的样式
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Multiple">
      <summary v="2dQlNQ" i="0">
允许选择多个treenode
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Nodes">
      <summary v="3dAAVf" i="0">
树的节点。使用此、<see cref="P:AntDesign.Tree`1.DataSource" />或 <see cref="P:AntDesign.Tree`1.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnCheck">
      <summary v="8TDXd" i="0">
已检查树节点回调
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnClick">
      <summary v="3qs9fw" i="0">
单击树节点回调
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnContextMenu">
      <summary v="27GI7h" i="0">
右键单击树节点回调
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDblClick">
      <summary v="uIvkf" i="0">
双击节点回调
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragEnd">
      <summary v="1L8CiD" i="0">
拖放结束回调
</summary>
      <remarks>this callback method must be set</remarks>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragEnter">
      <summary v="2O4Pxh" i="0">
当拖放到可释放目标时调用
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragLeave">
      <summary v="1dobxG" i="0">
从可释放目标拖放时调用
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragStart">
      <summary v="31ndc9" i="0">
当拖放开始时调用
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDrop">
      <summary v="1yoUYO" i="0">
拖放成功时触发
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnExpandChanged">
      <summary v="2pqvwr" i="0">
单击展开树节点图标以回叫
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnNodeLoadDelayAsync">
      <summary v="3A2c9f" i="0">
延迟加载回调
</summary>
      <remarks>You must use async and the return type is Task, otherwise you may experience load lag and display problems</remarks>
    </member>
    <member name="P:AntDesign.Tree`1.SearchExpression">
      <summary v="2HkAJ4" i="0">
用于指示节点是否与搜索匹配的函数
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SearchValue">
      <summary v="3gNRzP" i="0">
搜索值
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Selectable">
      <summary v="1x7lyW" i="0">
是否可以选择
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedData">
      <summary v="2vGOEn" i="0">
@ bing-SelectedData
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDataChanged">
      <summary v="1Fm7kf" i="0">
@ bind-SelectedData
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDatas">
      <summary v="M11OA" i="0">
选定的数据集
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDatasChanged">
      <summary v="2eAck" i="0">
@ bind-SelectedDatas
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKey">
      <summary v="3KNPSJ" i="0">
@ bind-SelectedKey
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeyChanged">
      <summary v="3ijVsO" i="0">
@ bind-SelectedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeys">
      <summary v="4JgjlP" i="0">
选定的键
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeysChanged">
      <summary v="3ijVsO" i="0">
@ bind-SelectedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNode">
      <summary v="1nxXOb" i="0">
@ bind-SelectedNode
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodeChanged">
      <summary v="1nxXOb" i="0">
@ bind-SelectedNode
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodes">
      <summary v="23S8go" i="0">
所选节点的集合
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodesChanged">
      <summary v="4BHVVI" i="0">
@ bind-SelectedNodes
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowExpand">
      <summary v="T2Gv1" i="0">
在节点前显示展开图标
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowIcon">
      <summary v="33jgCa" i="0">
显示treeNode图标图标
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowLeafIcon">
      <summary v="32TlPX" i="0">
显示子叶图标
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowLine">
      <summary v="2Gh5TZ" i="0">
显示一条连接线
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SwitcherIcon">
      <summary v="3bRdwq" i="0">
特定的图标类型的切换器
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SwitcherIconTemplate">
      <summary v="4OLQVz" i="0">
自定义切换图标模板
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleExpression">
      <summary v="17Cqdr" i="0">
指定返回节点文本的方法。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleIconTemplate">
      <summary v="2cC9bk" i="0">
自定义图标模板
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleTemplate">
      <summary v="a0sZ5" i="0">
自定义页眉模板
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.DropBelow">
      <summary v="34DM5g" i="0">
是否将拖动的节点作为同级 (下面) 或作为目标节点的子级放置。
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.OriginalEvent">
      <summary v="15L2Au" i="0">
原生事件
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.TargetNode">
      <summary v="1F0Y2X" i="0">
目标节点
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.SelfNode">
      <summary v="4bZ677" i="0">
当前节点
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.TreeComponent">
      <summary v="1uvHBZ" i="0">
根树
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.TreeLevel">
      <summary v="3REszw" i="0">
当前节点的左缩进级别
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Checked">
      <summary v="1ZPUcx" i="0">
检查TreeNode或不
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DataItem">
      <summary v="1tusi2" i="0">
节点的数据，它是数据源中的数据项
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DisableCheckbox">
      <summary v="2pFfjr" i="0">
禁用复选框
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Disabled">
      <summary v="2mtrZP" i="0">
禁用状态受制于父节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Draggable">
      <summary v="Kzcj4" i="0">
节点是否可拖动
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DragTarget">
      <summary v="2I6Teb" i="0">
是否释放目标
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DragTargetBottom">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.Expanded">
      <summary v="1dJKzH" i="0">
是否展开节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.HasChildMatched">
      <summary v="2XEPG2" i="0">
子节点存在满足搜索条件，所以夫节点也需要显示
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.HasChildNodes">
      <summary v="4es4zi" i="0">
子节点是否存在
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Icon">
      <summary v="f80m3" i="0">
节点前面的图标
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IconTemplate">
      <summary v="SBfDQ" i="0">
自定义图标模板
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IsLastNode">
      <summary v="4cJ424" i="0">
确定它是否是同一级别节点中的最后一个节点。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IsLeaf">
      <summary v="3cKGhc" i="0">
是否为叶节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Key">
      <summary v="25YQXT" i="0">
指定当前节点的唯一标识符名称。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Loading">
      <summary v="3cafGE" i="0">
加载状态是否为异步 (影响展开图标的显示)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Matched">
      <summary v="sRjSt" i="0">
标题是否包含SearchValue(搜索使用)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.NodeIndex">
      <summary v="40g1H9" i="0">
在父节点的子节点列表中记录索引。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Nodes">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.ParentNode">
      <summary v="3xV3Wk" i="0">
上一级节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.RealDisplay">
      <summary v="1jnI3j" i="0">
真正的展开状态，只要路径上有一个展开的节点，那么下面的所有折叠
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Selected">
      <summary v="3XEjb8" i="0">
选择或未选择
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SelectedChanged">
      <summary v="8GEL1" i="0">
当选定状态更改时触发
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherClose">
      <summary v="iICRj" i="0">
切换器关闭
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherIcon">
      <summary v="3kskFT" i="0">
具体的切换器的图标
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherIconTemplate">
      <summary v="4d4cOy" i="0">
自定义切换器图标模板
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherOpen">
      <summary v="TpcNo" i="0">
切换器已打开
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TargetContainer">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.Title">
      <summary v="2oiYJI" i="0">
节点的标题
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TitleTemplate">
      <summary v="cUoGl" i="0">
自定义标题模板
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TreeComponent">
      <summary v="4SG0pP" i="0">
树控件本身
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TreeLevel">
      <summary v="1c26WG" i="0">
当前节点级别
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.OnCheckBoxClick">
      <summary v="4YDLmu" i="0">
单击复选框时触发
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.SelfNode">
      <summary v="4bZ677" i="0">
当前节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.TreeComponent">
      <summary v="1uvHBZ" i="0">
根树
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.IsSwitcherClose">
      <summary v="3ur2B7" i="0">
节点是否处于关闭状态
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.IsSwitcherOpen">
      <summary v="2iaKt5" i="0">
节点是否处于展开状态
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.OnSwitcherClick">
      <summary v="42SvOx" i="0">
单击切换器时触发
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.SelfNode">
      <summary v="zQzEv" i="0">
当前节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.TreeComponent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNodeTitle`1.SelfNode">
      <summary v="zQzEv" i="0">
当前节点
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeTitle`1.TreeComponent">
      <summary v="4SG0pP" i="0">
树控件本身
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.CheckableExpression">
      <summary v="rEuK6" i="0">
指定返回可检查节点的方法
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.CheckOnClickNode">
      <summary v="3Xihj4" i="0">
用户单击树节点时是否选中该复选框。
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ChildContent">
      <summary v="WHEWV" i="0">
使用此设置树的内容。使用此或 <see cref="P:AntDesign.TreeSelect`2.DataSource" /></summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ChildrenExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.ChildrenExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.DataSource">
      <summary v="4O57kk" i="0">
树的数据源。可以是任何自定义对象类型的列表，通过提供表达式来获取孩子，叶子，标题等。使用此或 <see cref="P:AntDesign.TreeSelect`2.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.DisabledExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.DisabledExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.DropdownMatchSelectWidth">
      <summary v="4OMcg4" i="0">
确定下拉菜单和选择输入的宽度是否相同。默认设置最小宽度与输入相同。当值小于选择宽度时将忽略。false将禁用虚拟滚动
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.DropdownMaxWidth">
      <summary v="17lNaV" i="0">
下拉列表的最大宽度
</summary>
      <default value="auto" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.DropdownStyle">
      <summary v="4Y9qn5" i="0">
设置下拉菜单的样式
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ExpandedKeys">
      <summary v="4d5ThB" i="0">
(受控) 展开指定的树节点
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ExpandOnClickNode">
      <summary v="3iTArp" i="0">
单击树节点时是否展开父节点
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.IconExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.IconExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.IsLeafExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.IsLeafExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.KeyExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.KeyExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.MatchedClass">
      <summary v="4Wo8ua" i="0">
设置匹配文本的类
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.MatchedStyle">
      <summary v="1g7wFc" i="0">
设置匹配文本的样式
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.Multiple">
      <summary v="29cUY1" i="0">
是否允许多选
</summary>
      <default value="false unless TreeCheckable is true" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.Nodes">
      <summary v="4d9JEX" i="0">
要在树中呈现的节点。使用此或 <see cref="P:AntDesign.TreeSelect`2.DataSource" /></summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnBlur">
      <summary v="3bGGfe" i="0">
当组件失去焦点时执行回调
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnNodeLoadDelayAsync">
      <summary v="KvSIU" i="0">
加载树节点时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnSearch">
      <summary v="JFgop" i="0">
用户搜索值时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnTreeNodeSelect">
      <summary v="2VJvZ2" i="0">
选择树节点时执行回调
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.PopupContainerMaxHeight">
      <summary v="3sfG9X" i="0">
下拉菜单的最大高度
</summary>
      <default value="256px" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.RootValue">
      <summary v="3MRNKN" i="0">
根节点的值
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.SearchExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.SearchExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowCheckedStrategy">
      <summary v="3JoB00" i="0">
指定当TreeCheckable为true且treecheckstricly为false时如何显示检查的值
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowIcon">
      <summary v="33jgCa" i="0">
显示treeNode图标图标
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowLeafIcon">
      <summary v="2eEX0s" i="0">
是否显示叶图标
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowTreeLine">
      <summary v="1Tdbf6" i="0">
是否在树中显示线条
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.TitleExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleIconTemplate">
      <summary v="2cC9bk" i="0">
自定义图标模板
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleTemplate">
      <summary v="SeZoa" i="0">
获取或设置模板以呈现树节点的标题
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeAttributes">
      <summary v="SUnIA" i="0">
设置树的属性
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeCheckable">
      <summary v="4FImRg" i="0">
是否能够选择树节点，这将选择该节点下的所有叶。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeCheckStrictly">
      <summary v="42UEkh" i="0">
精确检查treeNode; 父treeNode和子treeNode不关联
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeComponent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeDefaultExpandAll">
      <summary v="4NU2Ff" i="0">
默认情况下是否展开所有节点
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeDefaultExpandedKeys">
      <summary v="1uUN1I" i="0">
设置默认展开树节点的键
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeDefaultExpandParent">
      <summary v="1Akg7l" i="0">
默认情况下是否展开父节点
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.Value">
      <summary v="JBtJr" i="0">
选定的值
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.Values">
      <summary v="2VVlhe" i="0">
选定的值
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.ChildContent">
      <summary v="XrT0s" i="0">
要包装的内容
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Code">
      <summary v="48jYss" i="0">
代码样式
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.Copyable">
      <summary v="3JnO3B" i="0">
文本是否可以复制。如果为true，将在文本末尾添加一个复制图标。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.CopyConfig">
      <summary v="dPQTu" i="0">
配置复制时发生的情况
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Delete">
      <summary v="3mriDF" i="0">
删除线样式
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.Disabled">
      <summary v="4Rlmsi" i="0">
禁用样式
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.Editable">
      <summary v="15h9CA" i="0">
控件是否可编辑
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.EditConfig">
      <summary v="1rQiRV" i="0">
配置编辑
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Ellipsis">
      <summary v="cKw1w" i="0">
文本溢出时显示省略号。需要省略号时应设置宽度
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.EllipsisConfig">
      <summary v="lQCLK" i="0">
配置省略号
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Mark">
      <summary v="3IJ74g" i="0">
突出显示文本
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.OnChange">
      <summary v="Qti1p" i="0">
用户编辑内容时执行的回调
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Strong">
      <summary v="2hvhDX" i="0">
加粗文本
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Type">
      <summary v="1xNhe1" i="0">
内容类型-样式文本。可能值: secondary、warning、危险
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Underline">
      <summary v="2NXSND" i="0">
为文本添加下划线
</summary>
    </member>
    <member name="P:AntDesign.Upload.Accept">
      <summary v="4U1iyO" i="0">
可以接受的文件类型。
<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept">输入的accept属性</see></summary>
    </member>
    <member name="P:AntDesign.Upload.Action">
      <summary v="4ZQ1hI" i="0">
正在上载URL
</summary>
    </member>
    <member name="P:AntDesign.Upload.BeforeAllUpload">
      <summary v="3n9ogc" i="0">
在开始整体上传之前将执行的钩子函数。
如果返回false，将停止上传。
警告: ie9不支持此功能。
</summary>
    </member>
    <member name="P:AntDesign.Upload.BeforeAllUploadAsync">
      <summary v="3n9ogc" i="0">
在开始整体上传之前将执行的钩子函数。
如果返回false，将停止上传。
警告: ie9不支持此功能。
</summary>
    </member>
    <member name="P:AntDesign.Upload.BeforeUpload">
      <summary v="4MR3Id" i="0">
将在上传每个文件之前执行的函数。
如果返回false，将停止上传。
警告: ie9不支持此功能。
</summary>
    </member>
    <member name="P:AntDesign.Upload.ChildContent">
      <summary v="4Mu2Kf" i="0">
上传按钮的内容
</summary>
    </member>
    <member name="P:AntDesign.Upload.Data">
      <summary v="4FPCOF" i="0">
要与文件一起上传的其他数据
</summary>
    </member>
    <member name="P:AntDesign.Upload.DefaultFileList">
      <summary v="jWgSS" i="0">
已上载文件的默认列表。
</summary>
    </member>
    <member name="P:AntDesign.Upload.Directory">
      <summary v="2feHVC" i="0">
支持上传整个目录。
<see href="https://caniuse.com/input-file-directory">可以使用</see>浏览器支持
</summary>
    </member>
    <member name="P:AntDesign.Upload.Disabled">
      <summary v="4V454e" i="0">
禁用上载按钮
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Upload.Drag">
      <summary v="YNUzo" i="0">
是否允许拖放文件。
</summary>
    </member>
    <member name="P:AntDesign.Upload.FileList">
      <summary v="4HrkGy" i="0">
获取或设置已上载文件的列表
</summary>
    </member>
    <member name="P:AntDesign.Upload.FileListChanged">
      <summary v="wU4fP" i="0">
文件列表更改时执行的事件回调
</summary>
    </member>
    <member name="P:AntDesign.Upload.Headers">
      <summary v="Mg2sA" i="0">
设置请求标头，在ie10以上有效。
</summary>
    </member>
    <member name="P:AntDesign.Upload.ListType">
      <summary v="2k0mCy" i="0">
内置样式表，支持三种类型: <c>文本</c>，<c>图片</c>或<c>图片卡</c></summary>
      <default value="text" />
    </member>
    <member name="P:AntDesign.Upload.Locale">
      <summary v="41gqfH" i="0">
UI文本的区域设置
</summary>
    </member>
    <member name="P:AntDesign.Upload.Method">
      <summary v="3MYft8" i="0">
上传请求的HTTP方法
</summary>
      <default value="post" />
    </member>
    <member name="P:AntDesign.Upload.Multiple">
      <summary v="2Ow28w" i="0">
是否支持选定的多个文件。支持IE10。
当设置为true时，将允许按住Ctrl键选择多个文件
</summary>
    </member>
    <member name="P:AntDesign.Upload.Name">
      <summary v="4DT0JZ" i="0">
上传文件的名称
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnChange">
      <summary v="44m7YP" i="0">
一个回调函数，可以在上传状态因任何原因更改时执行。
当上传正在进行、已完成或失败时，将调用该函数。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnCompleted">
      <summary v="22eQdJ" i="0">
回调函数，将在所有上传成功或失败时执行
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnDownload">
      <summary v="cJbNX" i="0">
在上传列表中单击文件名链接时执行的回调。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnPreview">
      <summary v="2GNO93" i="0">
回调函数，当点击文件链接或预览图标时将执行
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnRemove">
      <summary v="3WJi46" i="0">
单击 &ldquo;删除文件” 按钮时执行的回调函数。
当返回true时，文件将被删除并<see cref="P:AntDesign.Upload.FileListChanged" />执行。
当返回false时，删除将被取消。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnSingleCompleted">
      <summary v="1bLZO9" i="0">
回调函数，将在单个文件上传成功或失败时执行
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowButton">
      <summary v="1vnmWu" i="0">
是否显示上传按钮。
</summary>
      <defaut value="true" />
    </member>
    <member name="P:AntDesign.Upload.ShowDownloadIcon">
      <summary v="zmVgu" i="0">
已上载的文件列表 (受控)
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowPreviewIcon">
      <summary v="11QPSX" i="0">
是否显示预览图标
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowRemoveIcon">
      <summary v="1PdfLo" i="0">
是否显示 &ldquo;删除” 图标
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowUploadList">
      <summary v="3bEOiB" i="0">
显示上传或不上传的文件列表
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.UploadFileItem.Ext">
      <summary v="4gT7df" i="0">
文件的扩展名
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.FileName">
      <summary v="47oJfo" i="0">
文件名
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Id">
      <summary v="1N5Sse" i="0">
用于标识文件的GUID
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.ImageExtensions">
      <summary v="3aspCl" i="0">
被视为图像的文件扩展名
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.ObjectURL">
      <summary v="2n2Zfv" i="0">
文件的对象URL
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Percent">
      <summary v="4YID2c" i="0">
已上传百分比
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Response">
      <summary v="b10oe" i="0">
来自服务器的响应
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Size">
      <summary v="1JfxhL" i="0">
文件的大小
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.State">
      <summary v="16r1pn" i="0">
上传的状态
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Type">
      <summary v="EkfGZ" i="0">
文件类型
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Url">
      <summary v="nbl0v" i="0">
实际文件的URL
</summary>
    </member>
    <member name="P:AntDesign.UploadInfo.File">
      <summary v="34uZYo" i="0">
当前操作的文件
</summary>
    </member>
    <member name="P:AntDesign.UploadInfo.FileList">
      <summary v="3scm6D" i="0">
当前文件列表
</summary>
    </member>
    <member name="P:AntDesign.Watermark.Alpha">
      <summary v="2REGlo" i="0">
透明度，值范围 [0-1]
</summary>
      <default value="1f" />
    </member>
    <member name="P:AntDesign.Watermark.ChildContent">
      <summary v="Lr2AJ" i="0">
子内容
</summary>
    </member>
    <member name="P:AntDesign.Watermark.Content">
      <summary v="2JZgwg" i="0">
水印文本内容
</summary>
    </member>
    <member name="P:AntDesign.Watermark.Contents">
      <summary v="3yQrrF" i="0">
多行水印文本内容
</summary>
    </member>
    <member name="P:AntDesign.Watermark.FontColor">
      <summary v="1JNzAE" i="0">
字体颜色
</summary>
      <default value="rgba(0,0,0,.15)" />
    </member>
    <member name="P:AntDesign.Watermark.FontFamily">
      <summary v="1W17RM" i="0">
字体系列
</summary>
      <default value="sans-serif" />
    </member>
    <member name="P:AntDesign.Watermark.FontSize">
      <summary v="2XlKjE" i="0">
字体大小
</summary>
      <default value="16" />
    </member>
    <member name="P:AntDesign.Watermark.FontStyle">
      <summary v="yP1Ap" i="0">
字体样式。该值可以是<c>无</c>、<c>正常</c>、<c>斜体</c>和<c>倾斜</c>。
</summary>
      <default value="normal" />
    </member>
    <member name="P:AntDesign.Watermark.FontWeight">
      <summary v="1tPPQk" i="0">
字体粗细。该值可以是<c>正常</c>、<c>轻</c>、<c>重量</c>和数字。
</summary>
      <default value="normal" />
    </member>
    <member name="P:AntDesign.Watermark.Gap">
      <summary v="3itudQ" i="0">
水印之间的间距。
<para>X: x轴水印</para>间距<para>Y: y轴水印</para>间距</summary>
      <default value="(100, 100)" />
    </member>
    <member name="P:AntDesign.Watermark.Grayscale">
      <summary v="33reeU" i="0">
画面是否需要灰度显示 (彩色变灰度)
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Watermark.Height">
      <summary v="UXYbs" i="0">
水印的高度， <c>内容</c>的默认值是它自己的高度
</summary>
      <default value="64" />
    </member>
    <member name="P:AntDesign.Watermark.Image">
      <summary v="isjP8" i="0">
图片来源，建议导出2x或3x图片，高优先级 (支持base64格式)
</summary>
    </member>
    <member name="P:AntDesign.Watermark.LineSpace">
      <summary v="3W1i1P" i="0">
行间距，仅适用于多行 (内容配置为数组)
</summary>
      <default value="16" />
    </member>
    <member name="P:AntDesign.Watermark.Offset">
      <summary v="2ecW0k" i="0">
水印距离容器左上角的偏移量。默认值为 &ldquo; <c>gap/2</c> ”。
</summary>
      <default value="(gap[0]/2, gap[1]/2)" />
    </member>
    <member name="P:AntDesign.Watermark.Repeat">
      <summary v="4HxEH1" i="0">
设置或获取是否重复水印
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Watermark.Rotate">
      <summary v="sqW7n" i="0">
绘制水印时，旋转角度，单位 <c>&deg;</c></summary>
      <default value="-22" />
    </member>
    <member name="P:AntDesign.Watermark.Scrolling">
      <summary v="2NFDxn" i="0">
启用无限滚动文本效果
</summary>
    </member>
    <member name="P:AntDesign.Watermark.ScrollingSpeed">
      <summary v="2HGkWL" i="0">
运动位移的间隔，以毫秒为单位。
</summary>
      <default value="3000" />
    </member>
    <member name="P:AntDesign.Watermark.Width">
      <summary v="4Jl8o7" i="0">
水印的宽度， <c>内容</c>的默认值是它自己的宽度
</summary>
      <default value="120" />
    </member>
    <member name="P:AntDesign.Watermark.ZIndex">
      <summary v="1yescZ" i="0">
附加的watermark元素的z-index。
</summary>
      <default value="9" />
    </member>
    <member name="T:AntDesign.Affix">
      <summary v="37tCq1" i="0">
        <para>Wrap粘贴在另一个组件周围以使其粘贴视口。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>在较长的网页上，它有助于一些内容坚持到视口。这在菜单和操作中很常见。</item>
          <item>请注意，词缀不应覆盖页面上的其他内容，尤其是当视口的大小较小时。</item>
        </list>
        <para>
          <strong>重要</strong>: 儿童<c>词缀</c>不能有财产<c>位置: 绝对</c>,但您可以设置<c>位置: 绝对</c>开<c>词缀</c>本身</para>
      </summary>
    </member>
    <member name="T:AntDesign.Alert">
      <summary v="1pB52Z" i="0">
        <para>用于反馈的警报组件。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当您需要向用户显示警报消息时。</item>
          <item>当您需要一个可通过用户操作关闭的持久静态容器时。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Anchor">
      <summary v="2GD9UG" i="0">
        <para>在一个页面上滚动的超链接。</para>
        <h2>何时使用</h2>
        <para>用于在页面上显示锚点超链接并在它们之间跳转。</para>
      </summary>
      <seealso cref="T:AntDesign.AnchorLink" />
    </member>
    <member name="T:AntDesign.AnchorLink">
      <summary v="1rYOPm" i="0">
链接在锚点列表中。被设计成Anchor的孩子
</summary>
    </member>
    <member name="T:AntDesign.AntInputComponentBase`1">
      <summary v="4IyV3t" i="0">
可选地支持<see cref="P:AntDesign.AntInputComponentBase`1.EditContext" />的任何输入控件的基类。
参考: https://github.com/dotnet/aspnetcore/blob/master/src/Components/Web/src/Forms/InputBase.cs
</summary>
      <typeparam name="TValue" v="KpCZe" i="0">输入值的自然类型</typeparam>
    </member>
    <member name="T:AntDesign.AntList`1">
      <summary v="2je90m" i="0">
        <para>简单列表。</para>
        <h2>何时使用</h2>
        <para>列表可用于显示与单个主题相关的内容。内容可以由不同类型和大小的多个元素组成。</para>
      </summary>
      <seealso cref="T:AntDesign.ListItem" />
      <seealso cref="T:AntDesign.ListItemMeta" />
      <seealso cref="T:AntDesign.PaginationOptions" />
      <seealso cref="T:AntDesign.ListGridType" />
    </member>
    <member name="T:AntDesign.AutoComplete`1">
      <summary v="2CTE69" i="0">
        <para>输入字段的自动完成功能。</para>
        <h2>何时使用</h2>
当需要自动完成功能时。
</summary>
      <inheritdoc />
      <seealso cref="T:AntDesign.AutoCompleteOption" />
      <seealso cref="T:AntDesign.TriggerBoundaryAdjustMode" />
    </member>
    <member name="T:AntDesign.Avatar">
      <summary v="20WBeT" i="0">
        <para>化身可用于表示人或物体。它支持图像，图标或字母。</para>
      </summary>
      <seealso cref="T:AntDesign.AvatarGroup" />
    </member>
    <member name="T:AntDesign.BackTop">
      <summary v="1SNW98" i="0">
        <para>使返回到页面顶部变得容易。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当页面内容很长时。</item>
          <item>当您需要非常频繁地返回顶部以查看内容时。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Badge">
      <summary v="r4bOo" i="0">
        <para>UI元素的小数值或状态描述符。</para>
        <h2>何时使用</h2>
        <para>徽章通常出现在通知或用户头像附近，具有引人注目的吸引力，通常显示未读消息计数。</para>
      </summary>
      <seealso cref="T:AntDesign.BadgeRibbon" />
    </member>
    <member name="T:AntDesign.BadgeRibbon">
      <summary v="2Rq7Zo" i="0">
UI元素的小数值或状态描述符。
</summary>
    </member>
    <member name="T:AntDesign.Breadcrumb">
      <summary v="1c7cNF" i="0">
        <para>痕迹导航显示层次结构中的当前位置。它允许回到层次结构中更高的状态。</para>

何时使用

<list type="bullet"><item>当系统在层次结构中具有两个以上的层时。</item><item>当您需要通知用户他们在哪里时。</item><item>当用户可能需要导航回更高级别时。</item></list></summary>
      <seealso cref="T:AntDesign.BreadcrumbItem" />
    </member>
    <member name="T:AntDesign.BreadcrumbOption">
      <summary v="3CaXYE" i="0">
目前没有使用。计划未来的发展。
</summary>
    </member>
    <member name="T:AntDesign.Button">
      <summary v="2Yy3K9" i="0">
        <para>触发操作。</para>
        <h2>何时使用</h2>
        <para>按钮意味着操作 (或一系列操作)。点击按钮会触发相应的业务逻辑。</para>
        <para>在Ant设计中，我们提供了4种类型的按钮。</para>
        <list type="bullet">
          <item>主要按钮: 指示主要操作，一个部分最多一个主要按钮。</item>
          <item>默认按钮: 表示没有优先级的一系列操作。</item>
          <item>虚线按钮: 常用于添加动作。</item>
          <item>链接按钮: 用于外部链接。</item>
        </list>
        <para>和另外4个其他属性。</para>
        <list type="bullet">
          <item>
            <c>危险</c>: 用于风险操作，如删除或授权。</item>
          <item>
            <c>幽灵</c>: 用于背景复杂的情况，通常是主页。</item>
          <item>
            <c>已禁用</c>: 当操作不可用时。</item>
          <item>
            <c>正在加载</c>: 在按钮中添加加载微调，避免多次提交。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.DownloadButton" />
    </member>
    <member name="T:AntDesign.ButtonProps">
      <summary v="1jRKjS" i="0">
按钮道具
</summary>
    </member>
    <member name="T:AntDesign.Calendar">
      <summary v="2OrO5h" i="0">
        <para>用于以日历形式显示数据的容器。</para>
        <h2>何时使用</h2>
        <para>当数据采用日期形式时，例如时间表，时间表，价格日历，农历。此组件还支持年/月切换。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Card">
      <summary v="Agd00" i="0">
        <para>简单的矩形容器。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>卡片可用于显示与单个主题相关的内容。内容可以由不同类型和大小的多个元素组成。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CardGrid" />
      <seealso cref="T:AntDesign.CardMeta" />
      <seealso cref="T:AntDesign.CardAction" />
    </member>
    <member name="T:AntDesign.CardAction">
      <summary v="1ysu72" i="0">
简单的方法来设置卡的动作。
</summary>
    </member>
    <member name="T:AntDesign.Carousel">
      <summary v="2TfmkF" i="0">
        <para>轮播组件。与其容器一起缩放。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当同一级别上有一组内容时。</item>
          <item>当内容空间不足时，可以使用旋转门的形式来节省空间。</item>
          <item>常用于一组图片/卡片。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CarouselSlick" />
    </member>
    <member name="T:AntDesign.Cascader">
      <summary v="2WPPjO" i="0">
        <para>级联选择框。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当您需要从一组关联的数据集中进行选择时。如省/市/区、公司级别、事物分类。</item>
          <item>从大型数据集中进行选择时，多阶段分类分开，便于选择。</item>
          <item>在一个浮动层中选择级联项目，以获得更好的用户体验。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CascaderNode" />
      <seealso cref="T:AntDesign.TriggerBoundaryAdjustMode" />
    </member>
    <member name="T:AntDesign.Checkbox">
      <summary v="1bsMQt" i="0">
        <para>Checkbox组件。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>用于从多个选项中选择多个值。</item>
          <item>如果仅使用一个复选框，则与使用开关在两种状态之间切换相同。</item>
        </list>
        <para>不同之处在于，Switch将直接触发状态更改，但复选框只是将状态标记为已更改，这需要提交。</para>
      </summary>
      <seealso cref="P:AntDesign.Checkbox.CheckboxGroup" />
    </member>
    <member name="T:AntDesign.CheckboxGroup`1">
      <summary v="5xKk1" i="0">
显示一组相关的复选框
</summary>
    </member>
    <member name="T:AntDesign.CloseEventArgs`1">
      <summary v="qxMDq" i="0">
可用于有条件地阻止关闭事件
</summary>
      <typeparam name="T" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Collapse">
      <summary v="IzfHK" i="0">
        <para>可以折叠和展开的内容区域。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>可用于分组或隐藏复杂区域以保持页面清洁。</item>
          <item>
            <c>手风琴</c>是一种特殊的<c>坍塌</c>,它一次只允许扩展一个面板。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.Panel" />
    </member>
    <member name="T:AntDesign.Color">
      <summary v="1eFGx0" i="0">
Ant设计颜色: https:// Ant.Design/docs/spec/colors
</summary>
    </member>
    <member name="T:AntDesign.Column`1">
      <summary v="3NHxPN" i="0">
列定义可用于定义<see cref="T:AntDesign.Table`1" />的列。

我们建议使用<see cref="T:AntDesign.PropertyColumn`2" />。
</summary>
      <typeparam name="TData" v="1A8H8T" i="0">
TItem对象的属性的类型。
</typeparam>
    </member>
    <member name="T:AntDesign.Comment">
      <summary v="FSec4" i="0">
        <para>评论显示用户对网站内容的反馈和讨论。</para>
        <h2>何时使用</h2>
        <para>评论可用于启用对诸如页面、博客帖子、问题等实体的讨论。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Confirm">
      <summary v="3MOCfz" i="0">
DOT不直接使用Confirm，
请使用ModalService或ConfirmService创建确认对话框
</summary>
    </member>
    <member name="T:AntDesign.ConfirmButtonOptions">
      <summary v="29ac0n" i="0">
配置确认按钮的属性
</summary>
    </member>
    <member name="T:AntDesign.ConfirmButtons">
      <summary v="4A7aQN" i="0">
确认页脚按钮类型
</summary>
    </member>
    <member name="T:AntDesign.ConfirmIcon">
      <summary v="4btyuR" i="0">
确认图标类型
</summary>
    </member>
    <member name="T:AntDesign.ConfirmLocale">
      <summary v="1p1KyL" i="0">
确认对话框区域设置
</summary>
    </member>
    <member name="T:AntDesign.ConfirmOptions">
      <summary v="1kUbEo" i="0">
确认对话框选项
</summary>
    </member>
    <member name="T:AntDesign.ConfirmRef">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ConfirmRef`1">
      <summary v="30SDzd" i="0">
具有返回值的ConfirmRef
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ConfirmResult">
      <summary v="1E9RxE" i="0">
单击哪个确认按钮
</summary>
    </member>
    <member name="T:AntDesign.ConfirmService">
      <summary v="4bavRW" i="0">
显示一个简单的确认对话框，如Windows的MessageBox，它与ModalService不同。ModalService只能创建好-取消确认对话框并返回ConfirmRef，但ConfirmService返回ConfirmResult
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCode`1">
      <summary v="2QfH9f" i="0">
提供两个参数值的哈希比较
</summary>
      <typeparam name="TParameter" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeExtensions">
      <summary v="25Bj9r" i="0">
提供组件参数的HashCode计算等功能
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider">
      <summary v="4U8Dt8" i="0">
HashCode提供程序
<para>它用于计算参数值的HashCode</para><para>集合类型计算每个元素的HashCode，
其他类型只返回由对象的默认GetHashCode方法引发的值
</para>，<para>为了考虑反射性能，复杂模型不会拆解和计算其属性的HashCode，因此建议模型重写GetHashCode方法本身</para></summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.DictionaryHashCodeProvider">
      <summary v="ogIOV" i="0">
字典类型的哈希提供程序
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.EnumerableHashCodeProvider">
      <summary v="1U8TI8" i="0">
IEnumerable类型的哈希提供程序
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.OtherHashCodeProvider">
      <summary v="OKreE" i="0">
其他类型的哈希提供程序
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.ParameterDescriptor`1">
      <summary v="3IE49e" i="0">
表示组件的参数描述符
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.DatePicker`1">
      <summary v="2sdet8" i="0">
        <para>选择或输入日期。</para>
        <h2>何时使用</h2>
        <para>通过单击输入框，您可以从弹出式日历中选择日期。</para>
      </summary>
      <seealso cref="T:AntDesign.MonthPicker`1" />
      <seealso cref="T:AntDesign.RangePicker`1" />
      <seealso cref="T:AntDesign.WeekPicker`1" />
      <seealso cref="T:AntDesign.YearPicker`1" />
      <seealso cref="T:AntDesign.QuarterPicker`1" />
      <seealso cref="T:AntDesign.TriggerBoundaryAdjustMode" />
    </member>
    <member name="T:AntDesign.Descriptions">
      <summary v="UlNF4" i="0">
        <para>在组中显示多个只读字段。</para>
        <h2>何时使用</h2>
        <para>通常显示在详细信息页面上。</para>
      </summary>
      <seealso cref="T:AntDesign.DescriptionsItem" />
    </member>
    <member name="T:AntDesign.Dialog">
      <summary v="3kcfun" i="0">
对话框仅控制组件的显示或隐藏，
元素不会从DOM树中删除
</summary>
    </member>
    <member name="T:AntDesign.DialogOptions">
      <summary v="4BPXAm" i="0">
对话框选项
</summary>
    </member>
    <member name="T:AntDesign.DialogOptionsBase">
      <summary v="342PtQ" i="0">
ModalOptions，confirmotions和DialogOptions基类
</summary>
    </member>
    <member name="T:AntDesign.DialogWrapper">
      <summary v="3kvY2G" i="0">
可以在DOM树中存在很长时间的组件，除非您主动销毁它
</summary>
    </member>
    <member name="T:AntDesign.Divider">
      <summary v="1wIK1e" i="0">
        <para>分隔线分隔不同的内容。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>文章的分节。</item>
          <item>划分内联文本和链接，例如表的操作列。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.DownloadButton">
      <summary v="3Fet2E" i="0">
用于下载文件。继承 <see cref="T:AntDesign.Button" /></summary>
    </member>
    <member name="T:AntDesign.Drawer">
      <summary v="2GRpVr" i="0">
        <para>从屏幕边缘滑入的面板。</para>
        <h2>何时使用</h2>
        <para>
抽屉是通常覆盖在页面顶部并从侧面滑入的面板。
它包含一组信息或操作。
由于用户可以在不离开当前页面的情况下与抽屉交互，因此可以在相同的上下文中更有效地实现任务。
</para>
        <list type="bullet">
          <item>使用窗体创建或编辑一组信息。</item>
          <item>正在处理子任务。当子任务对于Popover来说太重并且我们仍然希望将子任务保留在主要任务的上下文中时，抽屉非常方便。</item>
          <item>当在多个地方需要相同的表单时。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.DrawerService" />
      <seealso cref="T:AntDesign.DrawerOptions" />
      <seealso cref="T:AntDesign.DrawerRef" />
    </member>
    <member name="T:AntDesign.Dropdown">
      <summary v="10EZzZ" i="0">
        <para>一个下拉列表。</para>
        <h2>何时使用</h2>
        <para>
当有多个选项可供选择时，您可以将它们包装在<c>下拉列表</c>。
通过悬停或单击触发器，将出现一个下拉菜单，该菜单允许您选择一个选项并执行相关操作。
</para>
        <h2>两种类型</h2>
        <para>有2种渲染方法<c>下拉列表</c>:</para>
        <list type="number">
          <item>包装子元素 (的内容<c>下拉列表</c>) 与一个<c>div</c>(默认方法)。</item>
          <item>
子元素不包含任何内容。这种方法需要使用<c>未绑定</c>标签内<c>下拉列表</c>并根据子元素类型 (请参阅第一个示例):
<list type="bullet"><item>html标签: 必须有它的<c>@ ref</c>设置为<c>@ context.Current</c></item><item><c>蚂蚁设计Blazor</c>组件: 必须有其<c>RefBack</c>属性设置为<c>@ context</c>。</item></list></item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.DropdownButton" />
    </member>
    <member name="T:AntDesign.Empty">
      <summary v="A10ia" i="0">
        <para>空状态占位符。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当没有提供数据时，显示友好的提示。</item>
          <item>用户教程在新的情况下创建的东西。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.EventUtil">
      <summary>
避免将事件重新呈现给Blazor组件。(纯事件处理程序)

作者: SteveSandersonMS，来自<see href="https://gist.github.com/SteveSandersonMS/8a19d8e992f127bb2d2a315ec6c5a373" />。
</summary>
    </member>
    <member name="T:AntDesign.FeedbackComponent`1">
      <summary v="1wTQkB" i="0">
反馈组件
</summary>
      <typeparam name="TComponentOptions" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackComponent`2">
      <summary v="1wTQkB" i="0">
反馈组件
</summary>
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackRefBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackRefWithOkCancelBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Flex">
      <summary v="2FDqx5" i="0">
        <para>用于对齐的flex布局容器。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>适用于设置元素之间的间距。</item>
          <item>适用于设置各种水平和垂直对齐。</item>
        </list>
        <h3>与空间组件的区别</h3>
        <list type="bullet">
          <item>空格用于设置内联元素之间的间距。它将为每个子元素添加一个包装元素以进行内联对齐。适用于行和列中的多个子元素的等距排列。</item>
          <item>Flex用于设置块级元素的布局。它不添加包装元素。适用于垂直或水平方向的子元素的布局，并提供了更多的灵活性和控制。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Form`1">
      <summary v="1lZrE1" i="0">
        <para>具有数据范围管理的高性能表单组件。包括数据收集、验证和样式。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当您需要创建实例或收集信息时。</item>
          <item>当您需要验证某些规则中的字段时。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.FormValidateMode" />
      <seealso cref="T:AntDesign.FormItem" />
      <seealso cref="T:AntDesign.FormValidationRule" />
      <seealso cref="T:AntDesign.FormValidateErrorMessages" />
    </member>
    <member name="T:AntDesign.Grid">
      <summary v="3qnmQ6" i="0">
        <para>24网格系统。</para>
        <h2>设计理念</h2>
        <para>在大多数业务情况下，蚂蚁设计需要解决设计区域内的大量信息存储问题，因此基于12个网格系统，我们将设计区域划分为24个部分。</para>
        <para>
我们将分割的区域命名为 &ldquo;盒子”。我们建议最多四个盒子进行水平排列，至少一个。
框与整个屏幕成比例，如上图所示。
为了确保高水平的视觉舒适度，我们根据盒子单元自定义盒子内部的排版。
</para>
        <h2>大纲</h2>
        <para>在网格系统中，我们定义了基于行和列的帧外信息区域，以确保每个区域都可以有稳定的排列。</para>
        <para>以下是一个简短的看看它是如何工作的:</para>
        <list type="bullet">
          <item>在row定义的水平空间中建立一组列 (缩写为col)</item>
          <item>您的内容元素应直接放置在col中，并且只有col应直接放置在行中</item>
          <item>柱网系统的值为1-24，表示其范围跨度。例如，可以通过在列上使用跨度8来创建宽度相等的三列。</item>
          <item>如果一行中col跨度的总和大于24，则溢出的col作为一个整体将开始新的行排列。</item>
        </list>
        <para>
我们的网格系统基于Flex布局，允许父级中的元素水平对齐-左，中，右，宽排列和分散排列。
网格系统还支持垂直对齐-顶部对齐，垂直居中，底部对齐。
还可以使用order定义元素的顺序。
</para>
        <para>布局使用24网格布局来定义每个 &ldquo;框” 的宽度，但不拘泥于网格布局。</para>
        <para>响应网格的断点遵循BootStrap 4媒体查询规则 (偶尔不包括部分)。</para>
      </summary>
      <seealso cref="T:AntDesign.Row" />
      <seealso cref="T:AntDesign.Col" />
      <seealso cref="T:AntDesign.EmbeddedProperty" />
    </member>
    <member name="T:AntDesign.Icon">
      <summary v="3ZMHTY" i="0">
语义矢量图形。使用图标之前。
</summary>
    </member>
    <member name="T:AntDesign.IFeedbackRef">
      <summary v="4GzNez" i="0">
使用打开和关闭方法的组件参考
</summary>
    </member>
    <member name="T:AntDesign.Image">
      <summary v="WDF41" i="0">
        <para>可预览的图像。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当你需要显示图片。</item>
          <item>加载大图像时显示，加载失败时显示容错处理。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.ImagePreviewGroup" />
    </member>
    <member name="T:AntDesign.Input`1">
      <summary v="3wmlDD" i="0">
        <para>用于获取用户输入的基本小部件是文本字段。键盘和鼠标可用于提供或更改数据。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>需要表单字段中的用户输入。</item>
          <item>搜索输入是必需的。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.TextArea" />
      <seealso cref="T:AntDesign.Search" />
      <seealso cref="T:AntDesign.InputGroup" />
      <seealso cref="T:AntDesign.InputPassword" />
    </member>
    <member name="T:AntDesign.InputNumber`1">
      <summary v="2pWsMH" i="0">
        <para>用鼠标或键盘输入一定范围内的数字。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当需要提供数值时。</item>
        </list>
        <h3>支持的类型</h3>
        <para>
          <c>sbyte</c>,<c>字节</c>,<c>短</c>,<c>ushort</c>,<c>智力</c>,<c>uint</c>,<c>长</c>,<c>ulong</c>,<c>浮子</c>,<c>双</c>,<c>十进制</c></para>
        <para>还支持上述类型的可为Nullable类型。例如，<c>ushort?</c>,<c>int?</c>等。</para>
      </summary>
    </member>
    <member name="T:AntDesign.IOkCancelRef">
      <summary v="23dkGA" i="0">
使用好和取消方法的组件引用
</summary>
    </member>
    <member name="T:AntDesign.IOkCancelRef`1">
      <summary v="4VqRkO" i="0">
组件 &lt;&gt; 引用好和取消方法
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Layout">
                 * <summary v="YmcQy" i="0"><para>处理页面的整体布局。</para><h2>规格</h2><h3>尺寸</h3><para>第一级导航在徽标附近左对齐，二级菜单右对齐。</para><list type="bullet"><item>顶部导航: 第一级导航的高度<c>64px</c>第二级导航
<c>48px</c>。</item><item>顶部导航 (用于着陆页): 第一级导航的高度<c>80px</c>,第二个
级别导航<c>56px</c>。</item><item>顶部导航的计算公式:<c>48 8n</c>。</item><item>旁航的计算公式:<c>200 8n</c>。</item></list><h3>交互规则</h3><list type="bullet"><item>第一级导航和最后一级导航应通过可视化进行区分；</item><item>当前项目应具有最高的可视化优先级；</item><item>当当前导航项处于折叠状态时，当前导航项的样式将应用于其
父级；</item><item>左侧导航栏支持手风琴和扩展样式; 您可以选择一个
最适合你的情况。</item></list><h2>可视化规则</h2><para>导航的风格应该符合其级别。</para><list type="bullet"><item><para><strong>按色块强调</strong></para><para>当背景色是深色时，您可以将此模式用于父级导航项
当前页。</para></item><item><para><strong>高光火柴棒</strong></para><para>当背景颜色是浅色时，您可以将此模式用于当前页面导航项; 我们
建议将其用于导航路径的最后一项。</para></item><item><para><strong>突出显示的字体</strong></para><para>从可视化方面来看，突出显示的字体比色块更强; 经常使用这种模式
对于当前项的父级。</para></item><item><para><strong>放大字体的大小</strong></para><para><c>12px</c>,<c>14px</c>是导航的标准字体大小，<c>14px</c>使用
用于导航的第一级和第二级。您可以选择适当的字体大小
您的导航级别。</para></item></list><h2>组件概述</h2><list type="bullet"><item><c>布局</c>: 布局包装，其中<c>页眉</c><c>Sider</c><c>内容</c><c>页脚</c>或<c>布局</c>本身可以嵌套，并且可以放置在
任何父容器。</item><item><c>页眉</c>: 具有默认样式的顶部布局，其中任何元素都可以嵌套，并且必须为
放置在<c>布局</c>。</item><item><c>Sider</c>: 具有默认样式和基本功能的侧边栏，其中可以嵌套任何元素，
并且必须放置在<c>布局</c>。</item><item><c>内容</c>: 具有默认样式的内容布局，其中可以嵌套任何元素，以及
必须放置在<c>布局</c>。</item><item><c>页脚</c>: 具有默认样式的底部布局，其中任何元素都可以嵌套，并且必须
被放置在<c>布局</c>。</item></list><blockquote><para>基于<c>flex布局</c>,请注意<a href="http://caniuse.com/#search=flex">兼容性</a>。</para></blockquote></summary><seealso cref="T:AntDesign.Header" /><seealso cref="T:AntDesign.Footer" /><seealso cref="T:AntDesign.Content" /><seealso cref="T:AntDesign.Sider" /></member>
    <member name="T:AntDesign.Mentions">
      <summary v="ZPJKe" i="0">
        <para>提及组件。</para>
        <h2>何时使用</h2>
        <para>当需要提及某人或某事时。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Menu">
      <summary v="cPchq" i="0">
        <para>导航的多功能菜单。</para>
        <h2>何时使用</h2>
        <para>
导航是任何网站的重要组成部分，因为良好的导航设置允许用户快速有效地在网站中移动。
Ant设计提供了顶部和侧面导航选项。
顶级导航提供了网站的所有类别和功能。
侧面导航提供了网站的多级结构。
</para>
        <para>有关导航的更多布局，请参见布局。</para>
      </summary>
      <seealso cref="T:AntDesign.MenuItem" />
      <seealso cref="T:AntDesign.SubMenu" />
      <seealso cref="T:AntDesign.MenuItemGroup" />
      <seealso cref="T:AntDesign.MenuDivider" />
    </member>
    <member name="T:AntDesign.Message">
      <summary v="1eqsjN" i="0">
        <para>将全局消息显示为响应用户操作的反馈。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>提供反馈，如成功，警告，错误等。</item>
          <item>消息显示在顶部和中心，并将被自动解除，作为一个非中断的轻量级提示。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.IMessageService" />
      <seealso cref="T:AntDesign.MessageConfig" />
    </member>
    <member name="T:AntDesign.MessageService">
      <summary v="46UWFn" i="0">
消息服务
</summary>
    </member>
    <member name="T:AntDesign.Modal">
      <summary v="1tZ7VL" i="0">
        <para>模态对话框。</para>
        <h2>何时使用</h2>
        <para>
当要求用户与应用程序交互，但不跳转到新页面并中断用户的工作流时，可以使用<c>模态</c>在当前页面上创建新的浮动图层，以获取用户反馈或显示信息。
此外，如果您需要显示一个简单的确认对话框，您可以使用<c>ModalService.Confirm()</c>,等等。
</para>
      </summary>
      <seealso cref="T:AntDesign.ModalService" />
      <seealso cref="T:AntDesign.ConfirmService" />
      <seealso cref="T:AntDesign.ConfirmOptions" />
    </member>
    <member name="T:AntDesign.ModalCancelFooter">
      <summary v="3rqwQJ" i="0">
模态页脚组件
</summary>
    </member>
    <member name="T:AntDesign.ModalFooter">
      <summary v="3rqwQJ" i="0">
模态页脚组件
</summary>
    </member>
    <member name="T:AntDesign.ModalLocale">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ModalOkFooter">
      <summary v="3rqwQJ" i="0">
模态页脚组件
</summary>
    </member>
    <member name="T:AntDesign.ModalOptions">
      <summary v="33zzV5" i="0">
模式对话框的选项
</summary>
    </member>
    <member name="T:AntDesign.ModalRef">
      <summary v="3g66il" i="0">
模态实例的参考
</summary>
    </member>
    <member name="T:AntDesign.ModalRef`1">
      <summary v="obMVl" i="0">
具有返回值的ModalRef
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ModalService">
      <summary v="17Ulp2" i="0">
创建并打开模式对话框
</summary>
    </member>
    <member name="T:AntDesign.Notification">
      <summary v="3pmo7C" i="0">
        <para>全局显示通知消息。</para>
        <h2>何时使用</h2>
        <para>在视口的四个角中的任何一个角显示通知消息。通常，它可以在以下情况下使用:</para>
        <list type="bullet">
          <item>具有复杂内容的通知。</item>
          <item>基于用户交互提供反馈的通知。或者它可能显示用户可能必须遵循的即将到来的步骤的一些细节。</item>
          <item>由应用程序推送的通知。</item>
        </list>
        <para>注意: 请确认<c><AntContainer /></c>组件已添加到<c>App.Razor</c>。如果通知不显示，这是一个常见的问题。</para>
      </summary>
      <seealso cref="T:AntDesign.NotificationService" />
      <seealso cref="T:AntDesign.NotificationConfig" />
      <seealso cref="T:AntDesign.NotificationRef" />
    </member>
    <member name="T:AntDesign.NotificationBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.NotificationGlobalConfig">
      <summary v="1hOMBL" i="0">
AntNotification全局配置
</summary>
    </member>
    <member name="T:AntDesign.NotificationRef">
      <summary v="1vLyd3" i="0">
NotificationRef
</summary>
    </member>
    <member name="T:AntDesign.NotificationService">
      <summary v="SPIyy" i="0">
AntNotification服务
</summary>
    </member>
    <member name="T:AntDesign.PageHeader">
      <summary v="2sfEII" i="0">
        <para>内置了常见操作和设计元素的标头。</para>
        <h2>何时使用</h2>
        <para>PageHeader可用于突出显示页面主题，显示有关页面的重要信息，并携带与当前页面相关的操作项 (包括页面级操作，页面间导航等)它也可以用作页面间导航。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Pagination">
      <summary v="39YqyH" i="0">
        <para>可以使用 &ldquo;分页” 将长列表划分为多个页面，并且一次只能加载一个页面。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当加载/渲染所有项目需要很长时间时。</item>
          <item>如果您想通过浏览页面来浏览数据。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Popconfirm">
      <summary v="3uUnUn" i="0">
        <para>一个简单而紧凑的动作确认对话框。</para>
        <h2>何时使用</h2>
        <para>一个简单而紧凑的对话框，用于询问用户确认。</para>
        <para>与的区别<c>确认</c>模态对话框是，它比静态弹出全屏确认模态更轻量级。</para>
        <h2>两种类型</h2>
        <para>有2种渲染方法<c>Popconfirm</c>:</para>
        <list type="number">
          <item>包装子元素 (的内容<c>Popconfirm</c>) 与一个<c>div</c>标记 (默认进近)。</item>
          <item>子元素不包含任何内容。这种方法需要使用<c>未绑定</c>标签内<c>Popconfirm</c>并根据子元素类型 (请参阅第一个示例):
<list type="bullet"><item>html标签: 必须有它的<c>@ ref</c>设置为<c>@ context.Current</c></item><item><c>蚂蚁设计Blazor</c>组件: 必须有其<c>RefBack</c>属性设置为<c>@ context</c>。</item></list></item>
        </list>
        <para>请确保的子节点<c>Popconfirm</c>接受<c>onMouseEnter</c>,<c>onMouseLeave</c>,<c>onFocus</c>,<c>onClick</c>事件。</para>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Popover">
      <summary v="2mjUSX" i="0">
        <para>通过单击或悬停弹出浮动卡。</para>
        <h2>何时使用</h2>
        <para>一个简单的弹出菜单提供额外的信息或操作。</para>
        <para>与比较<c>工具提示</c>,除了信息<c>Popover</c>卡还可以提供动作元素，如链接和按钮。</para>
        <h2>两种类型</h2>
        <para>有2种渲染方法<c>Popover</c>:</para>
        <list type="number">
          <item>包装子元素 (的内容<c>Popover</c>) 与一个<c>div</c>标记 (默认进近)。</item>
          <item>子元素不包含任何内容。这种方法需要使用<c>未绑定</c>标签内<c>Popover</c>并根据子元素类型 (请参阅第一个示例):
<list type="bullet"><item>html标签: 必须有它的<c>@ ref</c>设置为<c>@ context.Current</c></item><item><c>蚂蚁设计Blazor</c>组件: 必须有其<c>RefBack</c>属性设置为<c>@ context</c>。</item></list></item>
        </list>
        <para>请确保的子节点<c>Popover</c>接受<c>onMouseEnter</c>,<c>onMouseLeave</c>,<c>onFocus</c>,<c>onClick</c>事件。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Progress">
      <summary v="2gJE91" i="0">
        <para>显示操作流程的当前进度。</para>
        <h2>何时使用</h2>
        <para>如果需要很长时间才能完成操作，则可以使用 &ldquo;进度” 来显示当前进度和状态。</para>
        <list type="bullet">
          <item>当一个操作会中断当前界面，或者需要在后台运行2秒以上。</item>
          <item>当您需要显示操作的完成百分比时。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Radio`1">
      <summary v="3QaM3o" i="0">
        <h2>何时使用</h2>
        <list type="bullet">
          <item>用于从多个选项中选择一个状态。</item>
          <item>与Select的不同之处在于，无线电对用户是可见的，并且可以促进选择的比较，这意味着不应该有太多的选择。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.RadioGroup`1" />
    </member>
    <member name="T:AntDesign.RangePickerDefaults">
      <summary v="38wVtM" i="0">
评估应将哪些值插入到PickerValues (每个日期
选择器将专注于第一次显示时)。
</summary>
    </member>
    <member name="T:AntDesign.Rate">
      <summary v="3GefLc" i="0">
        <para>速率组件。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>展示评价。</item>
          <item>对某物的快速评级操作。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.RerenderStrategy">
      <summary v="2FJ4wP" i="0">
重新渲染策略
</summary>
    </member>
    <member name="T:AntDesign.Result">
      <summary v="44OUcJ" i="0">
        <para>用于反馈一系列操作任务的结果。</para>
        <h2>何时使用</h2>
        <para>当重要操作需要通知用户处理结果且反馈较为复杂时使用。</para>
      </summary>
    </member>
    <member name="T:AntDesign.ReuseTabs">
      <summary v="2UMBIG" i="0">
在应用程序中重复使用多个页面组件
</summary>
    </member>
    <member name="T:AntDesign.ReuseTabsService">
      <summary v="2Hcqoc" i="0">
用于重用选项卡的服务
</summary>
    </member>
    <member name="T:AntDesign.Segmented`1">
      <summary v="jWtmK" i="0">
        <para>分段控件。此组件自 &ldquo;v0.12.0” 起可用。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>显示多个选项时，用户可以选择单个选项</item>
          <item>切换所选选项时，关联区域的内容会发生变化。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.SegmentedItem`1" />
    </member>
    <member name="T:AntDesign.Select.Internal.SelectOptionItem`2">
      <summary v="1X6flt" i="0">
内部使用的SelectOption的数据模型。
</summary>
      <typeparam name="TItemValue" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Select`2">
      <summary v="2qQf3C" i="0">
        <para>选择要从选项中选择值的组件。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>用于显示选项的下拉菜单-原生HTML的优雅替代品<c>选择</c>元素。</item>
          <item>利用<see cref="T:AntDesign.Radio`1" />当选项总数较少时 (少于5个)，建议使用。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Sider">
      <summary v="22OLNO" i="0">
的侧边栏 <see cref="T:AntDesign.Layout" /></summary>
    </member>
    <member name="T:AntDesign.Skeleton">
      <summary v="2noOuO" i="0">
        <para>在等待内容加载时提供占位符，或将尚不存在的内容可视化。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当资源需要长时间加载，如低网络速度。</item>
          <item>组件包含许多信息，如列表或卡片。</item>
          <item>仅在第一次加载数据时有效。</item>
          <item>在任何情况下都可以被Spin取代，但可以提供更好的用户体验。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.SkeletonElement" />
    </member>
    <member name="T:AntDesign.Slider`1">
      <summary v="5cvoX" i="0">
        <para>用于显示当前值和范围内的间隔的Slider组件。</para>
        <h2>何时使用</h2>
        <para>输入范围内的值。</para>
      </summary>
      <seealso cref="T:AntDesign.SliderMark" />
    </member>
    <member name="T:AntDesign.Space">
      <summary v="DaATU" i="0">
        <para>设置组件间距。</para>
        <h2>何时使用</h2>
        <para>避免组件粘在一起并设置统一的空间。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Spin">
      <summary v="ndOrx" i="0">
        <para>用于显示页面或节的加载状态的微调器。</para>
        <h2>何时使用</h2>
        <para>当页面的一部分正在等待异步数据或在渲染过程中，适当的加载动画可以有效地减轻用户的不安。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Statistic`1">
      <summary v="g565v" i="0">
        <para>显示统计数字。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当想要突出显示一些数据时。</item>
          <item>当想要用描述显示统计数据时。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CountDown" />
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Steps">
      <summary v="3Rat7c" i="0">
        <para>引导用户完成任务步骤的导航栏。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当给定的任务很复杂或在一系列子任务中具有一定的顺序时，我们可以将其分解为几个步骤，以使事情变得更容易。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.Step" />
    </member>
    <member name="T:AntDesign.Switch">
      <summary v="3KLO43" i="0">
        <para>切换选择器。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>如果需要表示两种状态之间的切换或通断状态。</item>
          <item>&ldquo;Switch” 和 &ldquo;Checkbox” 之间的区别在于，当您切换开关时，开关将直接触发状态更改，而Checkbox通常用于状态标记，它应该与提交操作一起工作。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Table.Internal.TItemProxy">
      <summary v="2auhJN" i="0">
此类用于通过DispatchProxy创建接口的实例
</summary>
    </member>
    <member name="T:AntDesign.Table`1">
      <summary v="253EU9" i="0">
        <para>显示数据行。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>显示结构化数据的集合。</item>
          <item>排序，搜索，分页，过滤数据。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.PropertyColumn`2" />
      <seealso cref="T:AntDesign.ActionColumn" />
      <seealso cref="T:AntDesign.Selection" />
      <seealso cref="T:AntDesign.TableModels.QueryModel`1" />
    </member>
    <member name="T:AntDesign.TableFilter">
      <summary v="14Ij0h" i="0">
筛选器项定义
</summary>
    </member>
    <member name="T:AntDesign.TableModels.RowData">
      <summary v="2VK43F" i="0">
保存特定于行的所有数据，例如是否扩展行。
有关特定于项而不是行的所有属性，请参见<see cref="P:AntDesign.TableModels.RowData.TableDataItem" />。
</summary>
    </member>
    <member name="T:AntDesign.TableModels.RowData`1">
      <inheritdoc />
    </member>
    <member name="T:AntDesign.TableModels.TableDataItem">
      <summary v="4IsL8v" i="0">
保存表中项目的属性。
对于表中的每个项目都是唯一的 (例如，即使项目显示多次，
将只有一个<see cref="T:AntDesign.TableModels.TableDataItem" />。)
因此，具有相同项目的所有行将同时被选中/取消选中。

有关特定于行的数据，请参见<see cref="T:AntDesign.TableModels.RowData" />。
</summary>
    </member>
    <member name="T:AntDesign.TableModels.TableDataItem`1">
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Tabs">
      <summary v="3Il8bi" i="0">
        <para>标签可以很容易地在不同的视图之间切换。</para>
        <h2>何时使用</h2>
        <para>Ant设计有3种类型的标签用于不同的情况。</para>
        <list type="bullet">
          <item>卡片标签: 用于管理过多的可关闭视图。</item>
          <item>普通选项卡: 用于页面的功能方面。</item>
          <item>
            <see cref="T:AntDesign.RadioGroup`1" />: 用于辅助选项卡。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.TabPane" />
    </member>
    <member name="T:AntDesign.Tag">
      <summary v="21XWpj" i="0">
        <para>用于分类或标记的标记。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>它可用于按维度或属性标记。</item>
          <item>分类时。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.TemplateComponentBase`1">
      <summary v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Text">
      <summary v="1b6XSw" i="0">
      </summary>
    </member>
    <member name="T:AntDesign.Timeline">
      <summary v="4INOfS" i="0">
        <para>垂直显示时间线。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当一系列信息需要按时间排序 (升序或降序) 时。</item>
          <item>当你需要一个时间线来建立视觉连接时。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.TimelineItem" />
    </member>
    <member name="T:AntDesign.TimePicker`1">
      <summary v="W6rBr" i="0">
        <para>选择/输入时间。</para>
        <h2>何时使用</h2>
        <para>通过单击输入框，您可以从弹出面板中选择时间。</para>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Tooltip">
      <summary v="2YqWIT" i="0">
        <para>一个简单的文本弹出提示。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>提示显示在鼠标进入，并隐藏在鼠标离开。的<c>工具提示</c>不支持复杂的文本或操作。</item>
          <item>提供按钮/文本/操作的说明。它经常被用来代替html<c>标题</c>属性。</item>
        </list>
        <h2>两种类型</h2>
        <para>有2种渲染方法<c>工具提示</c>:</para>
        <list type="number">
          <item>包装子元素 (的内容<c>工具提示</c>) 与一个<c>div</c>(默认方法)。</item>
          <item>
子元素不包含任何内容。这种方法需要使用<c>未绑定</c>标签内<c>工具提示</c>并根据子元素类型 (请参阅第一个示例):
<list type="bullet"><item>html标签: 必须有它的<c>@ ref</c>设置为<c>@ context.Current</c></item><item><c>蚂蚁设计Blazor</c>组件: 必须有其<c>RefBack</c>属性设置为<c>@ context</c>。</item></list></item>
        </list>
        <para>请确保的子节点<c>工具提示</c>接受<c>onMouseEnter</c>,<c>onMouseLeave</c>,<c>onFocus</c>,<c>onClick</c>事件。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Transfer">
      <summary v="Mvx5m" i="0">
        <para>双柱传输选择框。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>它本质上是一个选择控件，可用于选择多个项目。</item>
          <item>传输可以显示更多的信息，并占用更多的空间。</item>
        </list>
        <para>以直观有效的方式在两列之间传输元素。</para>
        <para>
可以从任一列中选择一个或多个元素，单击正确的 &ldquo;方向” 按钮，然后完成传输。
左列被认为是 &ldquo;源”，右列被认为是 &ldquo;目标”。
正如您在API描述中看到的，这些名称反映在
</para>
      </summary>
    </member>
    <member name="T:AntDesign.Tree`1">
      <summary v="4GXmmz" i="0">
        <para>分层列表结构组件。</para>
        <h2>何时使用</h2>
        <para>
几乎任何东西都可以用树结构表示。
示例包括目录、组织层次结构、生物分类、国家等。
&ldquo;Tree” 组件是表示这些事物之间的层次关系的一种方式。
还可以展开、折叠和选择 &ldquo;tree” 中的treeNode。
</para>
      </summary>
      <seealso cref="T:AntDesign.TreeNode`1" />
    </member>
    <member name="T:AntDesign.TreeSelect`2">
      <summary v="hZF1D" i="0">
        <para>树选择控件。</para>
        <h2>何时使用</h2>
        <para>
          <c>树选择</c>类似于<c>选择</c>,但值是在树状结构中提供的。
其条目以分层方式定义的任何数据都适合使用此控件。
这种情况的示例可以包括公司层级、目录结构等。
</para>
      </summary>
    </member>
    <member name="T:AntDesign.TypographyBase">
      <summary v="30qA7f" i="0">
        <para>基本文本写作，包括标题、正文文本、列表等。</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当需要在文章/博客/笔记中显示标题或段落内容时。</item>
          <item>当您需要可复制/可编辑/省略号文本时。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.Text" />
      <seealso cref="T:AntDesign.Title" />
      <seealso cref="T:AntDesign.Paragraph" />
    </member>
    <member name="T:AntDesign.Upload">
      <summary v="3HMhF7" i="0">
        <para>通过选择或拖动上传文件。</para>
        <h2>何时使用</h2>
        <para>上传是通过网页或上传工具将信息 (网页，文本，图片，视频等) 发布到远程服务器的过程。</para>
        <list type="bullet">
          <item>当您需要上传一个或多个文件时。</item>
          <item>当你需要显示上传的过程。</item>
          <item>当您需要通过拖放上传文件时。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.UploadInfo" />
      <seealso cref="T:AntDesign.UploadFileItem" />
    </member>
    <member name="T:AntDesign.Watermark">
      <summary v="48mt3K" i="0">
        <para>
向页面添加特定文本或图案。
</para>
        <h2>何时使用</h2>
        <list type="bullet">
          <item>当页面需要加水印以标识版权时使用。</item>
          <item>适用于防止信息被盗。</item>
        </list>
      </summary>
    </member>
  </members>
</doc>