<?xml version="1.0"?>
<doc>
  <assembly>
    <name>AntDesign</name>
  </assembly>
  <members>
    <member name="E:AntDesign.NotificationConfig.OnClick">
      <summary v="42pkAh" i="0">
通知时
</summary>
    </member>
    <member name="E:AntDesign.NotificationConfig.OnClose">
      <summary v="11YvOG" i="0">
⦁ 通知义 时
</summary>
    </member>
    <member name="F:AntDesign.Alert._isClosed">
      <summary v="yW8vK" i="0">
구성 요소가 닫혀 있는지 여부를 나타냅니다.
</summary>
    </member>
    <member name="F:AntDesign.Alert._isClosing">
      <summary v="1CUgJ3" i="0">
구성 요소를 닫기 직전에이 표시기를 설정하여 닫는 애니메이션을 표시합니다.
</summary>
    </member>
    <member name="F:AntDesign.AutoComplete`1._optionDataItems">
      <summary v="3hlfJJ" i="0">

목록 데이터 수집
</summary>
    </member>
    <member name="F:AntDesign.AutoComplete`1._options">
      <summary v="3QtkWg" i="0">
정정ordicenter.
목록 바운드 데이터 소스 컬렉션
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Closed">
      <summary v="2lNNDv" i="0">
一 一次OnAfterRender/OnAfterRender/OnAfterRenderAsync
OnAfterRender/OnAfterRenderAsync가 닫을 때 한 번 경험하면이 상태가됩니다.
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Closing">
      <summary v="1Mk8P4" i="0">
用在eleparameter 性中, 表明 正 中
구성 요소가 닫히고 있음을 나타내는 매개 변수 속성에서 설정하는 데 사용됩니다.
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Destroyed">
      <summary v="4HjwoW" i="0">
一 시시토 一次OnAfterRender, 成
OnAfterRender/OnAfterRenderAsync가 파괴 중에 한 번 경험하면이 상태가됩니다.
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Destroying">
      <summary v="10HgBd" i="0">
용재 모수 性 中, 개명 (明) 正 中 、
구성 요소가 정사이즈 파괴 중임을 나타내는 매개 변수 속성을 설정하는 데 사용됩니다.
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Inited">
      <summary v="1e7sQF" i="0">
初等化 化
구성 요소 초기화 완료
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Initing">
      <summary v="2Dnf11" i="0">
初达化中
구성 요소 초기화 진행 중
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Opened">
      <summary v="1V4YNr" i="0">
一 开时 一次OnAfterRender/OnAfterRender/OnAfterRenderAsync
구성 요소가 열렸을 때 OnAfterRender/OnAfterRenderAsync을 한 번 경험하면이 상태가됩니다.
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Opening">
      <summary v="1WRA1H" i="0">
용재 매개 변수 性 中, 개명 正 재하
매개 변수 속성에서 설정하는 데 사용됩니다. 구성 요소가 처음으로 렌더링되고 있음을 나타냅니다.
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.AbortRetryIgnore">
      <summary v="3dHrPd" i="0">
세 개의 버튼: 중단, 재시도 및 무시
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.OK">
      <summary v="3t6Etb" i="0">
OK 버튼 만
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.OKCancel">
      <summary v="4UZPqN" i="0">
두 개의 버튼: 확인 및 취소
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.RetryCancel">
      <summary v="2JNCgQ" i="0">
두 개의 버튼: 재시도 및 취소
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.YesNo">
      <summary v="4WMXxD" i="0">
두 개의 버튼: 예 및 아니오
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.YesNoCancel">
      <summary v="3CuxQc" i="0">
세 개의 버튼: 예, 아니오 및 취소
</summary>
    </member>
    <member name="F:AntDesign.Core.HashCodes.ParameterDescriptor`1.Descriptors">
      <summary v="3jJwQt" i="0">
구성 요소의 모든 매개 변수에 대한 설명을 가져옵니다.
</summary>
    </member>
    <member name="F:AntDesign.Dialog._dialogMouseDown">
      <summary v="2mDnNT" i="0">
체크 is 대화 상자 클릭
</summary>
    </member>
    <member name="F:AntDesign.Dialog._element">
      <summary v="2lsUtt" i="0">
대화 루트 컨테이너
</summary>
    </member>
    <member name="F:AntDesign.Dialog._sentinelStart">
      <summary v="enVVW" i="0">
TAB 키보드 제어
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultCloseIcon">
      <summary v="W8kIQ" i="0">
기본 대화 닫기 아이콘
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultFooter">
      <summary v="T4rRh" i="0">
기본 모달 바닥
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultHeader">
      <summary v="2Y2SUn" i="0">
기본 모달 헤더
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultMaximizeIcon">
      <summary v="W8kIQ" i="0">
기본 대화 닫기 아이콘
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAndClear">
      <summary v="1w7dgS" i="0">
초점이 맞춰지면 콘텐츠가 지워집니다.
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAndSelectAll">
      <summary v="1zmt3n" i="0">
초점을 맞출 때 콘텐츠가 선택됩니다.
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAtFirst">
      <summary v="3yAl94" i="0">
포커스가 있으면 커서가 첫 번째 문자로 이동합니다.
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAtLast">
      <summary v="2IX3yV" i="0">
초점을 맞추면 커서가 마지막 문자로 이동합니다.
이것은 기본 동작입니다.
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.None">
      <summary v="4NnUqv" i="0">
없음 으로 설정하면 양식에 필요한 상태에 관계없이 모든 필드의 표시기가 표시되지 않습니다.
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.Optional">
      <summary v="3P3eBz" i="0">
선택 사항으로 설정하면 양식에 선택적 필드 옆에 표시기가 표시됩니다.
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.Required">
      <summary v="1UZY2b" i="0">
필수 항목으로 설정하면 양식에 필요한 필드 옆에 표시기가 표시됩니다.
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Complex">
      <summary v="pWX6P" i="0">
기본 모드와 규칙 모드 모두 사용
同时 用Defaultwa Rulesclutication
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Default">
      <summary v="4686Sm" i="0">
Blazor의 검증 모드. 모델 필드에 validateAttributes 추가
Blazoriciquarity cemodelicial, 爱 modelography 上 加
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Rules">
      <summary v="4erxc3" i="0">
FormItem에 대한 규칙 설정
FormItem上 Rules
</summary>
    </member>
    <member name="F:AntDesign.Internal.Overlay._isReloading">
      <summary v="3wcE9I" i="0">
페이지가 새로 고쳐지고 있음을 나타냅니다.
</summary>
    </member>
    <member name="F:AntDesign.Rate._currentValue">
      <summary v="3qqeGZ" i="0">
前 中的 星星
현재 선택된 별의 수
</summary>
    </member>
    <member name="F:AntDesign.Rate._hasHalf">
      <summary v="2fqpId" i="0">
许
반 선택을 허용할지 여부
</summary>
    </member>
    <member name="F:AntDesign.Rate._hoverValue">
      <summary v="dbFU7" i="0">
。
마우스로 호버링했을 때 맨 왼쪽에서 커서 위치까지의 별 수.
</summary>
    </member>
    <member name="F:AntDesign.Rate._isFocused">
      <summary v="3ALEeG" i="0">

입력 초점을 얻을 수있는 바퀴.
</summary>
    </member>
    <member name="F:AntDesign.Rate._valueWasSet">
      <summary v="4T5P25" i="0">
값이 변경되었는지 나타냅니다. 존재하는 경우 DefaultValue로 리셋되지 않도록 해야 합니다.
</summary>
    </member>
    <member name="F:AntDesign.RerenderStrategy.Always">
      <summary v="BjYee" i="0">
항상 재렌더링
</summary>
    </member>
    <member name="F:AntDesign.RerenderStrategy.ParametersHashCodeChanged">
      <summary v="W9Mkm" i="0">
구성 요소의 매개 변수 값이 변경된 경우에만 렌더링
</summary>
    </member>
    <member name="F:AntDesign.Select.Internal.SelectContent`2._isReloading">
      <summary v="3wcE9I" i="0">
페이지가 새로 고쳐지고 있음을 나타냅니다.
</summary>
    </member>
    <member name="F:AntDesign.Select`2._dataSourceItemShallowCopyMehtod">
      <summary v="2dLgj3" i="0">
MethodInfo에는 연결된 MemberwiseClone이 보호됩니다.
방법. 보호 수준으로 인해 액세스해야합니다.
반사 사용. 그것은 생성 중에 사용될 것입니다
DataSource 얕은 사본 (DataSource 의 새 목록)
각 항목의 얕은 복사본이있는 항목).
</summary>
    </member>
    <member name="F:AntDesign.SelectBase`2._maxTagCount">
      <summary v="v23JS" i="0">
얼마나 긴 (문자 수) 태그가 될 것입니다.
모드 = "다중" 또는 모드 = "태그" 에 대해서만
</summary>
      <value>
                The maximum length of the tag text.
            </value>
    </member>
    <member name="F:AntDesign.SelectOption`2._itemSet">
      <summary v="3XJgl6" i="0">
SelectOption의 항목
매개 변수는 SelectOption을 직접 만든 경우에만 사용해야합니다.
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._isTipFormatterDefault">
      <summary v="30Azba" i="0">
슬라이더는 tipFormatter에 그 값을 전달하고 툴팁에 그 값을 표시합니다.
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._range">
      <summary v="34jy3B" i="0">
듀얼 엄지 모드
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._reverse">
      <summary v="4bs5mi" i="0">
구성 요소를 반전
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._step">
      <summary v="7DciJ" i="0">
슬라이더가 값을 통과 할 수있는 세분성. 0 보다 커야하며 (<see cref="P:AntDesign.Slider`1.Max" />-<see cref="P:AntDesign.Slider`1.Min" />). 언제<see cref="P:AntDesign.Slider`1.Marks" />Null 없음,<see cref="P:AntDesign.Slider`1.Step" />Null 일 수 있습니다.
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._tooltipVisible">
      <summary v="FnJHc" i="0">
사실이라면 Tooltip이 항상 표시되거나 끌거나 맴도는 경우에도 표시되지 않습니다.
</summary>
    </member>
    <member name="F:AntDesign.Table`1._isReloading">
      <summary v="3wcE9I" i="0">
페이지가 새로 고쳐지고 있음을 나타냅니다.
</summary>
    </member>
    <member name="F:AntDesign.TextArea._isReloading">
      <summary v="3wcE9I" i="0">
페이지가 새로 고쳐지고 있음을 나타냅니다.
</summary>
    </member>
    <member name="F:AntDesign.Tree`1._allNodes">
      <summary v="XXSU2" i="0">
모든 노드
</summary>
    </member>
    <member name="F:AntDesign.Tree`1._checkedNodes">
      <summary v="1Z7yRm" i="0">
모든 체크 노드
</summary>
    </member>
    <member name="F:AntDesign.TreeNodeTitle`1._dragTargetClientX">
      <summary v="0000" i="0" />
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.InScroll">
      <summary v="2mhd7P" i="0">
발기압 기어대
문서 경계는 오버레이가 재배치되어야 하는 경우 계산에 사용되는 경계이다.
따라서 오버레이가 뷰포트의 외부에 있더라도 오버레이는 여전히 그대로 보일 수 있습니다.
문서 경계를 "오버플로" 하지 않습니다.
</summary>
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.InView">
      <summary v="2HCzIU" i="0">
발기압 기어기 내역
기본적으로 뷰포트 경계는 오버레이 경우 계산에 사용되는 경계입니다.
완전히 보입니다.
뷰포트에서 항상 완전히 볼 수 있도록 오버레이를 맞추려고 시도합니다.
따라서 오버레이가 뷰포트 외부에 있으면 ("오버플로우"), 재배치 계산이 진행됩니다.
시도 될 것입니다.
</summary>
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.None">
      <summary v="2a2qbd" i="0">
不自动动制
자동 조정하지 마십시오
</summary>
    </member>
    <member name="M:AntDesign.Alert.OnCloseHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="seeMo" i="0">
가까운 콜백을 처리합니다.
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Alert.OnInitialized">
      <summary v="ajhia" i="0">
시작 코드.
</summary>
    </member>
    <member name="M:AntDesign.Alert.SetClassMap">
      <summary v="45aP6Q" i="0">
기본 클래스를 설정합니다.
</summary>
    </member>
    <member name="M:AntDesign.AntComponentBase.BlurAsync(Microsoft.AspNetCore.Components.ElementReference)">
      <summary v="1Df4hk" i="0">
표준 흐림. JS interop을 사용합니다.
</summary>
      <param name="target" v="4QgwiP" i="0">초점을 받게 될 요소.</param>
    </member>
    <member name="M:AntDesign.AntComponentBase.FocusAsync(Microsoft.AspNetCore.Components.ElementReference,AntDesign.FocusBehavior,System.Boolean)">
      <summary v="zIr6D" i="0">
행동에 집중하십시오. 행동은 요소에만 작동합니다.
HTMLInputElement 또는 HTMLTextAreaElement. 그렇지 않으면 집중합니다.
</summary>
      <param name="target" v="4QgwiP" i="0">초점을 받게 될 요소.</param>
      <param name="behavior" v="4euOKD" i="0">집중된 요소의 행동</param>
      <param name="preventScroll" v="2zL7A" i="0">집중된 요소로 스크롤할지 여부</param>
    </member>
    <member name="M:AntDesign.AntComponentBase.FocusAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
      <summary v="3oHKS9" i="0">
표준 초점. Net5 에서 ElementReference에서 Blazor 확장 방법을 사용합니다.
이전에는 Net5 JS와 정확히 동일하게 구현 된 JS를 사용합니다.
</summary>
      <param name="target" v="4QgwiP" i="0">초점을 받게 될 요소.</param>
      <param name="preventScroll" v="2zL7A" i="0">집중된 요소로 스크롤할지 여부</param>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.#ctor">
      <summary v="7iYge" i="0">
의 인스턴스를 구성합니다.<see cref="T:Microsoft.AspNetCore.Components.Forms.InputBase`1" />.
</summary>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.FormatValueAsString(`0)">
      <summary v="2Mhrl9" i="0">
값을 문자열로 포맷합니다. 파생 된 클래스는이를 재정의하여 사용 된 형성을 결정할 수 있습니다.<see cref="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString" />.
</summary>
      <param name="value" v="26kDud" i="0">포맷할 값입니다.</param>
      <returns v="1AaSv2" i="0">값의 문자열 표현입니다.</returns>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnCurrentValueChange(`0)">
      <summary v="1OUvUw" i="0">
이 방법을 호출하면 Value 및 CurrentValue가 수정되고 ValueChanged가 트리거되어 외부 바인딩 값이 변경됩니다.
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnValueChange(`0)">
      <summary v="oF6Fx" i="0">
이 메서드를 호출할 때, 값은 수정될 뿐이지 만, ValueChanged는 트리거되지 않으므로, 외부 바운드 값은 변경되지 않는다.
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnValueChangeAsync(`0)">
      <summary v="oF6Fx" i="0">
이 메서드를 호출할 때, 값은 수정될 뿐이지 만, ValueChanged는 트리거되지 않으므로, 외부 바운드 값은 변경되지 않는다.
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
      <summary v="4eJg98" i="0">
의 인스턴스를 만들기 위해 문자열을 구문 분석합니다.. 파생 된 클래스는이를 재정의하여 방법을 변경할 수 있습니다.
<see cref="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString" />들어오는 값을 해석합니다.
<typeparamref name="TValue" /></summary>
      <param name="value" v="3C8L8R" i="0">구문 분석할 문자열 값입니다.</param>
      <param name="result" v="2OSvxq" i="0">의 인스턴스.<typeparamref name="TValue" /></param>
      <param name="validationErrorMessage" v="1lxpYC" i="0">값을 구문 분석할 수 없는 경우 유효성 검사 오류 메시지를 제공합니다.</param>
      <returns v="22lm7E" i="0">값을 구문 분석 할 수있는 경우 true; 그렇지 않으면 false.</returns>
    </member>
    <member name="M:AntDesign.AutoComplete`1.ClosePanel">
      <summary v="1AK2s7" i="0">
检, 방면판
닫기 패널
</summary>
    </member>
    <member name="M:AntDesign.AutoComplete`1.OpenPanel">
      <summary v="PETmG" i="0">
고령 현면판
오픈 패널
</summary>
    </member>
    <member name="M:AntDesign.AutoCompleteOption.CalcSelected">
      <summary v="15MAgK" i="0">
정무고 前정무는
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Badge.OnInitialized">
      <summary v="1cE7i0" i="0">
시작 코드
</summary>
    </member>
    <member name="M:AntDesign.Badge.SetClassMap">
      <summary v="K1vic" i="0">
기본 CSS 클래스를 설정합니다.
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.OnInitialized">
      <summary v="1cE7i0" i="0">
시작 코드
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.OnParametersSet">
      <summary v="3bianQ" i="0">
매개 변수가 설정 될 때마다 실행됩니다.
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.SetClassMap">
      <summary v="K1vic" i="0">
기본 CSS 클래스를 설정합니다.
</summary>
    </member>
    <member name="M:AntDesign.Cascader.CascaderOnBlur">
      <summary v="4QW9aB" i="0">
/()
</summary>
    </member>
    <member name="M:AntDesign.Cascader.ClearSelected">
      <summary v="EYuLQ" i="0">
靑
</summary>
    </member>
    <member name="M:AntDesign.Cascader.GetNodeByValue(System.Collections.Generic.IEnumerable{AntDesign.CascaderNode},System.String)">
      <summary v="2me3yv" i="0">
지정된 값을 기준으로 노드를 가져옵니다.
</summary>
      <param name="list" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.InitCascaderNodeState(System.Collections.Generic.List{AntDesign.CascaderNode},AntDesign.CascaderNode,System.Int32,System.Boolean)">
      <summary v="JTgDE" i="0">
노드 초기화 (레벨, 부모 노드)
</summary>
      <param name="list" v="0000" i="0" />
      <param name="parentNode" v="0000" i="0" />
      <param name="level" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.InputOnToggle">
      <summary v="JoEYk" i="0">
로트 (/)
</summary>
    </member>
    <member name="M:AntDesign.Cascader.NodeOnClick(AntDesign.CascaderNode)">
      <summary v="4Y7NQo" i="0">
하
</summary>
      <param name="node" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.NodeOnMouseOver(AntDesign.CascaderNode)">
      <summary v="3PeI3Q" i="0">
하
</summary>
      <param name="node" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.NodesOnMouseOut">
      <summary v="4P5oXL" i="0">

</summary>
    </member>
    <member name="M:AntDesign.Cascader.NodesOnMouseOver">
      <summary v="2UJTjQ" i="0">

</summary>
    </member>
    <member name="M:AntDesign.Cascader.ProcessParentAndDefault">
      <summary v="fSFSs" i="0">
옵션 업데이트 후 부모 노드 및 기본값을 처리합니다.
</summary>
    </member>
    <member name="M:AntDesign.Cascader.RefreshDisplayText">
      <summary v="4TItSt" i="0">
디스플레이 텍스트 재구축
</summary>
    </member>
    <member name="M:AntDesign.Cascader.RefreshNodeValue(System.String)">
      <summary v="23wDCv" i="0">
선택한 값 새로 고침
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetDefaultValue(System.String)">
      <summary v="4bhYmD" i="0">
기본값 설정
</summary>
      <param name="defaultValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetSelectedNode(AntDesign.CascaderNode,AntDesign.SelectedTypeEnum)">
      <summary v="1yanOb" i="0">
선택한 노드
</summary>
      <param name="cascaderNode" v="0000" i="0" />
      <param name="selectedType" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetSelectedNodeWithParent(AntDesign.CascaderNode,System.Collections.Generic.List{AntDesign.CascaderNode}@)">
      <summary v="4cw9N0" i="0">
모든 부모 노드를 선택하도록 설정
</summary>
      <param name="node" v="0000" i="0" />
      <param name="list" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetValue(System.String)">
      <summary v="4LHGMk" i="0">
바인딩 값 설정
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.CheckboxGroup`1.OnCheckboxChange(AntDesign.Checkbox,System.Boolean)">
      <summary v="12407g" i="0">
[체크 박스 변경] 때 호출됩니다.
</summary>
      <param name="checkbox" v="RRWM4" i="0">체크 박스.</param>
      <param name="invokeOnChange" v="2gshfC" i="0">변경 이벤트를 위해 출발할지 여부를 표시합니다.</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.Dispose(System.Boolean)">
      <summary v="JOrKd" i="0">
이벤트 등록 해제
</summary>
      <param name="disposing" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmClose(AntDesign.ConfirmRef)">
      <summary v="29ltvo" i="0">
파괴 확인 대화
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmCloseAll">
      <summary v="3stjhf" i="0">
모든 확인 대화 상자를 파괴
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmOpen(AntDesign.ConfirmRef)">
      <summary v="4Ttvme" i="0">
확인 대화 상자 만들기 및 열기
</summary>
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmRemove(AntDesign.ConfirmRef)">
      <summary v="2hkOM7" i="0">
대화 상자가 DOM에서 제거되었는지 확인한 후 _ confirmRefs에서 제거하십시오.
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmUpdate(AntDesign.ConfirmRef)">
      <summary v="2Hw32B" i="0">
업데이트 확인 대화 상자
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnInitialized">
      <summary v="2AGfwn" i="0">
등록 이벤트
</summary>
    </member>
    <member name="M:AntDesign.ComponentStatusExt.Is(AntDesign.ComponentStatus,AntDesign.ComponentStatus)">
      <summary v="1aMoDL" i="0">
반환는<paramref name="componentStatus" /><paramref name="status" /></summary>
      <param name="componentStatus" v="0000" i="0" />
      <param name="status" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsClose(AntDesign.ComponentStatus)">
      <summary v="4f8eFK" i="0">
ComponentStatus. 종결 또는 ComponentStatus. 폐쇄
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsNotOpen(AntDesign.ComponentStatus)">
      <summary v="37QzBT" i="0">
ComponentStatus. opening 및 ComponentStatus가 아닙니다. 오픈
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsOpen(AntDesign.ComponentStatus)">
      <summary v="3YviB6" i="0">
ComponentStatus. opening 또는 ComponentStatus. 오픈
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Confirm.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Confirm.OnInitializedAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmOptions.BuildButtonsDefaultOptions">
      <summary v="N7VQ8" i="0">
버튼에 대한 기본 옵션 설정
</summary>
    </member>
    <member name="M:AntDesign.ConfirmRef.CloseAsync">
      <summary v="w8anv" i="0">
닫기 대화 확인
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.OpenAsync">
      <summary v="4ME4b" i="0">
열기 확인 대화 상자
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.UpdateConfigAsync">
      <summary v="3cDh69" i="0">
업데이트 Visible = true 대화 구성 확인
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.UpdateConfigAsync(AntDesign.ConfirmOptions)">
      <summary v="1aknzh" i="0">
업데이트 새 확인 옵션으로 대화 상자 구성 확인
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef`1.CancelAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ConfirmRef`1.OkAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ConfirmService.Show(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},AntDesign.ConfirmButtons,AntDesign.ConfirmIcon,AntDesign.ConfirmButtonOptions,System.Nullable{AntDesign.ConfirmAutoFocusButton})">
      <summary v="3S6wbj" i="0">
Windows의 MessageBox와 같은 확인 대화 상자 표시
</summary>
      <param name="content" v="4eHUMp" i="0">대화 상자의 내용</param>
      <param name="title" v="2qim70" i="0">대화 상자의 제목</param>
      <param name="confirmButtons" v="4OkTic" i="0">대화 상자의 단추</param>
      <param name="confirmIcon" v="4E5rut" i="0">대화 상자의 아이콘</param>
      <param name="options" v="30j200" i="0">대화 상자에 대한 구성 옵션</param>
      <param name="autoFocusButton" v="2g6u5L" i="0">자동 초점 버튼</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmService.Show(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},AntDesign.ConfirmButtons,AntDesign.ConfirmIcon)">
      <summary v="3S6wbj" i="0">
Windows의 MessageBox와 같은 확인 대화 상자 표시
</summary>
      <param name="content" v="4eHUMp" i="0">대화 상자의 내용</param>
      <param name="title" v="2qim70" i="0">대화 상자의 제목</param>
      <param name="confirmButtons" v="4OkTic" i="0">대화 상자의 단추</param>
      <param name="confirmIcon" v="4E5rut" i="0">대화 상자의 아이콘</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Extensions.ArrayExtensions.Scroll``1(``0[],System.Int32)">
      <summary v="KDoZN" i="0">
스크롤 요소 왼쪽
</summary>
      <typeparam name="T" v="0000" i="0" />
      <param name="sourceArray" v="0000" i="0" />
      <param name="offset" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.DataConversionExtensions.Convert``2(``0)">
      <summary v="kkCNA" i="0">
일반 유형 TFrom 을 지정된 TTo 유형으로 변환
</summary>
      <typeparam name="TFrom" v="0000" i="0" />
      <typeparam name="TTo" v="0000" i="0" />
      <param name="fromValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.HttpClientExtensions.GetEncoding(System.Net.Http.HttpContent)">
      <summary v="1hf85j" i="0">
에서 인코딩 정보 받기<see cref="T:System.Net.Http.HttpContent" /></summary>
      <param name="httpContent" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.HttpClientExtensions.ReadAsByteArrayAsync(System.Net.Http.HttpContent,System.Text.Encoding)">
      <summary v="Vs5WG" i="0">
바이너리 배열로 읽고 지정된 인코딩으로 변환
</summary>
      <param name="httpContent" v="0000" i="0" />
      <param name="dstEncoding" v="3gsAdT" i="0">대상 인코딩</param>
      <exception cref="T:System.ArgumentException" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCode`1.GetHashCode(`0)">
      <summary v="lh0fV" i="0">
매개 변수의 해시 값 계산
</summary>
      <param name="parameter" v="3HK7tg" i="0">매개 변수</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCode`1.HashCodeEquals(`0,`0)">
      <summary v="277aqd" i="0">
두 매개 변수 값의 해시가 같은지 계산
</summary>
      <param name="parameter1" v="30MREE" i="0">매개 변수 1</param>
      <param name="parameter2" v="YZiuF" i="0">매개 변수 2</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeExtensions.GetParametersHashCode``1(``0)">
      <summary v="4PHukz" i="0">
모든 매개 변수에 대한 해시 코드 계산
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <param name="component" v="4TC8iJ" i="0">구성 요소</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeProvider.Create(System.Type)">
      <summary v="4SPSAV" i="0">
매개 변수에 적합한 해시 공급자 만들기
</summary>
      <param name="parameterType" v="4I5cph" i="0">매개 변수 유형</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeProvider.GetHashCode(System.Object)">
      <summary v="4Vme4X" i="0">
매개 변수 값의 해시 값을 가져옵니다.
</summary>
      <param name="parameter" v="4I5cph" i="0">매개 변수 유형</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.#ctor(System.Reflection.PropertyInfo)">
      <summary v="24e72M" i="0">
구성 요소에 대한 매개 변수 설명자
</summary>
      <param name="property" v="33iWJQ" i="0">性</param>
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.CreateGetFunc(System.Reflection.PropertyInfo)">
      <summary v="2h7DUq" i="0">
부동산에 대한 위임 만들기
</summary>
      <param name="property" v="2UyZk2" i="0">재산</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.GetValueHashCode(`0)">
      <summary v="13vswS" i="0">
매개 변수 값의 해시를 반환
</summary>
      <param name="component" v="1I629k" i="0">
      </param>
      <exception cref="T:System.NotSupportedException" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.IsEventCallBack(System.Reflection.PropertyInfo)">
      <summary v="4WeCE2" i="0">
EventCallback 유형인지 확인
</summary>
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.Formatter.ToPercentWithoutBlank(System.Double)">
      <summary v="8T4Rw" i="0">
WASM 모드에서 백분율로 이중 숫자를 포맷 할 때 숫자와 % 사이에 공백이 있습니다. '35.00%'
빈 공간을 피하기 위해이 방법을 사용하십시오.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.Formatter`1.ParseSpanTimeFormatString(System.String)">
      <summary v="2DFOjP" i="0">
형식 문자열에서 다른 문자를 구문 분석합니다.
</summary>
      <remarks>refer to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-timespan-format-strings#other-characters</remarks>
      <param name="format" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet(System.Object,System.String)">
      <summary v="3qsIng" i="0">
경로별로 회원 값 얻기
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet``1(System.Object,System.String)">
      <summary v="3qsIng" i="0">
경로별로 회원 값 얻기
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet``2(``0,System.String)">
      <summary v="3qsIng" i="0">
경로별로 회원 값 얻기
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault(System.Object,System.String)">
      <summary v="4a1HWG" i="0">
경로별로 nullable 멤버 값을 가져 오면 모든 예외를 포착하고 null을 반환합니다.
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault``1(System.Object,System.String)">
      <summary v="4a1HWG" i="0">
경로별로 nullable 멤버 값을 가져 오면 모든 예외를 포착하고 null을 반환합니다.
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault``2(``0,System.String)">
      <summary v="4a1HWG" i="0">
경로별로 nullable 멤버 값을 가져 오면 모든 예외를 포착하고 null을 반환합니다.
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet(System.Object,System.String,System.Object)">
      <summary v="3EPTh0" i="0">
경로별로 멤버 값 설정
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet``1(System.Object,System.String,``0)">
      <summary v="3EPTh0" i="0">
경로별로 멤버 값 설정
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet``2(``0,System.String,``1)">
      <summary v="3EPTh0" i="0">
경로별로 멤버 값 설정
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <typeparam name="TITem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="IEM4X" i="0">
Get value deleget, 대의원의 유형은과:<br />
'Func&lt;TItem, TValue&gt;':= Typeof (TItem),= Typeof (TValue),= False.<br />
'Func&lt;object, TValue&gt;':= Typeof (객체),= Typeof (TValue),= False.<br />
'Func&lt;object, object&gt;':= Typeof (객체),= Typeof (객체),= False.<br />
'Func&lt;TItem, TValue?&gt;':= Typeof (TItem),= Typeof (TValue),= True.<br />
'Func&lt;object, TValue?&gt;':= Typeof (객체),= Typeof (TValue),= True.<br />
'Func&lt;object, object?&gt;':= Typeof (객체),= Typeof (객체),= True.<br /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="243k0x" i="0">액세스 객체의 유형</param>
      <param name="path" v="31OaeH" i="0">문자열 경로</param>
      <param name="paramType" v="1lMs0o" i="0">항목을 객체로 전달하려면 true로 설정하십시오.</param>
      <param name="valueType" v="RS5c9" i="0">값을 객체로 가져 오려면 true로 설정하십시오.</param>
      <param name="checkNull" v="3hhVUM" i="0">True이면 대의원은 경로가 null이 아닌 것을 확인하고 값 또는 기본값을 반환합니다. 반환 값의 유형이 ValueType 인 경우 대의원은 Nullable&lt;T&gt; 를 반환합니다.
False 인 경우 대의원은 null이 아닌 경로를 확인하지 않으므로 경로에 null 값이 포함되어 있거나 키가 발견되지 않으면 예외가 발생합니다.</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate(System.String,System.Type)">
      <summary v="2EGHXe" i="0">
가치 대의원 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate``1(System.String,System.Type)">
      <summary v="2EGHXe" i="0">
가치 대의원 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate``2(System.String)">
      <summary v="2EGHXe" i="0">
가치 대의원 받기
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault(System.String,System.Type)">
      <summary v="3V8rsK" i="0">
Nullable 가치 위임 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault``1(System.String,System.Type)">
      <summary v="3V8rsK" i="0">
Nullable 가치 위임 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault``2(System.String)">
      <summary v="3V8rsK" i="0">
Nullable 가치 위임 받기
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetExpression(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="4XJufI" i="0">
Get value 표현식 얻기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="paramType" v="0000" i="0" />
      <param name="valueType" v="0000" i="0" />
      <param name="checkNull" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="TEvn8" i="0">
Get value 람다 표현식을 얻고, 람다 표현식의 유형은과:<br />
'표현 &lt;Func&lt;TItem, TValue&gt;&gt;':= Typeof (TItem),= Typeof (TValue),= False.<br />
'표현 &lt;Func&lt;object, TValue&gt;&gt;':= Typeof (객체),= Typeof (TValue),= False.<br />
'표현 &lt;Func&lt;object, object&gt;&gt;':= Typeof (객체),= Typeof (객체),= False.<br />
'표현 &lt;Func&lt;TItem, TValue ?&gt;&gt;':= Typeof (TItem),= Typeof (TValue),= True.<br />
'표현 &lt;Func&lt;object, TValue ?&gt;&gt;':= Typeof (객체),= Typeof (TValue),= True.<br />
'표현 &lt;Func&lt;object, object ?&gt;&gt;':= Typeof (객체),= Typeof (객체),= True.<br /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="243k0x" i="0">액세스 객체의 유형</param>
      <param name="path" v="31OaeH" i="0">문자열 경로</param>
      <param name="paramType" v="1lMs0o" i="0">항목을 객체로 전달하려면 true로 설정하십시오.</param>
      <param name="valueType" v="RS5c9" i="0">값을 객체로 가져 오려면 true로 설정하십시오.</param>
      <param name="checkNull" v="3hhVUM" i="0">True이면 대의원은 경로가 null이 아닌 것을 확인하고 값 또는 기본값을 반환합니다. 반환 값의 유형이 ValueType 인 경우 대의원은 Nullable&lt;T&gt; 를 반환합니다.
False 인 경우 대의원은 null이 아닌 경로를 확인하지 않으므로 경로에 null 값이 포함되어 있거나 키가 발견되지 않으면 예외가 발생합니다.</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda(System.String,System.Type)">
      <summary v="l9gOr" i="0">
Get value 람다 표현 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda``1(System.String,System.Type)">
      <summary v="l9gOr" i="0">
Get value 람다 표현 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda``2(System.String)">
      <summary v="l9gOr" i="0">
Get value 람다 표현 받기
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault(System.String,System.Type)">
      <summary v="5YTrN" i="0">
Nullable 값 람다 표현 얻기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault``1(System.String,System.Type)">
      <summary v="5YTrN" i="0">
Nullable 값 람다 표현 얻기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault``2(System.String)">
      <summary v="5YTrN" i="0">
Nullable 값 람다 표현 얻기
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate(System.String,System.Type,System.Type,System.Type)">
      <summary v="247ukh" i="0">
설정 값 대의원 받기, 대리인의 유형은과:<br />
'액션 &lt;TItem, TValue&gt;':= Typeof (TItem),= Typeof (TValue).<br />
'동작 &lt;object, TValue&gt;':= Typeof (객체),= Typeof (TValue).<br />
'동작 &lt;object, object&gt;':= Typeof (객체),= Typeof (객체).<br /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="3KAWC" i="0">항목의 유형</param>
      <param name="path" v="1tDgZj" i="0">멤버 경로 문자열</param>
      <param name="paramType" v="3EPEMR" i="0">들어오는 객체의 유형</param>
      <param name="valueType" v="4S22WK" i="0">할당 객체의 유형</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate(System.String,System.Type)">
      <summary v="1tIQdL" i="0">
설정 값 대의원 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate``1(System.String,System.Type)">
      <summary v="1tIQdL" i="0">
설정 값 대의원 받기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate``2(System.String)">
      <summary v="1tIQdL" i="0">
설정 값 대의원 받기
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetExpression(System.String,System.Type,System.Type,System.Type)">
      <summary v="2YPZv4" i="0">
설정 값 표현식 가져 오기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="paramType" v="0000" i="0" />
      <param name="valueType" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda(System.String,System.Type,System.Type,System.Type)">
      <summary v="4MOdQj" i="0">
설정 값 람다 식을 가져옵니다, 람다 식의 유형은과:<br />
'표현 &lt;액션 &lt;TTem, TValue&gt;&gt;':= Typeof (TItem),= Typeof (TValue).<br />
'표현 &lt;동작 &lt;객체, TValue&gt;&gt;':= Typeof (객체),= Typeof (TValue).<br />
'표현 &lt;동작 &lt;object, object&gt;&gt;':= Typeof (객체),= Typeof (객체).<br /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="3KAWC" i="0">항목의 유형</param>
      <param name="path" v="1tDgZj" i="0">멤버 경로 문자열</param>
      <param name="paramType" v="3EPEMR" i="0">들어오는 객체의 유형</param>
      <param name="valueType" v="4S22WK" i="0">할당 객체의 유형</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda(System.String,System.Type)">
      <summary v="132T86" i="0">
설정 값 람다 표현식 가져 오기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda``1(System.String,System.Type)">
      <summary v="132T86" i="0">
설정 값 람다 표현식 가져 오기
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda``2(System.String)">
      <summary v="132T86" i="0">
설정 값 람다 표현식 가져 오기
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ClassGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="3kkUvI" i="0">
C. 소품
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ClassGetPropertyOrNull(System.Linq.Expressions.Expression,System.String)">
      <summary v="1RqOfF" i="0">
C?.Prop
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.GetRootParameterExpression(System.Linq.Expressions.Expression)">
      <summary v="2GqtB8" i="0">
표현식은 다음과 같아야합니다: ParameterExpression-&gt;MemberExpression1-&gt;MemberExpression2 ..,
'Expression' 에 대한 루트가 ParameterExpression이 아닌 경우 null을 반환합니다.
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsClass(System.Linq.Expressions.Expression)">
      <summary v="1fYDYr" i="0">
표현식인지 확인하십시오. 유형이 클래스인지, 그렇지 않으면 던지기 및 예외
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsNullableTypeOrThrow(System.Linq.Expressions.Expression)">
      <summary v="4ElDLn" i="0">
표현식인지 확인하십시오. 유형이 Nullable&lt;T&gt;, 그렇지 않으면 던져 및 예외
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsValueType(System.Linq.Expressions.Expression)">
      <summary v="Ty4KO" i="0">
표현식인지 확인하십시오. 유형이 ValueType이고 Nullable&lt;T&gt; 가 아닙니다. 그렇지 않으면 던지기 및 예외
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="2TjE8o" i="0">
NV!.Value.Prop, 아마도 가치가없는 InvalidOperation예외
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetPropOrNull(System.Linq.Expressions.Expression,System.String)">
      <summary v="1x7cZa" i="0">
NV?.Value.Prop
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetValue(System.Linq.Expressions.Expression)">
      <summary v="1rT0TK" i="0">
NV!. 값, 어쩌면 가치가없는 InvalidOperation예외
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetValueOrNull(System.Linq.Expressions.Expression)">
      <summary v="373AOg" i="0">
NV?. 가치
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ParseIndexAccess(System.String)">
      <summary v="1CTdtF" i="0">
속성 문자열에 인덱스 작업이 있는지 확인하고 표현식으로 구문 분석
</summary>
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.TryConvertToNullable(System.Linq.Expressions.Expression)">
      <summary v="1TR7Jh" i="0">
표현식 유형을 Nullable 유형으로 변환 해보십시오. Nullable ValueType만 변환 할 수 있습니다.
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ValueTypeGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="4BMgnr" i="0">
V.Prop
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddDaysSafely(System.DateTime,System.Int32)">
      <summary v="tyQe5" i="0">
용사 行 AddDaysend, 不会 System. ArgumentOutOfrangeExceptionistant
함수에 의한 AddDays는 결코 시스템을 던지지 않습니다. ArgumentOutOfRangeException
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddMonthsSafely(System.DateTime,System.Int32)">
      <summary v="2eg2rN" i="0">
용사 行 AddMonthsend, 不会 System. ArgumentOutOfrangeExceptionistant
함수에 의한 AddMonths는 결코 시스템을 던지지 않습니다. ArgumentOutOfRangeException
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddYearsSafely(System.DateTime,System.Int32)">
      <summary v="31u7rC" i="0">
용사 行 AddYearsend, 不会 System. ArgumentOutOfrangeExceptionistant
함수에 의한 AddYears는 결코 시스템을 던지지 않을 것입니다. ArgumentOutOfRangeException
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfDay(System.DateTime)">
      <summary v="rYvKV" i="0">
예를 들어, currentDateTime이 2020-01-04 05:34:55 일 때:
다음 날짜는 2021-01-05 00:00:00, 다음날 시작일입니다.
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfDecade(System.DateTime)">
      <summary v="1kzAtL" i="0">
예를 들어,
CurrentDateTime이 2020-01-04 05:34:55 일 때:
다음 날짜는 2030-01-01 00:00:00, 다음 10 년의 시작일입니다.

CurrentDateTime이 2023-01-04 05:34:55 일 때:
다음 날짜는 2030-01-01 00:00:00, 다음 10 년의 시작일입니다.

CurrentDateTime이 2018-01-04 05:34:55 일 때:
다음 날짜는 2020-01-01 00:00:00, 다음 10 년의 시작 날짜입니다.
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfMonth(System.DateTime)">
      <summary v="1z1IDD" i="0">
예를 들어, currentDateTime이 2020-01-04 05:34:55 일 때:
다음 날짜는 2020-02-01 00:00:00, 다음 달의 시작 날짜입니다.
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfQuarter(System.DateTime)">
      <summary v="3VCB6e" i="0">
예를 들어, currentDateTime이 2020-01-04 05:34:55 일 때:
다음 날짜는 2020-04-01 00:00:00, 2020 년 다음 분기의 시작일입니다.
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfYear(System.DateTime)">
      <summary v="33tvDc" i="0">
예를 들어, currentDateTime이 2020-01-04 05:34:55 일 때:
다음 날짜는 2021-01-01 00:00:00 입니다. 내년의 시작일입니다.
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePicker`1.GetIndexValue(System.Int32)">
      <summary v="29wd8z" i="0">
피커의 가치를 얻으십시오
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePicker`1.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="15XtPd" i="0">
키보드 키가 입력 요소 내에서 더 이상 누르지 않으면 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
      <param name="e" v="19uVqq" i="0">입력 요소 내부에서 누른 키 (조합) 를 포함합니다.</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ChangePickerValue(System.DateTime,System.Nullable{System.Int32})">
      <summary v="4PBJQR" i="0">
선택기에 표시되는 날짜를 변경합니다.
</summary>
      <param name="date" v="2tF8nX" i="0">새로운 날짜를 저장할 수 있습니다.</param>
      <param name="index" v="4P8AAT" i="0">입력 상자의 인덱스, 여기서 0 = inputStart 및 1 = inputEnd (RangePicker 만 해당)</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ChangeValue(System.DateTime,System.Int32,System.Boolean)">
      <summary v="2WHZEZ" i="0">
수자원 개량
</summary>
      <param name="value" v="0000" i="0" />
      <param name="index" v="0000" i="0" />
      <param name="closeDropdown" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetIndexPickerValue(System.Int32)">
      <summary v="wsrBf" i="0">
피커 인덱스로 피커 값을 가져옵니다. 인덱스는 피커 패널을 나타냅니다.
텍스트를 입력하지 마십시오. RangePicker 2 입력은 2 개의 패널을 생성합니다.
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DayOfWeekHelper.GetDiffForDayOfWeek(System.DayOfWeek)">
      <summary v="2AmivX" i="0">
정확한 요일을 얻기 위해 시작 날짜에 추가해야하는 일수를 반환합니다.
</summary>
      <param name="firstDayOfWeek" v="2NXrGl" i="0">현재 로케일에 정의 된주의 첫 번째 날.</param>
      <returns v="4ZXel1" i="0">일의 위험.</returns>
    </member>
    <member name="M:AntDesign.Dialog.AppendToContainer">
      <summary v="rD7kr" i="0">
몸에 추가
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.CleanShowAnimationAsync">
      <summary v="2e9XUW" i="0">
클리어 개미 모델은 사용자 선택을 비활성화하는 클래스를 입력합니다.
자세한 내용은 스타일/믹스 인/modal-mask.less
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.GetStyle">
      <summary v="449EWV" i="0">
개미 모달 스타일
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.Hide">
      <summary v="B1FcK" i="0">
애니메이션을 통해 대화 상자 숨기기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.IsShow">
      <summary v="4TzPoA" i="0">
대화 상자가 표시되는지 확인
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="isFirst" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnCloserClick">
      <summary v="wH6uH" i="0">
클로저 (X) 클릭 이벤트
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="1oMDd3" i="0">
탭 및 ESC 주요 이벤트 듣기
</summary>
      <param name="e" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnMaxBtnClick">
      <summary v="wH6uH" i="0">
클로저 (X) 클릭 이벤트
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnParametersSetAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.Show">
      <summary v="3EGs1m" i="0">
애니메이션을 통한 대화 상자 표시
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.TryResetModalStyle">
      <summary v="1O67Zt" i="0">
모달이 드래그 가능한 경우 첫 번째 쇼와 비슷한 위치 스타일을 재설정하십시오.
</summary>
    </member>
    <member name="M:AntDesign.DialogWrapper.DestroyAsync">
      <summary v="1InHPh" i="0">
DOM 트리에서 구성 요소 파괴
</summary>
    </member>
    <member name="M:AntDesign.DialogWrapper.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DialogWrapper.OnParametersSetAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.CloseClick">
      <summary v="41qy8P" i="0">
Closer를 클릭 할 때 트리거
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.HandleClose(System.Boolean)">
      <summary v="ydVZ5" i="0">
마감 후 청소
</summary>
      <param name="isChangeByParamater" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.MaskClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="3dYfV8" i="0">
마스크를 클릭 할 때 트리거
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnClose(AntDesign.DrawerRef)">
      <summary v="3VEoDU" i="0">
서랍 닫기
</summary>
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnCreate(AntDesign.DrawerRef)">
      <summary v="1IAQRb" i="0">
서랍 만들기 및 열기
</summary>
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnUpdateEvent(AntDesign.DrawerRef)">
      <summary v="3xcPb5" i="0">
서랍 업데이트
</summary>
      <param name="drawerRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.CloseAsync">
      <summary v="w8anv" i="0">
닫기 대화 확인
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.OpenAsync">
      <summary v="4ME4b" i="0">
열기 확인 대화 상자
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.UpdateConfigAsync">
      <summary v="3cDh69" i="0">
업데이트 Visible = true 대화 구성 확인
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.UpdateConfigAsync(AntDesign.DrawerOptions)">
      <summary v="1aknzh" i="0">
업데이트 새 확인 옵션으로 대화 상자 구성 확인
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef`1.CloseAsync(`0)">
      <summary v="1fh4wR" i="0">

</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerService.CreateAsync(AntDesign.DrawerOptions)">
      <summary v="4COGsK" i="0">
결과없이 간단한 서랍 만들기 및 열기
</summary>
      <param name="options" v="4Co7ip" i="0">서랍 옵션</param>
      <returns v="4dM9xE" i="0">서랍의 참조</returns>
    </member>
    <member name="M:AntDesign.DrawerService.CreateAsync``3(AntDesign.DrawerOptions,``1)">
      <summary v="3xw7KV" i="0">
템플릿으로 서랍 만들기 및 열기
</summary>
      <typeparam name="TComponent" v="zYcLf" i="0">Drawer템플릿 구현의 유형</typeparam>
      <typeparam name="TComponentOptions" v="70Cl2" i="0">
      </typeparam>
      <typeparam name="TResult" v="22qdCS" i="0">반환 값의 유형</typeparam>
      <param name="config" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <returns v="4dM9xE" i="0">서랍의 참조</returns>
    </member>
    <member name="M:AntDesign.DrawerService.CreateDialogAsync``3(AntDesign.DrawerOptions,``1)">
      <summary v="3IA0Sy" i="0">
서랍 만들기 및 열기
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerService.UpdateAsync(AntDesign.DrawerRef)">
      <summary v="1KxX7p" i="0">
서랍 업데이트
</summary>
      <param name="drawerRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dropdown.OnClickDiv(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="uNBE4" i="0">
트리거를 클릭하십시오.
</summary>
      <param name="args" v="2rN4Oq" i="0">MouseEventArgs</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DropdownButton.OnAfterRenderAsync(System.Boolean)">
      <summary v="li9fM" i="0">
포즈 오버레이 트리거를 포장 요소에 부착
오른쪽 버튼. 오른쪽 버튼을 포장해야합니다.
오버레이가 첫 아이를 찾고 있기 때문에
오버레이 트리거의 요소는 오버레이 위치를 계산합니다.
오른쪽 버튼이 트리거 인 경우 첫 번째 자식
아이콘/줄임표 일 것이고 오버레이는
너무 높게 렌더링되었습니다.
</summary>
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.EnumerableExtensions.AddIf``1(System.Collections.Generic.IList{``0},System.Boolean,``0)">
      <summary v="39Zky1" i="0">
조건이 true 일 때 항목에 항목 추가
</summary>
      <typeparam name="T" v="0000" i="0" />
      <param name="items" v="0000" i="0" />
      <param name="condition" v="0000" i="0" />
      <param name="item" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="ne9hr" i="0">
취소 버튼이 트리거되면 다시 전화하십시오.
재질,,
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.CloseFeedbackAsync">
      <summary v="MRcJX" i="0">
사용자가 버튼을 통해 템플릿을 닫을 수 있도록

</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2P1DPD" i="0">
OK 버튼이 트리거되면 다시 전화하여 닫는 것을 취소하는 데 사용할 수 있습니다.
재질OK,,
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OnFeedbackCancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="ne9hr" i="0">
취소 버튼이 트리거되면 다시 전화하십시오.
재질,,
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OnFeedbackOkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2P1DPD" i="0">
OK 버튼이 트리거되면 다시 전화하여 닫는 것을 취소하는 데 사용할 수 있습니다.
재질OK,,
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.CloseAsync">
      <summary v="2ZRDin" i="0">
피드백 구성 요소를 닫고 OkAsync 또는 OkCancel을 트리거하지 않습니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.OpenAsync">
      <summary v="17W1IJ" i="0">
그냥 오픈 가까운 피드백 구성 요소
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.UpdateConfigAsync">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.FeedbackRefWithOkCancelBase.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2goXMY" i="0">
취소 버튼 클릭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefWithOkCancelBase.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2chA2T" i="0">
확인 버튼 클릭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FormItem.GetRulesFromAttributes">
      <summary v="3N16ij" i="0">
Locale 검증 메시지 템플릿 사용에 대한 FormValidationRule의 tansform 속성
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.HtmlRenderer.HandleException(System.Exception)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.HtmlRenderer.UpdateDisplayAsync(Microsoft.AspNetCore.Components.RenderTree.RenderBatch@)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.IFeedbackRef.CloseAsync">
      <summary v="2ZRDin" i="0">
피드백 구성 요소를 닫고 OkAsync 또는 OkCancel을 트리거하지 않습니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IFeedbackRef.OpenAsync">
      <summary v="21ZJm2" i="0">
구성 요소 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IFeedbackRef.UpdateConfigAsync">
      <summary v="YyiiH" i="0">
구성 요소 업데이트
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IForm.Reset">
      <summary v="8JhiC" i="0">
모든 필드의 값 및 유효성 검사 메시지를 재설정합니다.
</summary>
    </member>
    <member name="M:AntDesign.IForm.SetValidationMessages(System.String,System.String[])">
      <summary v="1QWtyN" i="0">
특정 필드에 대한 유효성 검사 메시지를 설정합니다.
</summary>
      <param name="field" v="0000" i="0" />
      <param name="errorMessages" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IForm.Submit">
      <summary v="1o8vxt" i="0">
모든 필드가 유효한 동안 트리거 'OnFinish', 그렇지 않으면 'OnFinishFailed' 트리거합니다.
</summary>
    </member>
    <member name="M:AntDesign.IForm.Validate">
      <summary v="1O3Irc" i="0">
모든 필드를 검증합니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IModalTemplate.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="HOT19" i="0">
취소 버튼이 트리거되면 다시 전화

</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="1st9il" i="0">
OK 버튼이 트리거되면 다시 전화
정정유,,
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OnFeedbackCancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="HOT19" i="0">
취소 버튼이 트리거되면 다시 전화

</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OnFeedbackOkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="11XfcB" i="0">
OK 버튼이 트리거되면 다시 전화
정정유,
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Input`1.Blur">
      <summary v="2TivqD" i="0">
입력 요소에서 포커스를 제거합니다.
</summary>
    </member>
    <member name="M:AntDesign.Input`1.Focus(AntDesign.FocusBehavior,System.Boolean)">
      <summary v="2TJZHv" i="0">
선택적 동작을 갖는 입력 컴포넌트에 대한 초점 동작.
</summary>
      <param name="behavior" v="3ckSUH" i="0">Enum: AntDesign.FocusBehavior</param>
      <param name="preventScroll" v="mJzFU" i="0">True 일 때, 초점을 수신하는 요소는 스크롤되지 않습니다.</param>
    </member>
    <member name="M:AntDesign.Input`1.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <summary v="2rohGm" i="0">
사용자가 콘텐츠를 추가/제거 할 때 호출
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.InputNumber`1.TryParseValueFromString(System.String,`0@,System.String@)">
      <summary v="1YS4Nn" i="0">
입력 문자열이 유효하지 않은 경우 항상 true를 반환, 결과 = 기본값, 입력 문자열이 null 또는 비어 있는 경우, 결과 = 기본값
</summary>
      <param name="value" v="0000" i="0" />
      <param name="result" v="0000" i="0" />
      <param name="validationErrorMessage" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.InputPassword.Focus(AntDesign.FocusBehavior,System.Boolean)">
      <summary v="BBLs9" i="0">
선택적 동작이있는 InputPassword 구성 요소에 대한 초점 동작.
Wasm에 필요한 특별한 행동.
</summary>
      <param name="behavior" v="3ckSUH" i="0">Enum: AntDesign.FocusBehavior</param>
      <param name="preventScroll" v="mJzFU" i="0">True 일 때, 초점을 수신하는 요소는 스크롤되지 않습니다.</param>
    </member>
    <member name="M:AntDesign.Internal.DateTimeInputMaskConverter.Convert(System.String,System.String)">
      <summary v="1qVqcd" i="0">
문자열 값을 마스크로 변환
</summary>
      <param name="value" v="0000" i="0" />
      <param name="mask" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.IsHiding">
      <summary v="4zx3a" i="0">
오버레이가 완료되면 숨기기, IsPopup은 true를 반환합니다.
오버레이가 숨어있을 때 (숨기기 애니메이션 재생), IsPopup은 false, IsHiding return true.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.UpdateChildState(AntDesign.Internal.Overlay,System.Boolean)">
      <summary v="4HGtC6" i="0">
어떤 아이 오버레이 쇼 또는 숨기기 경우 설정
아이가 보이면 오버레이가 숨지 않을 것입니다.
</summary>
      <param name="child" v="0000" i="0" />
      <param name="isChildOverlayShow" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.WaitFor(System.Func{System.Boolean},System.Int32,System.Int32)">
      <summary v="WmAnP" i="0">
술어가 참이 될 때까지 또는 주어진 밀리 초마다 수표 술어를 조사합니다.
조사 횟수가 부족합니다.
</summary>
      <param name="check" v="DTHnp" i="0">WaitTimeInMilisecondsPerProbing 후 매번 실행되는 술어가 전달됩니다.</param>
      <param name="probings" v="3vA775" i="0">최대 조사 횟수. 이 번호에 도달하면 방법이 종료됩니다.</param>
      <param name="waitTimeInMilisecondsPerProbing" v="3rKbiP" i="0">각 프로빙 사이에 얼마나 오래 기다립니다.</param>
      <returns v="VAeqQ" i="0">작업</returns>
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.Close">
      <summary v="2KR58q" i="0">
오버레이를 숨 깁니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.IsOverlayShow">
      <summary v="2Ggocw" i="0">
오버레이가 현재 보이는 상태인지 확인합니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.OnClickDiv(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="uNBE4" i="0">
트리거를 클릭하십시오.
</summary>
      <param name="args" v="2rN4Oq" i="0">MouseEventArgs</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.OnMouseUp(System.Text.Json.JsonElement)">
      <summary v="4XMUqd" i="0">
문서 마우스 업
</summary>
      <param name="element" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.SetVisible(System.Boolean)">
      <summary v="3vKfxn" i="0">
토글 오버레이 가시성.
</summary>
      <param name="visible" v="P3osx" i="0">Boolean: 가시성 true/false</param>
    </member>
    <member name="M:AntDesign.IOkCancelRef.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2qxEww" i="0">
트리거 취소 버튼 클릭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="1AzDVn" i="0">
트리거 Ok 버튼 클릭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef`1.CancelAsync(`0)">
      <summary v="2qxEww" i="0">
트리거 취소 버튼 클릭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef`1.OkAsync(`0)">
      <summary v="1AzDVn" i="0">
트리거 Ok 버튼 클릭
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.MenuHelper.EqualsHrefExactlyOrIfTrailingSlashAdded(System.String,System.String)">
      <summary v="45QEiW" i="0">
평등을 위해 두 개의 URI를 비교하여 선택적 후행 슬래시를 설명합니다.
</summary>
      <param name="currentUriAbsolute" v="2FTHGm" i="0">현재 위치의 절대 URI입니다.</param>
      <param name="hrefAbsolute" v="2oqpNf" i="0">비교할 절대 URI입니다.</param>
      <returns v="0721d" i="0">URI가 같거나 현재 URI에 후행 슬래시를 추가하면 URI가 동일하면 마찬가지입니다. 그렇지 않으면 false입니다.</returns>
    </member>
    <member name="M:AntDesign.MenuHelper.IsStrictlyPrefixWithSeparator(System.String,System.String)">
      <summary v="21TnT1" i="0">
문자열 값이 엄격 하 게 다른 문자열의 접두사 인지 여부를 결정 하 고 접두사 다음 구분 기호.
</summary>
      <param name="value" v="4Mj5B9" i="0">확인할 문자열 값입니다.</param>
      <param name="prefix" v="3FK6u0" i="0">확인할 접두사입니다.</param>
      <returns v="kserR" i="0">값이 접두사와 구분 기호로 시작하는 경우 true; 그렇지 않으면 false.</returns>
    </member>
    <member name="M:AntDesign.MenuHelper.ShouldMatch(Microsoft.AspNetCore.Components.Routing.NavLinkMatch,System.String,System.String)">
      <summary v="2Yuawe" i="0">
주어진 일치 기준에 따라 현재 URI가 지정된 URI와 일치하는지 여부를 결정합니다.
</summary>
      <param name="match" v="1c2o8O" i="0">일치 기준 (정확한 또는 접두사).</param>
      <param name="currentUriAbsolute" v="2FTHGm" i="0">현재 위치의 절대 URI입니다.</param>
      <param name="hrefAbsolute" v="21c5Xn" i="0">일치하는 절대 URI입니다.</param>
      <returns v="eIoT1" i="0">URI가 기준에 따라 일치하는 경우 true; 그렇지 않으면 false.</returns>
    </member>
    <member name="M:AntDesign.MenuLink.Dispose(System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.MenuLink.OnInitialized">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.MenuLink.OnParametersSet">
      <inheritdoc />
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalClosingEventArgs.Reject">
      <summary v="1weYjX" i="0">
모달 폐쇄를 거부하십시오.
</summary>
    </member>
    <member name="M:AntDesign.ModalRef.CloseAsync">
      <summary v="1C3EuD" i="0">
모달 대화 상자 닫기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.OpenAsync">
      <summary v="4ej4FH" i="0">
모달 대화 상자 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.SetConfirmLoading(System.Boolean)">
      <summary v="3rjfxG" i="0">
확인 버튼의 로딩 상태 설정
</summary>
      <param name="loading" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.UpdateConfigAsync">
      <summary v="3HSUvR" i="0">
모달 업데이트
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef`1.CancelAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalRef`1.OkAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalService.CheckConfirmOptionsIsNull(AntDesign.ConfirmOptions)">
      <summary v="ceR4u" i="0">
확인 옵션이 null 인지 확인
</summary>
      <param name="options" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CloseModalAsync(AntDesign.ModalRef)">
      <summary v="32KVPZ" i="0">
모달 대화 상자 닫기
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Confirm(AntDesign.ConfirmOptions)">
      <summary v="446RlY" i="0">
확인 취소 대화 상자 만들기 및 열기
</summary>
      <param name="props" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.ConfirmAsync(AntDesign.ConfirmOptions)">
      <summary v="4GLQTQ" i="0">
OK-Cancel 확인 대화 상자를 만들고 엽니다.
OK 버튼을 클릭했는지 여부를 나타내는 bool 값을 반환
</summary>
      <param name="props" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateAsync(AntDesign.ConfirmOptions)">
      <summary v="mEobg" i="0">
OK 만들기 및 열기-비동기 확인 취소
</summary>
      <param name="config" v="VWReJ" i="0">옵션</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateAsync``3(AntDesign.ConfirmOptions,``1)">
      <summary v="ozXdH" i="0">
템플릿 만들기 및 열기 대화 상자 확인
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateConfirmAsync(AntDesign.ConfirmOptions)">
      <summary v="mEobg" i="0">
OK 만들기 및 열기-비동기 확인 취소
</summary>
      <param name="config" v="VWReJ" i="0">옵션</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateConfirmAsync``3(AntDesign.ConfirmOptions,``1)">
      <summary v="ozXdH" i="0">
템플릿 만들기 및 열기 대화 상자 확인
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
모달 만들기 및 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``1(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
모달 만들기 및 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``2(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
템플릿으로 모달 만들기 및 열기
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <param name="options" v="tybuH" i="0">모달 옵션</param>
      <param name="componentOptions" v="3DQjZ" i="0">템플릿 compoennt 옵션 설정</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``3(AntDesign.ModalOptions,``1)">
      <summary v="BZBpW" i="0">
템플릿 구성 요소로 모달 만들기 및 열기
</summary>
      <typeparam name="TComponent" v="32TQtz" i="0">템플릿 구성 요소의 형식입니다.</typeparam>
      <typeparam name="TComponentOptions" v="1r24BW" i="0">템플릿 구성 요소 옵션의 형식입니다.</typeparam>
      <typeparam name="TResult" v="3XbXsR" i="0">템플릿 구성 요소에서 반환 된 결과입니다.</typeparam>
      <param name="options" v="tybuH" i="0">모달 옵션</param>
      <param name="componentOptions" v="3DQjZ" i="0">템플릿 compoennt 옵션 설정</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
모달 만들기 및 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``1(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
모달 만들기 및 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``2(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
템플릿으로 모달 만들기 및 열기
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``3(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
템플릿으로 모달 만들기 및 열기
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateOrOpenModalAsync(AntDesign.ModalRef)">
      <summary v="2bOTQb" i="0">
모달 대화 상자 만들기 또는 열기
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateOrOpenModalAsync``1(AntDesign.ModalRef{``0})">
      <summary v="2bOTQb" i="0">
모달 대화 상자 만들기 또는 열기
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Destroy(AntDesign.ConfirmRef)">
      <summary v="3tfjt5" i="0">
확인 대화 상자 닫기
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyAll">
      <summary v="1pE5wT" i="0">
모든 확인 대화 상자 닫기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyAllConfirmAsync">
      <summary v="1pE5wT" i="0">
모든 확인 대화 상자 닫기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="2arRzl" i="0">
확인 대화 상자 닫기
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Error(AntDesign.ConfirmOptions)">
      <summary v="2ux7xK" i="0">
오류 아이콘으로 확인 취소 대화 상자 만들기 및 열기
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.ErrorAsync(AntDesign.ConfirmOptions)">
      <summary v="2Qy7Ap" i="0">
오류 아이콘으로 OK-Cancel 확인 대화 상자를 만들고 엽니다.
OK 버튼을 클릭했는지 여부를 나타내는 bool 값을 반환
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Info(AntDesign.ConfirmOptions)">
      <summary v="2Ho26k" i="0">
정보 아이콘으로 확인 취소 대화 상자 만들기 및 열기
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.InfoAsync(AntDesign.ConfirmOptions)">
      <summary v="4m1YE" i="0">
정보 아이콘으로 OK-Cancel 확인 대화 상자를 만들고 엽니다.
OK 버튼을 클릭했는지 여부를 나타내는 bool 값을 반환
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.OpenConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="1l2VTY" i="0">
확인 대화 상자 열기
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Success(AntDesign.ConfirmOptions)">
      <summary v="33yL7U" i="0">
성공 아이콘으로 확인 취소 대화 상자 만들기 및 열기
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.SuccessAsync(AntDesign.ConfirmOptions)">
      <summary v="4blYzC" i="0">
성공 아이콘으로 OK-Cancel 확인 대화 상자를 만들고 엽니다.
OK 버튼을 클릭했는지 여부를 나타내는 bool 값을 반환
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.System#IDisposable#Dispose">
      <summary v="2VmIAJ" i="0">
인터페이스 구현 IDisposable
</summary>
    </member>
    <member name="M:AntDesign.ModalService.Update(AntDesign.ConfirmRef)">
      <summary v="1NFloI" i="0">
업데이트 Visible = true 확인
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.UpdateConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="1NFloI" i="0">
업데이트 Visible = true 확인
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Warning(AntDesign.ConfirmOptions)">
      <summary v="fbH97" i="0">
경고 아이콘을 사용하여 확인 취소 확인 대화 상자 만들기 및 열기
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.WarningAsync(AntDesign.ConfirmOptions)">
      <summary v="3rhIU9" i="0">
확인-경고 아이콘으로 확인 취소 대화 상자를 만들고 엽니다.
OK 버튼을 클릭했는지 여부를 나타내는 bool 값을 반환
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Notification.Config(AntDesign.NotificationGlobalConfig)">
      <summary v="1is6NV" i="0">
글로벌 config 수정
</summary>
      <param name="defaultConfig" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.CloseAsync">
      <summary v="4UcOnP" i="0">
알림 상자 닫기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.OpenAsync">
      <summary v="4SH2nV" i="0">
알림 상자 열기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync">
      <summary v="3tSEAT" i="0">
Config 속성을 수정 한 후 알림 상자를 업데이트하십시오.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment})">
      <summary v="1mHuoq" i="0">
알림 상자의 설명 및 메시지 업데이트
</summary>
      <param name="description" v="0000" i="0" />
      <param name="message" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment})">
      <summary v="2kVQOh" i="0">
알림 상자의 설명 업데이트
</summary>
      <param name="description" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Close(System.String)">
      <summary v="3jolhi" i="0">
키로 가까운 알림
</summary>
      <param name="key" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.CreateRefAsync(AntDesign.NotificationConfig)">
      <summary v="2Bc7tH" i="0">
NotificationRef를 열지 않고 만드십시오.
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Destroy">
      <summary v="39Brkl" i="0">
모든 알림 상자를 파괴
</summary>
    </member>
    <member name="M:AntDesign.NotificationService.Error(AntDesign.NotificationConfig)">
      <summary v="xrKET" i="0">
알림 유형을 사용하여 알림 상자를 엽니다. 오류 스타일
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Info(AntDesign.NotificationConfig)">
      <summary v="pEMCC" i="0">
NotificationType.Info 스타일로 알림 상자를 엽니다.
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Open(AntDesign.NotificationConfig)">
      <summary v="3MKyC" i="0">
알림 상자 열기
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Success(AntDesign.NotificationConfig)">
      <summary v="4DfMLQ" i="0">
알림 유형으로 알림 상자를 엽니 다. 성공 스타일
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.UpdateAsync(System.String,OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},System.Nullable{OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment}})">
      <summary v="3C21Nn" i="0">
존재 알림 상자 업데이트
</summary>
      <param name="key" v="0000" i="0" />
      <param name="description" v="0000" i="0" />
      <param name="message" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Warn(AntDesign.NotificationConfig)">
      <summary v="bXGWQ" i="0">
경고 방법과 동등하다
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Warning(AntDesign.NotificationConfig)">
      <summary v="2FtkJD" i="0">
알림 유형으로 알림 상자를 엽니 다. 경고 스타일
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Pagination.GetItemIcon(Microsoft.AspNetCore.Components.RenderFragment{AntDesign.PaginationItemRenderContext},System.String)">
      <summary v="yaMOW" i="0">
렌더링해야 하는 계산된 아이콘 노드입니다.
</summary>
      <param name="icon" v="0000" i="0" />
      <param name="label" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.RangePicker`1.GetIndexValue(System.Int32)">
      <summary v="3Nl0wm" i="0">
피커 인덱스로 값 얻기
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.RangePicker`1.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,System.Int32)">
      <summary v="15XtPd" i="0">
키보드 키가 입력 요소 내에서 더 이상 누르지 않으면 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
      <param name="e" v="19uVqq" i="0">입력 요소 내부에서 누른 키 (조합) 를 포함합니다.</param>
      <param name="index" v="3EB8uv" i="0">피커 인덱스 참조-시작 날짜는 0, 종료 날짜는 1</param>
    </member>
    <member name="M:AntDesign.RangePicker`1.OnValueChange(`0)">
      <summary v="3fp1oJ" i="0">
값의 변경을 처리합니다.
값이 변경되면 PickerValues는 새로운 값을 가리 킵니다.
또는 값이 전달되지 않은 경우 현재 날짜.
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseAll">
      <summary v="DxSPd" i="0">
닫히거나 핀이 없는 모든 페이지 닫기
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseCurrent">
      <summary v="4fGDon" i="0">
현재 페이지 닫기
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseOther(System.String)">
      <summary v="1AstJw" i="0">
지정된 키가있는 페이지를 제외한 모든 페이지 닫기
</summary>
      <param name="key" v="41HRQc" i="0">지정된 페이지의 키</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.ClosePage(System.String)">
      <summary v="2DgLqm" i="0">
지정된 키에 해당하는 페이지 닫기
</summary>
      <param name="key" v="41HRQc" i="0">지정된 페이지의 키</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CreateTab(System.String,Microsoft.AspNetCore.Components.RenderFragment)">
      <summary v="1ZV1GJ" i="0">
탐색없이 탭을 만들면 탭이 클릭 될 때까지 페이지가 실제로 렌더링되지 않습니다.
</summary>
      <param name="pageUrl" v="cpmkn" i="0">대상 페이지의 URL</param>
      <param name="titleTemplate" v="40GSf5" i="0">탭의 제목 표시</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CreateTab(System.String,System.String)">
      <summary v="1ZV1GJ" i="0">
탐색없이 탭을 만들면 탭이 클릭 될 때까지 페이지가 실제로 렌더링되지 않습니다.
</summary>
      <param name="pageUrl" v="cpmkn" i="0">대상 페이지의 URL</param>
      <param name="title" v="40GSf5" i="0">탭의 제목 표시</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.GetAllAssembly">
      <summary v="49IvX1" i="0">
비투기시유정집
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.ReloadPage">
      <summary v="3tT3nA" i="0">
현재 페이지 재로드
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.ReloadPage(System.String)">
      <summary v="OXxMk" i="0">
지정된 키에 해당하는 페이지 재로드
</summary>
      <param name="key" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.ScanReuseTabsPageAttribute">
      <summary v="XkbND" i="0">
Reuse TabsPageAttribute Special 性
</summary>
    </member>
    <member name="M:AntDesign.Select.Internal.SelectContent`2.GetFirstItemMaxWidth">
      <summary v="43hQcz" i="0">
모든 항목이 넘칠 수 있습니다. 첫 번째 항목의 경우
SelectContent 내부의 다른 요소 (접두사, 접미사, 명확한 btn 등)
기본 MaxWidth는 SelectContent가 성장하도록 강제합니다. MaxWidth 변경
넘쳐나는 항목이 한 줄에 들어갈 수 있습니다.
TODO: 상대 단위 사용
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.AllOptionsHidden">
      <summary v="40RjGr" i="0">
SelectOptions 목록의 모든 항목에 대해 IsHidden 매개 변수가 true로 설정된 경우 True를 반환합니다.
</summary>
      <returns v="2q84ZY" i="0">모든 항목이 IsHidden(true) 으로 설정된 경우 true</returns>
    </member>
    <member name="M:AntDesign.Select`2.AppendLabelValue(System.String)">
      <summary v="1bSAjX" i="0">
태그 모드에서 레이블 항목 추가
</summary>
      <param name="label" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.CreateDeleteSelectOptions">
      <summary v="44SoRK" i="0">
데이터 소스 변경 시 SelectOption 만들기 또는 삭제
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ElementScrollIntoViewAsync(Microsoft.AspNetCore.Components.ElementReference)">
      <summary v="wAgqW" i="0">
JavaScript를 통해 항목으로 스크롤합니다.
</summary>
      <param name="element" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.EvaluateValueChangedOutsideComponent(AntDesign.Select.Internal.SelectOptionItem{`0,`1},`0)">
      <summary v="4NsNUd" i="0">
Bind-값이 구성 요소 외부에서 변경되면 구성 요소
선택한 항목은 새로운 값에 따라 다시 선택해야합니다.
</summary>
      <param name="optionItem" v="lDKGf" i="0">선택한 옵션 항목입니다.</param>
      <param name="value" v="2kKYpM" i="0">선택한 옵션 항목의 값입니다.</param>
    </member>
    <member name="M:AntDesign.Select`2.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <summary v="4V1spf" i="0">
입력 요소의 값이 키보드로 변경된 경우 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
      <param name="e" v="1BvLkq" i="0">입력 요소의 값을 포함</param>
    </member>
    <member name="M:AntDesign.Select`2.OnKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="2Eypjm" i="0">
입력 요소 내에서 키를 누르면 EventCallback을 통해 메소드가 호출됩니다.
이 방법은 사용자가 TAB를 눌러 트로프 요소를 순환하는 경우 TAB 이벤트를 얻는 데 사용됩니다.
TAB가 수신되면, 오버레이는 닫히고 입력 요소는 흐려진다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.OnKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="15XtPd" i="0">
키보드 키가 입력 요소 내에서 더 이상 누르지 않으면 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
      <param name="e" v="19uVqq" i="0">입력 요소 내부에서 누른 키 (조합) 를 포함합니다.</param>
    </member>
    <member name="M:AntDesign.Select`2.OnRemoveSelectedAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4XvNPB" i="0">
사용자가 태그의 닫기 아이콘을 클릭하면 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ProcessSelectedSelectOptions">
      <summary v="4g8hNe" i="0">
ChildElement SelectOptions를 사용할 때만 사용됩니다.
Initalization 후에 항목을 실행하면이 프로세스를 실행합니다.
또한 선택된대로 표시되는 추가 됩니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.ResetValue">
      <summary v="cEne8" i="0">
양식 재설정 방법으로 호출
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ScrollToFirstSelectedItemAsync">
      <summary v="OQdQR" i="0">
선택한 첫 번째 항목을 검색하고 다른 모든 항목에 대해 IsActive를 False로 설정하고 JavaScript를 통해 scrollIntoView 함수를 호출합니다.
이 방법은 오버레이를 연 후 첫 번째 선택된 항목으로 스크롤하는 데 사용됩니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetClassMap">
      <summary v="RBCbP" i="0">
CSS 클래스를 설정하여 시각적 스타일을 변경합니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetDefaultActiveFirstItemAsync">
      <summary v="1b9LQT" i="0">
DefaultActiveFirstItem이 True인 경우, IsDisabled(True) 가 아닌 첫 번째 항목이 선택된대로 설정됩니다.
항목이 없으면 명확한 방법으로 돌아갑니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetDropdownStyleAsync">
      <summary v="1rNbax" i="0">
Ref (JSInvoke) 의 BoundingClientRect를 가져오고 px 단위로 최소 너비와 너비를 설정합니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetInitialValuesAsync">
      <summary v="nJ8su" i="0">
초기화 후 초기 값을 설정하면 메소드가 한 번만 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetInputBlurAsync">
      <summary v="2BVDnI" i="0">
집중된 속성이 참인지 확인하십시오. 집중된 속성을 거짓으로 설정하고
DOM을 통해 입력 요소를 스타일링하고 흐리게 만듭니다. 또한 OnBlur Action을 호출합니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.TrySetDefaultValueAsync">
      <summary v="2yMz2T" i="0">
값이 null (기본값) 인 경우 OnAfterRenderAsync에서 호출하는 메소드
DefaultValue의 값이 있거나 DefaultActiveFirstItem은 True입니다.
</summary>
    </member>
    <member name="M:AntDesign.Select`2.TrySetDefaultValuesAsync">
      <summary v="3y6E36" i="0">
값이 null (기본값) 인 경우 OnAfterRenderAsync에서 호출하는 메소드
DefaultValues는 값이 있거나 DefaultActiveFirstItem은 True입니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.ClearSelectedAsync">
      <summary v="38H8Nv" i="0">
SelectValue (s) 속성을 지우고 양방향 바인딩을 통해 null(default) 값을 다시 보냅니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.CloseAsync">
      <summary v="1jx2FJ" i="0">
오버레이 닫기
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.CreateSelectOptionItem(System.String,System.Boolean)">
      <summary v="4s4PA" i="0">
선택 옵션 항목을 만듭니다. 대부분 새 태그를 만드는 것을 의미하므로 IsAddedTag 이 true로 하드 코딩됩니다.
</summary>
      <param name="label" v="HyC3F" i="0">전달 된 레이블을 기반으로 한 생성</param>
      <param name="isActive" v="47SihR" i="0">로 설정된 경우<c>진실</c>[활성화되어 있습니다].</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.EvaluateValuesChangedOutsideComponent(System.Collections.Generic.IEnumerable{`0})">
      <summary v="1z9pAS" i="0">
바인딩-값이 구성 요소 외부에서 변경되면 구성 요소
선택된 항목은 통과된 새로운 값에 따라 재선택되어야 합니다.
TODO: (Perf) 전달된 값이 현재 선택된 값과 다른지 식별하기 위해 해시를 사용하는 것을 고려하십시오.
</summary>
      <param name="values" v="2odFbD" i="0">선택해야 하는 값입니다.</param>
    </member>
    <member name="M:AntDesign.SelectBase`2.InvokeOnSelectedItemChanged(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="3K1S7F" i="0">
ValuesChanged 및 OnSelectedItemsChanged를 호출하여 코드 중복을 줄이는 별도의 방법입니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputBlurAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
      <summary v="4p4QI" i="0">
입력 요소가 포커스를 잃으면 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputClearClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="1sG09T" i="0">
사용자가 입력 요소 내부의 지우기 아이콘을 클릭한 후 EventCallBack을 통해 메소드가 호출됩니다.
모든 항목에 대한 IsSelected 및 IsHidden 속성을 False로 설정합니다. 오버레이 위치를 업데이트하는 경우
SelectMode는 태그 또는 여러 가지입니다. OnClearSelected 액션을 호출하십시오. 값을 기본값으로 설정합니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
      <summary v="22mu2d" i="0">
입력 요소가 포커스를 얻는 경우 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnRemoveSelectedAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4XvNPB" i="0">
사용자가 태그의 닫기 아이콘을 클릭하면 EventCallBack을 통해 메소드가 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnValuesChangeAsync(System.Collections.Generic.IEnumerable{`0})">
      <summary v="4VfcuR" i="0">
이 방법은 @ bind-Values의 값이 양방향 바인딩에 의해 변경된 경우 매번 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.ResetValue">
      <summary v="cEne8" i="0">
양식 재설정 방법으로 호출
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.SetInputBlurAsync">
      <summary v="2BVDnI" i="0">
집중된 속성이 참인지 확인하십시오. 집중된 속성을 거짓으로 설정하고
DOM을 통해 입력 요소를 스타일링하고 흐리게 만듭니다. 또한 OnBlur Action을 호출합니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.SetInputFocusAsync">
      <summary v="Rq9hv" i="0">
집중된 속성이 거짓인지 확인하십시오. 집중된 속성을 true로 설정하고
DOM을 통해 입력 요소에 초점을 맞추고 설정하십시오. 또한 OnFocus Action을 호출합니다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.SetValueAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4JZajd" i="0">
이 방법은 사용자가 마우스 또는 키보드로 항목을 선택/선택 해제하면 매번 호출됩니다.
이 함수 외부에서 IsSelected 속성을 변경하지 마십시오.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.UnhideSelectOptions">
      <summary v="1znG6K" i="0">
선택한 경우를 제외하고 모든 선택 옵션을 숨기십시오.<see cref="P:AntDesign.SelectBase`2.HideSelected" />사실이다.
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.UpdateOverlayPositionAsync">
      <summary v="4VAGyk" i="0">
오버레이를 호출하여 위치를 업데이트합니다.
</summary>
    </member>
    <member name="M:AntDesign.Table`1.AntDesign#ITable#OnColumnInitialized">
      <summary v="3j8YuV" i="0">
이 방법은 모든 열이 설정되었을 때 호출됩니다.
</summary>
    </member>
    <member name="M:AntDesign.Table`1.AntDesign#ITable#RebuildColumns(System.Boolean)">
      <summary v="1lzzz9" i="0">
각 열 변경에 대해 네 번 다시 렌더링해야합니다.
<br />1. 에 호출 한 후 변경된 열이 있음을 인식하기 위해 한 번 다시 렌더링합니다.<see cref="M:AntDesign.Table`1.OnParametersSet" />, 트리거가 빈 ChildCont를 렌더링합니다.
<br />2. 에 전화 한 후 빈 ChildContent를 위해 한 번 다시 렌더링<see cref="M:AntDesign.ITable.RebuildColumns(System.Boolean)" />그런 다음 원본 콘텐츠를 다시 작성하기 위해 렌더링을 트리거합니다.
<br />3. 에서 호출 한 후 열 재건을 위해 다시 렌더링<see cref="M:AntDesign.Table`1.OnAfterRenderAsync(System.Boolean)" />열이 준비되면 로드 데이터에 대한 렌더링을 트리거합니다.
<br />4. 에서 호출 한 후 데이터를 다시로드하기 위해 다시 렌더링<see cref="M:AntDesign.Table`1.OnColumnInitialized" /></summary>
      <param name="add" v="4duF5f" i="0">열이 추가/제거되었는지 여부</param>
      <remarks>
            lifecycle process: columns was changed -&gt; render#1(true) -&gt; column add/dispose -&gt; call rebuild(call render#2) -&gt; render#2(true) -&gt; OnAfterRenderAsync#2 (call render#3) -&gt; render#3(true)
            -&gt; OnColumnInitialized call render#4 -&gt; OnAfterRenderAsync#4 -&gt; OnAfterRenderAsync#3 -&gt; OnAfterRenderAsync#1 (the last 2 steps are duplicated and useless)
            </remarks>
      <returns v="3rKED9" i="0">재건축 시작 여부</returns>
    </member>
    <member name="M:AntDesign.Table`1.ClearSelectedRows">
      <summary v="1OT3qB" i="0">
현재 페이지의 선택된 행 클리어
</summary>
    </member>
    <member name="M:AntDesign.Table`1.InvokeDataSourceHasChanged">
      <summary v="0pX44" i="0">
데이터 소스가 테이블의 상태를 새로 고침하도록 변경된 후 이 메서드를 호출합니다.
</summary>
            Make the method protected to allow derived classes to call it.
        </member>
    <member name="M:AntDesign.Table`1.SelectAll">
      <summary v="1zOBwL" i="0">
현재 페이지의 모든 행 선택
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(`0)">
      <summary v="20O0Av" i="0">
하나의 항목 선택
</summary>
      <param name="item" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.ICollection{System.String})">
      <summary v="ZRvp2" i="0">
사용하십시오<see cref="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.IEnumerable{`0})" />대신 가능하면
이 방법은 가상화를 사용할 때 보이지 않는 행에서 항목을 올바르게 선택하지 않습니다.
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.IEnumerable{`0})">
      <summary v="31oGTq" i="0">
선택한 모든 항목 설정
</summary>
      <param name="items" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.UnselectAll">
      <summary v="4ITSSv" i="0">
현재 페이지의 모든 행을 선택 취소
</summary>
    </member>
    <member name="M:AntDesign.TableModels.QueryModel`1.GetFilterExpression">
      <summary v="2TdfGV" i="0">
Entity Framework와 같은 ORM에 대한 현재 필터 표현을 가져옵니다.
그리고 데이터 소스로 표현식을 실행하여 필터링된 데이터를 가져올 수 있습니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TableModels.SortModel`1.Compare(`0,`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.Tabs.AddTabPane(AntDesign.TabPane)">
      <summary v="2lX08c" i="0">
추가<see cref="T:AntDesign.TabPane" />에<see cref="T:AntDesign.Tabs" /></summary>
      <param name="tabPane" v="1YkHnc" i="0">추가 될 AntTabPane</param>
      <exception cref="T:System.ArgumentNullException">Key is null</exception>
      <exception cref="T:System.ArgumentException">An AntTabPane with the same key already exists</exception>
    </member>
    <member name="M:AntDesign.TextArea.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.Tree`1.AddChildNode(AntDesign.TreeNode{`0})">
      <summary v="1A85p0" i="0">
노드 추가
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.CollapseAll(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="4cORof" i="0">
모든 노드 붕괴
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.DeselectAll">
      <summary v="3ZRxKG" i="0">
모든 선택 선택 취소
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.ExpandAll(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="gV1mk" i="0">
모든 노드 확장
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.FindFirstOrDefaultNode(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="eypyL" i="0">
노드 찾기
</summary>
      <param name="predicate" v="3xQfy6" i="0">Predicate</param>
      <param name="recursive" v="DgcMI" i="0">재귀 찾기</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.GetNode(System.String)">
      <summary v="3HcUYe" i="0">
키에서 트리 노드 가져 오기
</summary>
      <param name="key" v="1LwHKs" i="0">키</param>
    </member>
    <member name="M:AntDesign.Tree`1.TriggerOnSelect(AntDesign.TreeNode{`0})">
      <summary v="Z97NP" i="0">
OnSelect 이벤트 트리거
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.TriggerOnUnselect(AntDesign.TreeNode{`0})">
      <summary v="3ttz41" i="0">
이벤트 트리거 선택 해제
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.UncheckAll">
      <summary v="4fGZnq" i="0">
모든 노드를 확인하지 못함
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.UpdateSelectedKeys">
      <summary v="4Ddxug" i="0">
바인딩 데이터 업데이트
</summary>
    </member>
    <member name="M:AntDesign.TreeIndent`1.GetParentNode(AntDesign.TreeNode{`0},System.Int32)">
      <summary v="21vmtR" i="0">
특정 레벨 부모 노드를 찾으려면
</summary>
      <param name="node" v="0000" i="0" />
      <param name="level" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddChildNode(`0)">
      <summary v="4Woj0Y" i="0">
자식 노드 추가
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddNextNode(`0)">
      <summary v="4UcvGu" i="0">
노드 옆에 노드 추가
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddNode(AntDesign.TreeNode{`0})">
      <summary v="11Ldf2" i="0">
부모 노드에 노드 추가
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddPreviousNode(`0)">
      <summary v="1chHuB" i="0">
노드 앞에 노드 추가
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.CollapseAll">
      <summary v="0InAm" i="0">
모든 자식 노드 붕괴
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.Downgrade">
      <summary v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.DragMoveDown(AntDesign.TreeNode{`0})">
      <summary v="24tZuq" i="0">
대상 아래로 드래그 앤 드롭
</summary>
      <param name="treeNode" v="3w3ozB" i="0">금고</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.DragMoveInto(AntDesign.TreeNode{`0})">
      <summary v="2DcpoU" i="0">
자식 노드로 드래그 앤 드롭
</summary>
      <param name="treeNode" v="3w3ozB" i="0">금고</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.Expand(System.Boolean)">
      <summary v="1Mpf35" i="0">
노드 확장
</summary>
      <param name="expanded" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.ExpandAll">
      <summary v="34qmuW" i="0">
모든 자식 노드 확장
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.FindFirstOrDefaultNode(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="3HXbN3" i="0">
노드 찾기
</summary>
      <param name="predicate" v="3xQfy6" i="0">Predicate</param>
      <param name="recursive" v="DgcMI" i="0">재귀 찾기</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentChildDataItems">
      <summary v="2YwfqR" i="0">
上
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentChildNodes">
      <summary v="1kSesi" i="0">
부모 노드의 자식을 가져옵니다.
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentNodes">
      <summary v="2gK1NO" i="0">
부모 데이터 세트 획득
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveDown">
      <summary v="3BRJY8" i="0">
노드 아래로 이동
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveInto(AntDesign.TreeNode{`0})">
      <summary v="1U6xDN" i="0">
노드는 자식 노드로 이동합니다.
</summary>
      <param name="treeNode" v="4IISiB" i="0">대상 노드</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveUp">
      <summary v="2ZOqfQ" i="0">
노드 위로 이동
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.OnCheckBoxClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="2xEXWN" i="0">
선택 상자를 클릭하면 트리거됩니다.
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.OnSwitcherClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="3iMt4O" i="0">
노드 스위치
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.OpenPropagation(System.Boolean)">
      <summary v="4fa8eR" i="0">
확장 된 부모
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.Remove">
      <summary v="sd5wW" i="0">
제거
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.RemoveNode">
      <summary v="dGVDZ" i="0">
현재 노드 제거
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.SetChecked(System.Boolean)">
      <summary v="1BDNpt" i="0">
체크박스 상태 설정
</summary>
      <param name="check" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetChildChecked(AntDesign.TreeNode{`0},System.Boolean,System.Boolean,System.Boolean)">
      <summary v="1UnxiI" i="0">
자식 노드의 체크박스 상태 설정
</summary>
      <param name="subnode" v="0000" i="0" />
      <param name="check" v="0000" i="0" />
      <param name="isManual" v="0000" i="0" />
      <param name="forceRecursive" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetParentTargetContainer(System.Boolean)">
      <summary v="bQvqo" i="0">
드래그 앤 드롭 대상 노드 컨테이너를 설정
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.SetSelected(System.Boolean)">
      <summary v="x0QNF" i="0">
선택 상태 설정
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetTargetBottom(System.Boolean)">
      <summary v="1VAIex" i="0">
대상 위치를 해제하도록 노드를 설정
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SwitchAllNodes(AntDesign.TreeNode{`0},System.Boolean)">
      <summary v="3aHy9v" i="0">
'절투평' 개성관
</summary>
      <param name="node" v="0000" i="0" />
      <param name="expanded" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.UpdateCheckState(System.Nullable{System.Boolean})">
      <summary v="9fWzk" i="0">
확인 상태 업데이트
</summary>
      <param name="halfChecked" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.Upgrade">
      <summary v="12yZbC" i="0">
노드 업그레이드
</summary>
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDblClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragEnd(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="9faGh" i="0">
끝을 드래그
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragEnter(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragLeave(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="1uwlgW" i="0">
떠나는 것이 목표를 풀어줍니다.
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragOver(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="2qw6tf" i="0">
타겟이 OffsetX 거리를 넘어 오른쪽으로 이동하면 아이로 취급 될 수 있습니다.
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragStart(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDrop(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Affix.OffsetBottom">
      <summary v="1bVteV" i="0">
뷰포트 하단에서 오프셋 (픽셀)
</summary>
    </member>
    <member name="P:AntDesign.Affix.OffsetTop">
      <summary v="2aj1Wk" i="0">
뷰포트 상단에서 오프셋 (픽셀)
</summary>
    </member>
    <member name="P:AntDesign.Alert.AfterClose">
      <summary v="1HTYuL" i="0">
가까운 애니메이션이 완료되면 호출
</summary>
    </member>
    <member name="P:AntDesign.Alert.Banner">
      <summary v="1rzYJy" i="0">
배너로 표시할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Alert.ChildContent">
      <summary v="3ll9iq" i="0">
추가 내용
</summary>
    </member>
    <member name="P:AntDesign.Alert.Closable">
      <summary v="h5EMt" i="0">
경보가 닫힐 수 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Alert.CloseText">
      <summary v="29NGpS" i="0">
표시할 텍스트 닫기
</summary>
    </member>
    <member name="P:AntDesign.Alert.Description">
      <summary v="3xZDj2" i="0">
경고의 추가 내용
</summary>
    </member>
    <member name="P:AntDesign.Alert.Icon">
      <summary v="rqvuO" i="0">
사용자 정의 아이콘, 쇼아이콘이 사실일 때 효과적입니다.
</summary>
    </member>
    <member name="P:AntDesign.Alert.IconType">
      <summary v="4EXXPV" i="0">
보여주는 아이콘.
</summary>
    </member>
    <member name="P:AntDesign.Alert.Message">
      <summary v="3ySxVB" i="0">
경보의 내용
</summary>
    </member>
    <member name="P:AntDesign.Alert.OnClose">
      <summary v="3qPRmi" i="0">
경고가 닫힐 때 콜백.
</summary>
    </member>
    <member name="P:AntDesign.Alert.ShowIcon">
      <summary v="2CtP65" i="0">
아이콘을 표시할지 여부.
</summary>
    </member>
    <member name="P:AntDesign.Alert.Type">
      <summary v="4TLMol" i="0">
경고 스타일, 옵션의 유형: 성공, 정보, 경고, 오류
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Affix">
      <summary v="G5LeF" i="0">
앵커의 고정 모드
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Bounds">
      <summary v="2ba1Sf" i="0">
앵커 영역의 경계 거리
</summary>
    </member>
    <member name="P:AntDesign.Anchor.GetContainer">
      <summary v="2yuhxT" i="0">
스크롤 컨테이너
</summary>
    </member>
    <member name="P:AntDesign.Anchor.GetCurrentAnchor">
      <summary v="4JAkIk" i="0">
앵커 하이라이트 사용자 지정
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Key">
      <summary v="13ppKL" i="0">
키가 변경되면 링크 목록을 새로 고치는 데 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OffsetBottom">
      <summary v="4gFv5O" i="0">
스크롤 위치를 계산할 때 아래에서 오프셋되는 픽셀
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OffsetTop">
      <summary v="1vMGhz" i="0">
스크롤 위치를 계산할 때 위에서부터 오프셋되는 픽셀
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OnClick">
      <summary v="4N09j8" i="0">
클릭 이벤트를 처리하도록 핸들러를 설정
</summary>
    </member>
    <member name="P:AntDesign.Anchor.ShowInkInFixed">
      <summary v="11ujva" i="0">
고정 모드에서 잉크 볼 표시 여부
</summary>
    </member>
    <member name="P:AntDesign.Anchor.TargetOffset">
      <summary v="39FgZF" i="0">
앵커 스크롤 오프셋, 기본값은<see cref="P:AntDesign.Anchor.OffsetTop" /></summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Href">
      <summary v="3zX1xf" i="0">
하이퍼 링크의 대상
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Target">
      <summary v="278vCU" i="0">
연결된 URL을 표시할 위치를 지정
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Title">
      <summary v="y1NoB" i="0">
하이퍼링크의 내용
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Class">
      <summary v="1PA7jq" i="0">
DOM 요소에 대해 하나 이상의 클래스 이름을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Ref">
      <summary v="3v0RLn" i="0">
DOM 요소에 대한 반환 ElementRef 참조.
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Style">
      <summary v="34unoz" i="0">
DOM 요소에 대한 인라인 스타일을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.CheckedChanged">
      <summary v="3VLzSp" i="0">
바인딩된 체크 값을 업데이트하는 콜백을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.AdditionalAttributes">
      <summary v="3jnG2N" i="0">
생성된 요소에 적용할 추가 속성 컬렉션을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CultureInfo">
      <summary v="OrqPJ" i="0">
문자열을 값으로 변환하고 값을 문자열로 변환 할 때 사용되는 문화
InputNumber 구성 요소에 유용합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CurrentValue">
      <summary v="4WBLIM" i="0">
입력의 현재 값을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString">
      <summary v="DJ3yY" i="0">
문자열로 표시되는 입력의 현재 값을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.EditContext">
      <summary v="3o9jfY" i="0">
연결된<see cref="P:AntDesign.AntInputComponentBase`1.EditContext" />.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.FieldIdentifier">
      <summary v="4LejCf" i="0">
<see cref="P:AntDesign.AntInputComponentBase`1.FieldIdentifier" />바운드 값을 위해.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.NameAttributeValue">
      <summary v="2QEQYC" i="0">
입력의 "name" 속성에 사용할 값을 가져옵니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.Size">
      <summary v="P25m2" i="0">
입력 상자의 크기입니다. 참고: 형식의 맥락에서
'큰' 크기가 사용됩니다. 사용 가능: '대형' '기본' '작은'
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.Value">
      <summary v="yoUC3" i="0">
입력 값을 가져오거나 설정합니다. 이것은 양방향 바인딩과 함께 사용해야합니다.
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValueChanged">
      <summary v="1XH9uJ" i="0">
바인딩된 값을 업데이트하는 콜백을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValueExpression">
      <summary v="iOY7r" i="0">
바인딩 값을 식별하는 표현식을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.ActiveValue">
      <summary v="3fAvMK" i="0">
高 的 output
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.AllowFilter">
      <summary v="24Ovzi" i="0">

필터링 허용
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.AutoCompleteOptions">
      <summary v="13tbuq" i="0">
靑 문안 = 연합뉴스
목록 객체 컬렉션
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.BoundaryAdjustMode">
      <summary v="KChSv" i="0">
오버레이 조정 전략 (예: 브라우저 크기 조정이 발생하는 경우). 체크
세부 사항에 대한 enum.
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.CompareWith">
      <summary v="3JD1Kz" i="0">
相同서
대조, 두 객체가 동일한지 여부를 비교하는 데 사용
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.FilterExpression">
      <summary v="3yC7cw" i="0">

필터 식
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionDataItems">
      <summary v="2DAw7L" i="0">
정정 언트 문안 문안
목록 데이터 항목 형식의 데이터 소스 바인딩
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionFormat">
      <summary v="3nrqPc" i="0">
Playplicationalization, 自定义 式
포맷 옵션, 디스플레이 형식을 사용자 정의 할 수 있습니다
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionTemplate">
      <summary v="1nOobb" i="0">

옵션 템플릿
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayTemplate">
      <summary v="4Xek7P" i="0">
소정유 유은외고
모든 옵션 템플릿
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.SelectedItem">
      <summary v="1eV7pf" i="0">
的
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Overflow">
      <summary v="XJk6e" i="0">
그룹 최대 수보다 더 많은 것
</summary>
    </member>
    <member name="P:AntDesign.BackTop.TargetSelector">
      <summary v="3UmJzr" i="0">
的
</summary>
    </member>
    <member name="P:AntDesign.Badge.ChildContent">
      <summary v="3K0w9c" i="0">
이 항목을 감싸십시오.
</summary>
    </member>
    <member name="P:AntDesign.Badge.Color">
      <summary v="3hwCN6" i="0">
배지 상태 점 색상을 사용자 정의하십시오. 이 매개 변수를 사용하면 배지를 상태 점으로 만듭니다.
</summary>
    </member>
    <member name="P:AntDesign.Badge.Count">
      <summary v="3xDbds" i="0">
배지에 표시 할 번호
</summary>
    </member>
    <member name="P:AntDesign.Badge.CountTemplate">
      <summary v="3mO9Ri" i="0">
카운트 대신 보여줄 템플릿
</summary>
    </member>
    <member name="P:AntDesign.Badge.Dot">
      <summary v="2fwY3p" i="0">
카운트 대신 점을 표시할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Badge.Offset">
      <summary v="2TKOcL" i="0">
배지 점의 오프셋 설정 (왼쪽, 상단)
</summary>
    </member>
    <member name="P:AntDesign.Badge.OverflowCount">
      <summary v="4wMP5" i="0">
보여줄 최대 수
</summary>
    </member>
    <member name="P:AntDesign.Badge.PresetColor">
      <summary v="48RxSA" i="0">
배지 상태 점을 미리 설정된 색상으로 설정합니다. 이 매개 변수를 사용하면 배지를 상태 점으로 만듭니다.
</summary>
    </member>
    <member name="P:AntDesign.Badge.ShowZero">
      <summary v="An9Bu" i="0">
카운트가 0 일 때 배지를 표시할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Badge.Size">
      <summary v="2hUVCd" i="0">
배지의 크기
</summary>
    </member>
    <member name="P:AntDesign.Badge.Status">
      <summary v="2SAJpA" i="0">
배지 도트를 상태 색상으로 설정합니다. 이 매개 변수를 사용하면 배지를 상태 점으로 만듭니다.
</summary>
    </member>
    <member name="P:AntDesign.Badge.Text">
      <summary v="mNMHX" i="0">
상태 점 옆에 텍스트 표시
</summary>
    </member>
    <member name="P:AntDesign.Badge.Title">
      <summary v="GmAt5" i="0">
배지 위에 호버링 할 때 표시하는 텍스트. 카운트 값의 기본값
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.ChildContent">
      <summary v="3K0w9c" i="0">
이 항목을 감싸십시오.
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Color">
      <summary v="45tQm" i="0">
리본 색상 사용자 정의
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Placement">
      <summary v="1w1VYs" i="0">
리본의 배치 설정.
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Text">
      <summary v="2umtFr" i="0">
리본의 텍스트 내용을 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Breadcrumb.Separator">
      <summary v="1HcP2j" i="0">
맞춤 분리기
</summary>
    </member>
    <member name="P:AntDesign.Button.AriaLabel">
      <summary v="3lc7zV" i="0">
Aria-label 속성의 값을 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Button.Block">
      <summary v="4dlKNJ" i="0">
부모 너비에 버튼 너비를 맞추는 옵션
</summary>
    </member>
    <member name="P:AntDesign.Button.ChildContent">
      <summary v="2ZM4UH" i="0">
버튼의 내용입니다.
</summary>
    </member>
    <member name="P:AntDesign.Button.Color">
      <summary v="Zhn2Z" i="0">
버튼의 색상을 설정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Button.Danger">
      <summary v="38p6E3" i="0">
버튼의 위험 상태를 설정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Button.Disabled">
      <summary v="2k5NmL" i="0">
'버튼' 이 장애인인지 여부.
</summary>
    </member>
    <member name="P:AntDesign.Button.Ghost">
      <summary v="Sd2qi" i="0">
배경을 투명하게 만들고 텍스트와 테두리 색상을 뒤집습니다.
</summary>
    </member>
    <member name="P:AntDesign.Button.HtmlType">
      <summary v="RzH3K" i="0">
버튼 요소의 원래 html 유형을 설정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Button.Icon">
      <summary v="WDN78" i="0">
버튼의 아이콘 구성 요소를 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Button.Loading">
      <summary v="3cOuxj" i="0">
로딩 표시기를 표시합니다. 로딩 논리를 직접 작성해야합니다.
</summary>
    </member>
    <member name="P:AntDesign.Button.NoSpanWrap">
      <summary v="4UYg0o" i="0">
&lt;Span&gt; 으로 포장하지 마십시오.
</summary>
    </member>
    <member name="P:AntDesign.Button.OnClick">
      <summary v="2T2oFB" i="0">
'버튼' 을 클릭하면 콜백
</summary>
    </member>
    <member name="P:AntDesign.Button.OnClickStopPropagation">
      <summary v="QjNIe" i="0">
버튼을 클릭하면 이벤트를 전파하지 마십시오.
</summary>
    </member>
    <member name="P:AntDesign.Button.Shape">
      <summary v="4PnLWH" i="0">
버튼 모양을 설정할 수 있습니다: '원' | '원형' 또는 '널' (기본적으로 사각형).
</summary>
    </member>
    <member name="P:AntDesign.Button.Size">
      <summary v="P6T6U" i="0">
버튼의 크기를 설정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Button.Type">
      <summary v="V9Agx" i="0">
버튼의 유형입니다.
</summary>
    </member>
    <member name="P:AntDesign.Carousel.Autoplay">
      <summary v="4Zlm4r" i="0">
자동으로 스크롤할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Carousel.DotPosition">
      <summary v="44UFvq" i="0">
상단, 하단, 왼쪽 또는 오른쪽 중 하나가 될 수있는 점의 위치,<see cref="T:AntDesign.CarouselDotPosition" /></summary>
    </member>
    <member name="P:AntDesign.Carousel.Effect">
      <summary v="0D1WU" i="0">
전환 효과,<see cref="T:AntDesign.CarouselEffect" /></summary>
    </member>
    <member name="P:AntDesign.Cascader.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
오버레이 조정 전략 (예: 브라우저 크기 조정이 발생하는 경우)
</summary>
    </member>
    <member name="P:AntDesign.Cascader.OnChange">
      <summary v="4P1mUg" i="0">
대신 SelectedNodesChanged를 사용하십시오.
</summary>
    </member>
    <member name="P:AntDesign.CloseEventArgs`1.Cancel">
      <summary v="1g27YO" i="0">
True이면 구성 요소가 닫히지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.Collapse.Animation">
      <summary v="4N3BlR" i="0">
확장/붕괴 애니메이션 활성화 여부
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filtered">
      <summary v="2XyWA9" i="0">
데이터 소스 필터링 여부. 필터 아이콘은 true 일 때 활성화됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Column`1.OnFilter">
      <summary v="4e8Sfq" i="0">
필터링 될 때 행이 표시되는지 여부를 결정하는 함수
<para>
매개 변수 1: 필터 항목의 값
</para><para>
매개 변수 2: 열의 값
</para></summary>
    </member>
    <member name="P:AntDesign.Confirm.Config">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Confirm.ConfirmRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Confirm.OnRemove">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button1Props">
      <summary v="3uYyxi" i="0">
LTR 레이아웃에서 가장 왼쪽 버튼 속성
</summary>
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button2Props">
      <summary v="22oJ1V" i="0">
LTR 레이아웃의 보조 버튼 속성
</summary>
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button3Props">
      <summary v="4QlFFO" i="0">
LTR 레이아웃의 세 번째 버튼 속성
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.AbortText">
      <summary v="4dymfT" i="0">
중단 버튼 텍스트
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.CancelText">
      <summary v="3YxACC" i="0">
취소 버튼 텍스트
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.IgnoreText">
      <summary v="4CzbV2" i="0">
버튼 텍스트 무시
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.NoText">
      <summary v="1MTUhf" i="0">
버튼 텍스트 없음
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.OkText">
      <summary v="1kbJyX" i="0">
OK 버튼 텍스트
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.RetryText">
      <summary v="3UaGPH" i="0">
버튼 텍스트 다시 시도
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.YesText">
      <summary v="eXHQf" i="0">
예 버튼 텍스트
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.AutoFocusButton">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button1Props">
      <summary v="3zpJsY" i="0">
LTR 레이아웃에서 가장 왼쪽 버튼
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button1Text">
      <summary v="QZq7a" i="0">
LTR 레이아웃에서 가장 왼쪽 버튼으로 ConfirmLocale을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button2Props">
      <summary v="2XllId" i="0">
왼쪽의 두 번째 버튼은 LTR 레이아웃에 있습니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button2Text">
      <summary v="2jO8Xs" i="0">
왼쪽의 두 번째 버튼은 LTR 레이아웃에 있으며 ConfirmLocale을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button3Props">
      <summary v="twE2H" i="0">
LTR 레이아웃에서 가장 오른쪽 버튼
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button3Text">
      <summary v="Y306A" i="0">
LTR 레이아웃에서 가장 오른쪽 버튼으로 ConfirmLocale을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.CancelButtonProps">
      <summary v="3bEw4J" i="0">
OK-취소 대화 상자의 취소 버튼 소품 확인. Button2Props 와 같습니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.CancelText">
      <summary v="1TKAGv" i="0">
왼쪽 버튼에서 두 번째에 대한 취소 버튼 내용 설정: 취소 또는 아니오 단추, 그것은 ConfirLocale을 무시합니다
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.ClassName">
      <summary v="4ZPZXD" i="0">
". Ant-modal" 요소의 클래스 이름
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Content">
      <summary v="LVRKT" i="0">
아동 콘텐츠
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn1Text">
      <summary v="q3Wg3" i="0">
OK
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn2Text">
      <summary v="1G3tB3" i="0">
취소
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn3Text">
      <summary v="3tdu1K" i="0">
무시
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Icon">
      <summary v="34Ek9o" i="0">
왼쪽 상단 아이콘 확인
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Locale">
      <summary v="4ZCiPk" i="0">
로케일 확인
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkButtonProps">
      <summary v="4fyyWA" i="0">
OK-대화 상자의 OK 버튼 소품을 확인하십시오. Button1Props 와 같습니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkCancel">
      <summary v="3FnioJ" i="0">
OK-확인 대화 상자에 대한 취소 버튼 표시
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkText">
      <summary v="1UJ85J" i="0">
가장 왼쪽 버튼에 대한 OK 버튼 내용 설정: 확인 또는 예 버튼, ConfirmLocale을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkType">
      <summary v="hftSf" i="0">
가장 왼쪽 버튼에 대한 설정 OK 버튼 유형: 확인 또는 예 버튼
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OnCancel">
      <summary v="297oJB" i="0">
OK-취소 대화 상자 확인, 취소 버튼 클릭 콜백.
ModalService 모드에서 만든 확인 만 트리거입니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OnOk">
      <summary v="WcOPM" i="0">
OK-취소 대화 상자 확인, 확인 버튼 클릭 콜백.
ModalService 모드에서 만든 확인 만 트리거입니다.
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Style">
      <summary v="4Bzv48" i="0">
. Ant-modal 요소의 스타일
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmRef.Config">
      <summary v="1kUbEo" i="0">
대화 옵션 확인
</summary>
    </member>
    <member name="P:AntDesign.ConfirmRef.Service">
      <summary v="33W2aX" i="0">
ModalService
</summary>
    </member>
    <member name="P:AntDesign.ConfirmRef`1.OnCancel">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.ConfirmRef`1.OnOk">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
오버레이 조정 전략 (예: 브라우저 크기 조정이 발생하는 경우)
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ChangeOnClose">
      <summary v="2QN4Qc" i="0">
흐림 후 입력 값 저장
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsNullable">
      <summary v="1y4yhm" i="0">
TValue가 nullable 유형인 경우 정보를 저장합니다.
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnClear">
      <summary v="2qqn9J" i="0">
클리어 버튼을 클릭하면 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Placement">
      <summary v="12BNeH" i="0">
선택 상자가 나타나는 위치
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.CalendarDateRender">
      <summary v="3GeJLc" i="0">
달력. DateCellRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.CalendarMonthCellRender">
      <summary v="1b4EGp" i="0">
달력을 위해. MonthCellRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.DateRender">
      <summary v="1faJpx" i="0">
달력. DateFullCellRender, DatePicker.DateRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.IsShowTime">
      <summary v="3q0ltB" i="0">
DatePickerWithTimePanel에서만 사용하는
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.MonthCellRender">
      <summary v="1rnJ5M" i="0">
달력. MonthFullCellRender, DatePicker.MonthCellRender
</summary>
    </member>
    <member name="P:AntDesign.Dialog.SentinelStart">
      <summary v="1bBGgs" i="0">
탭 시작 제어 ID
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.BodyStyle">
      <summary v="Bh4MH" i="0">
Ant-모달-바디 스타일
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ChildContent">
      <summary v="LVRKT" i="0">
아동 콘텐츠
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ClassName">
      <summary v="4ZPZXD" i="0">
". Ant-modal" 요소의 클래스 이름
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Closable">
      <summary v="122WS7" i="0">
쇼 ant-모달-클로저
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.CloseIcon">
      <summary v="1Bc5mm" i="0">
더 가까운 아이콘 RenderFragment, 기본값은 "X" 입니다
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ConfirmLoading">
      <summary v="3IUGTG" i="0">
OK 버튼에 로딩 시각 효과를 적용할지 여부
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DefaultMaximized">
      <summary v="3BcFs7" i="0">
구성 요소 초기화 중에 대화 상자를 최대화하면 최대 값을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DestroyOnClose">
      <summary v="45nYFl" i="0">
모달 폐쇄 후 DOM에서 모달을 제거할지 여부
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Draggable">
      <summary v="3zmBrO" i="0">
드래그 블 모달
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DragInViewport">
      <summary v="4eoCF0" i="0">
뷰포트 내에서만 드래그 앤 드롭
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Footer">
      <summary v="3C0yk" i="0">
모달 푸터
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ForceRender">
      <summary v="KgRwM" i="0">
열기 전에 Modal dom을 강제로 렌더링할지 여부.
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Header">
      <summary v="2e3Pxq" i="0">
모달 헤더
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.MaxBodyHeight">
      <summary v="2FuBJq" i="0">
최대 모달 신체 함량 높이
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Maximizable">
      <summary v="4CJFl8" i="0">
표시 모달 최대화 버튼
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
모달이 정상 상태에있을 때 최대화 버튼의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnCancel">
      <summary v="297oJB" i="0">
OK-취소 대화 상자 확인, 취소 버튼 클릭 콜백.
ModalService 모드에서 만든 확인 만 트리거입니다.
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnClosed">
      <summary v="2jjyi0" i="0">
대화 상자가 닫힌 후 트리거
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnOk">
      <summary v="WcOPM" i="0">
OK-취소 대화 상자 확인, 확인 버튼 클릭 콜백.
ModalService 모드에서 만든 확인 만 트리거입니다.
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Resizable">
      <summary v="1COtwc" i="0">
(수평 방향만)
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
모달을 최대화 할 때 최대화 버튼의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.WrapClassName">
      <summary v="3xRJ9X" i="0">
모달 대화 상자의 컨테이너의 클래스 이름
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.CancelButtonProps">
      <summary v="2Vf3Gr" i="0">
버튼의 소품 취소
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.CancelText">
      <summary v="3qDtWd" i="0">
Modal 기본 바닥 글 취소 텍스트
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Centered">
      <summary v="1nfblX" i="0">
센터 디스플레이 여부
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.GetContainer">
      <summary v="1e0xvG" i="0">
모달 부모 DOM을 얻거나 설정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Keyboard">
      <summary v="4DS9c2" i="0">
닫는 것을 지원 프레스 esc
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Mask">
      <summary v="4N1u35" i="0">
마스크 표시 여부
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.MaskClosable">
      <summary v="1DBAFK" i="0">
마스크 (모달 외부 영역) 를 클릭 할 때 모달 대화 상자를 닫는 지 여부
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.MaskStyle">
      <summary v="vgNzt" i="0">
대화 상자의 마스크 요소에 대한 스타일
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkButtonProps">
      <summary v="3Ndw8d" i="0">
Ok Button의 소품
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkText">
      <summary v="2IMgZI" i="0">
OK 버튼의 텍스트
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkType">
      <summary v="1XT62s" i="0">
OK 버튼의 버튼 유형
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.PrefixCls">
      <summary v="3GXzUH" i="0">
클래스 이름 접두사
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Rtl">
      <summary v="MHb3Z" i="0">
RTL
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Title">
      <summary v="1gdKE7" i="0">
모달 대화 상자의 문자열 제목
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.TitleTemplate">
      <summary v="3OT4NB" i="0">
모드 대화 상자의 제목 RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Width">
      <summary v="7XF2B" i="0">
모달 대화 상자의 폭
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.ZIndex">
      <summary v="10GCuH" i="0">
모달의 z 인덱스
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.ChildContent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.Config">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.Dialog">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.OnAfterHide">
      <summary v="a7xve" i="0">
OnAfterRenderAsync 메서드에서 볼 수있는 경우 트리거가 false입니다.
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.OnAfterShow">
      <summary v="1VqOVh" i="0">
OnAfterRenderAsync 메소드에서 볼 수있는 경우 트리거
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.OnBeforeDestroy">
      <summary v="1w3viE" i="0">
DOM 트리에서 구성 요소를 파괴하기 전에. CancelEventArgs를 설정하여 파괴를 취소 할 수 있습니다. 취소 = true
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Divider.Orientation">
      <summary v="2K2sRS" i="0">
'왼쪽' | '오른쪽' | '중심'
</summary>
    </member>
    <member name="P:AntDesign.Divider.Type">
      <summary v="2qbWzY" i="0">
'수평' | '수직'
</summary>
    </member>
    <member name="P:AntDesign.Drawer.BodyStyle">
      <summary v="1sASnm" i="0">
        <para>
서랍 몸
</para>
        <para>
모달 바디 요소를위한 바디 스타일. 높이, 패딩 등.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Closable">
      <summary v="1fIsaV" i="0">
        <para>
上 的
</para>
        <para>
닫기 (x) 버튼이 서랍 대화 상자의 오른쪽 상단에 표시되는지 여부.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.HeaderStyle">
      <summary v="1Bz9Hy" i="0">
        <para>
서랍 헤더
</para>
        <para>
모달 헤더 요소에 대한 헤더 스타일. 높이, 패딩 등.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Height">
      <summary v="1VGvyG" i="0">
        <para>
高度,<see cref="P:AntDesign.Drawer.Placement" />"Top" "bottom" 时生
</para>
        <para>
서랍 대화 상자의 높이, 배치가 '상단' 또는 '바닥' 일 때만.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Keyboard">
      <summary v="pHsEM" i="0">
        <para>
Esesesc
</para>
        <para>
키보드 esc를 지원할지 여부
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Mask">
      <summary v="31se3b" i="0">
        <para>

</para>
        <para>
마스크 표시 여부.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.MaskClosable">
      <summary v="41uooW" i="0">
        <para>

</para>
        <para>
마스크 (서랍 외부 영역) 를 클릭하여 서랍을 닫는 지 여부.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.MaskStyle">
      <summary v="1dtjUI" i="0">
        <para>

</para>
        <para>
서랍의 마스크 요소 스타일.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetTransform">
      <summary v="1ovClK" i="0">
DraDraDra,, 时的 Regional beted Offset
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetX">
      <summary v="4SM4Ck" i="0">
        <para>
X 方 的, 方 '좌우' 시생.
</para>
        <para>
배치가 '왼쪽' 또는 '오른쪽' 인 경우에만 X 좌표 오프셋 (px) 입니다.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetY">
      <summary v="2jVNIe" i="0">
        <para>
Y 정방투투기투기압, 정면방 'top'' 밑바닥 '시대생 분신
</para>
        <para>
Y 좌표 오프셋 (px) 은 배치가 '상단' 또는 '바닥' 일 때만 가능합니다.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.OnClose">
      <summary v="1HSpIg" i="0">
        <para>
재외고, 前자사고 사건, 在OnClose 소장<see cref="P:AntDesign.Drawer.Visible" />False
</para>
        <para>
사용자가 마스크, 닫기 버튼 또는 취소 버튼을 클릭할 때 호출될 콜백을 지정합니다.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.OnOpen">
      <summary v="4aE0BV" i="0">
        <para>
이재용 서랍 건성 전 (前) 상습자 사건
</para>
        <para>
서랍이 표시되기 전에 호출 할 콜백 지정
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Placement">
      <summary v="2FjAtl" i="0">
        <para>
서랍 的 Regional weddeved, materic, "왼쪽" | "오른쪽" | "상단" | "하단"
</para>
        <para>
서랍의 배치, 옵션은 왼쪽, 상단, 오른쪽, 하단이 될 수 있습니다.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Title">
      <summary v="2uiszR" i="0">
        <para>

</para>
        <para>
서랍 제목.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.Transform">
      <summary v="oxkit" i="0">
Dra서랍
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Visible">
      <summary v="4Gf60Q" i="0">
        <para>
서랍
</para>
        <para>
서랍 대화 상자가 표시되는지 여부.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.VisibleChanged">
      <summary v="Fls9t" i="0">
Visible의 EventCallback 트리거가 변경되었습니다.
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Width">
      <summary v="1CSOF0" i="0">
        <para>
度,<see cref="P:AntDesign.Drawer.Placement" />"왼쪽" "오른쪽" 时生
</para>
        <para>
배치가 '왼쪽' 또는 '오른쪽' 인 경우에만 서랍 대화 상자의 너비.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.WrapClassName">
      <summary v="tZAG7" i="0">
        <para>
Drawerintermission 外 器 的
</para>
        <para>
서랍 대화 상자의 컨테이너의 클래스 이름입니다.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.Drawer.ZIndex">
      <summary v="3TOr6I" i="0">
        <para>
서랍 의도 z-index
</para>
        <para>
서랍의 z-index.
</para>
      </summary>
    </member>
    <member name="P:AntDesign.DrawerOpenEventArgs.Cancel">
      <summary v="3EbA1B" i="0">
事件 。

이벤트를 취소할지 여부를 나타내는 값을 가져오거나 설정합니다.
반환 결과: 이벤트를 취소해야하는 경우 true; 그렇지 않으면 false.
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Placement">
      <summary v="434MBO" i="0">
"왼쪽" | "오른쪽" | "상단" | "하단"
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Block">
      <summary v="4dlKNJ" i="0">
부모 너비에 버튼 너비를 맞추는 옵션
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsClass">
      <summary v="2JSYNV" i="0">
각 버튼의 CSS 클래스를 동일한 문자열로 설정할 수 있습니다.
또는 별도로.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsRender">
      <summary v="2CfA26" i="0">
완전히 사용자 정의 가능한 버튼.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsStyle">
      <summary v="3pYu7U" i="0">
각 버튼의 스타일을 동일한 문자열로 설정할 수 있습니다.
또는 별도로.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Danger">
      <summary v="EU9VT" i="0">
버튼의 위험 상태 설정
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Ghost">
      <summary v="x4g06" i="0">
복잡한 배경이있는 상황에서 일반적으로 홈 페이지를 사용합니다.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Icon">
      <summary v="3hn7FB" i="0">
오른쪽에 렌더링 될 아이콘
버튼.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Loading">
      <summary v="3zCufH" i="0">
로딩 아이콘이 포함될 것인지를 나타냅니다.
True로 설정하면 dropdown이 활성화되지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Size">
      <summary v="qmBSM" i="0">
버튼 크기.
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Type">
      <summary v="485Sk2" i="0">
각 버튼의 유형을 동일한 문자열로 설정할 수 있습니다.
또는 별도로. AntDesign.ButtonType 도우미 클래스를 사용하십시오.
</summary>
    </member>
    <member name="P:AntDesign.FeedbackComponent`1.FeedbackRef">
      <summary v="11Cl1m" i="0">
외부에서 템플릿을 전달할 수있는 옵션
</summary>
    </member>
    <member name="P:AntDesign.FeedbackComponent`1.OkCancelRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackComponent`2.OkCancelRefWithResult">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.AntDesign#IFeedbackRef#ModalTemplate">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.OnClose">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.OnOpen">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.FeedbackRefWithOkCancelBase.OnCancel">
      <summary v="uSJz1" i="0">
취소 버튼 또는 가까운 클릭 때 호출
</summary>
    </member>
    <member name="P:AntDesign.FeedbackRefWithOkCancelBase.OnOk">
      <summary v="xi0GX" i="0">
Ok 버튼을 클릭하면 호출
</summary>
    </member>
    <member name="P:AntDesign.Flex.Align">
      <summary v="2At4GH" i="0">
교차 축 방향으로 요소의 정렬을 설정합니다.
참조 정렬-항목 https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
</summary>
    </member>
    <member name="P:AntDesign.Flex.Component">
      <summary v="243oNo" i="0">
사용자 정의 요소 유형
</summary>
    </member>
    <member name="P:AntDesign.Flex.FlexCss">
      <summary v="F363V" i="0">
플렉스 CSS 속기 속성
참조 플렉스 https://developer.mozilla.org/en-US/docs/Web/CSS/flex
</summary>
    </member>
    <member name="P:AntDesign.Flex.Gap">
      <summary v="Uut0G" i="0">
그리드 사이의 간격을 설정
작은 | 중간 | 큰 | 문자열 | 숫자
</summary>
    </member>
    <member name="P:AntDesign.Flex.Justify">
      <summary v="3zFpKI" i="0">
주축 방향으로 요소의 정렬을 설정합니다.
참조 정당화-콘텐츠 https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
</summary>
    </member>
    <member name="P:AntDesign.Flex.Vertical">
      <summary v="rxl5t" i="0">
플렉스 수직 방향, 사용 플렉스 방향: 열
</summary>
    </member>
    <member name="P:AntDesign.Flex.Wrap">
      <summary v="rE4AA" i="0">
요소가 한 줄로 표시되는지 또는 여러 줄로 표시되는지 설정
참조 플렉스 랩: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Autocomplete">
      <summary v="2cp7Sy" i="0">
입력 요소가 기본적으로 브라우저에서 자동으로 값을 완료 할 수 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Enhance">
      <summary v="vrllB" i="0">
활성화하면 페이지를 완전히 다시로드하지 않고 양식 제출이 수행됩니다. 이는 폼에 데이터 향상을 추가하는 것과 같습니다.
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Method">
      <summary v="36C0mf" i="0">
양식을 제출하는 데 사용되는 Http 방법
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Name">
      <summary v="1i6Jp4" i="0">
양식 처리기 이름을 가져오거나 설정합니다. 이것은 서버 측 끝점에 게시하는 데 필요합니다.
또는 양식 인스턴스를 얻기 위해 사용<see cref="T:AntDesign.FormProviderFinishEventArgs" />.
</summary>
    </member>
    <member name="P:AntDesign.Form`1.RequiredMark">
      <summary v="0PrxO" i="0">
양식에 필요한/선택적 필드 레이블이 표시되는 방법을 변경합니다.
<list type="bullet"><item>필수-필요한 필드를 표시합니다</item><item>선택 사항-옵션 필드를 표시합니다</item><item>없음-필수/선택 사항에 관계없이 필드를 표시하지 않습니다.</item></list></summary>
    </member>
    <member name="P:AntDesign.Form`1.ValidateOnChange">
      <summary v="4Lbt9x" i="0">
구성 요소 값이 변경될 때 유효성 검사
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelStyle">
      <summary v="VhFGJ" i="0">
에만 적용되는 스타일<label />요소.
라벨 템플릿이 설정된 경우 적용되지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.Definitions">
      <summary v="1ORrMe" i="0">
각 열을 정의하는 동작
</summary>
      <param name="propertyName" v="3HDKAv" i="0">열을 바인딩하는 속성의 이름입니다.</param>
      <param name="column" v="3n42MC" i="0">열 인스턴스는 명시적으로 구체적인 열 유형으로 캐스팅해야 합니다.</param>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.HideColumnsByName">
      <summary v="Ree44" i="0">
속성 이름으로 열을 숨 깁니다.
</summary>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.Range">
      <summary v="3qtd4o" i="0">
표시해야 하는 열의 범위를 구체화합니다.
</summary>
    </member>
    <member name="P:AntDesign.Icon.Theme">
      <summary v="3RjsZn" i="0">
'필링' | '아웃라인' | 'twotone';
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.ModalTemplate">
      <summary v="BHg9M" i="0">
피드백을 얻기 위해 내부 구성 요소의 이벤트
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.OnClose">
      <summary v="2JaQDk" i="0">
에 피드백 닫기
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.OnOpen">
      <summary v="49INqh" i="0">
에 피드백 오픈
</summary>
    </member>
    <member name="P:AntDesign.IForm.EditContext">
      <summary v="z1gfH" i="0">
폼에서 현재 EditContext를 가져옵니다.
</summary>
    </member>
    <member name="P:AntDesign.IForm.IsModified">
      <summary v="4RJ8hI" i="0">
양식이 수정되었는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.IForm.Model">
      <summary v="kFSC0" i="0">
양식이 바인딩되는 데이터 객체입니다.
</summary>
    </member>
    <member name="P:AntDesign.IForm.Name">
      <summary v="zR1Ov" i="0">
양식의 이름입니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AddOnAfter">
      <summary v="8vf60" i="0">
입력 필드의 오른쪽에 표시되는 레이블 텍스트입니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AddOnBefore">
      <summary v="36H0rJ" i="0">
입력 필드의 왼쪽 앞에 표시된 레이블 텍스트입니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AllowClear">
      <summary v="gEOSA" i="0">
명확한 아이콘으로 입력 내용을 제거 할 수 있습니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AutoComplete">
      <summary v="1aFWnI" i="0">
입력 HTML 요소의 자동 완성 속성을 제어합니다.
기본값 = true
</summary>
    </member>
    <member name="P:AntDesign.Input`1.BindOnInput">
      <summary v="2efoKI" i="0">
입력에서 값을 변경할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Bordered">
      <summary v="2zghRL" i="0">
국경 스타일 여부
</summary>
    </member>
    <member name="P:AntDesign.Input`1.DebounceMilliseconds">
      <summary v="3QPF7H" i="0">
사용자가 멈출 때까지 KeyUp 이벤트의 처리를 지연시킵니다.
미리 정해진 시간 동안 타이핑. 기본값은 250 ms 입니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.DefaultValue">
      <summary v="1t7Dcf" i="0">
초기 입력 내용
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Disabled">
      <summary v="2pb5l" i="0">
입력이 비활성화되었는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.InputElementSuffixClass">
      <summary v="2XanWf" i="0">
입력 요소 클래스에 추가 될 CSS 클래스
마지막 클래스 항목으로.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.MaxLength">
      <summary v="lftDP" i="0">
최대 길이
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnBlur">
      <summary v="ZLSVg" i="0">
입력이 포커스를 잃을 때 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnChange">
      <summary v="ptUEL" i="0">
콘텐츠 변경시 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnClear">
      <summary v="3PGUwN" i="0">
"ClearIcon" 을 클릭하여 콘텐츠가 지워지면 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnFocus">
      <summary v="44qPny" i="0">
입력 포커스를 받을 때 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnInput">
      <summary v="2OIWbo" i="0">
값이 입력 될 때 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnkeyDown">
      <summary v="3ksyLG" i="0">
키를 누르면 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnkeyUp">
      <summary v="2t1JgE" i="0">
키가 릴리스될 때 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnMouseUp">
      <summary v="1ZcYJf" i="0">
마우스 버튼이 해제되면 콜백
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnPressEnter">
      <summary v="1KYPr0" i="0">
Enter 키를 눌렀을 때 트리거되는 콜백 함수
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Placeholder">
      <summary v="4Bbqr0" i="0">
입력 필드의 예상 값을 설명하는 프롬프트 정보 제공
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Prefix">
      <summary v="1gKiV2" i="0">
입력에 대한 접두사 아이콘입니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.ReadOnly">
      <summary v="5klsi" i="0">
존재하는 경우 입력 필드가 읽기 전용임을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.StopPropagation">
      <summary v="35yoCv" i="0">
Onclick을 제어하고 이벤트 전파를 흐리게합니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Suffix">
      <summary v="e99Ci" i="0">
입력에 대한 접미사 아이콘입니다.
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Type">
      <summary v="31w74n" i="0">
입력 유형은 다음을 참조하십시오. MDN (유형 = 'textarea' 대신 'Input.TextArea' 사용)
</summary>
    </member>
    <member name="P:AntDesign.Input`1.WrapperStyle">
      <summary v="2dMr07" i="0">
래퍼의 CSS 스타일을 설정하십시오. 구성 요소가 보일 때 사용됩니다: 접두사/접미사
또는 매개 변수 세트<seealso cref="P:AntDesign.Input`1.AllowClear" />또는 구성 요소:<see cref="T:AntDesign.InputPassword" />
과<see cref="T:AntDesign.Search" />. 이 경우 html 스팬 요소가 사용됩니다.
Html 입력 요소를 포장합니다.
<seealso cref="P:AntDesign.Input`1.WrapperStyle" />스팬 요소에 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.ChildContent">
      <summary v="42rJBC" i="0">
InfutGroup에 의해 포장 된 콘텐츠.
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.Compact">
      <summary v="4LIr5D" i="0">
컴팩트 스타일 사용 여부
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.Size">
      <summary v="46I7pX" i="0">
InputGroup의 크기는 포함된 입력 필드의 크기를 지정합니다.
사용 가능: 큰 기본 작은
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.IconRender">
      <summary v="4TMYeJ" i="0">
사용자 정의 아이콘 렌더링
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.ShowPassword">
      <summary v="2B8kH0" i="0">
비밀번호 표시 여부
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.VisibilityToggle">
      <summary v="1v25GF" i="0">
토글 버튼 표시 여부
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.HiddenMode">
      <summary v="3QUJQe" i="0">
오버레이가 없는 경우 기본적으로 오버레이는 콘텐츠를 렌더링하지 않습니다.
활성화 (적어도 한 번 표시). 설정 HiddenMode = true
렌더링 프로세스를 진행하십시오.
사용 사례: 사용할 때 구성 요소 선택<see cref="T:AntDesign.SimpleSelectOption" />또는<see cref="T:AntDesign.SelectOption`2" />
HiddenMode = true가 필요하므로 선택 옵션이 초기화되고
잠재적인 기본값은 제대로 렌더링될 수 있습니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.HorizontalOffset">
      <summary v="3vWYjR" i="0">
방아쇠와 오버레이 사이의 수평 오프셋, 기본값은 4
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.ParentTrigger">
      <summary v="48SclE" i="0">
중첩 된 오버레이 (예: 메뉴-&gt; 하위 메뉴) 에 사용됩니다.
트리거는 또 다른 오버레이입니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.Trigger">
      <summary v="4bvUky" i="0">
표시할 오버레이를 트리거하는 구성 요소입니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.VerticalOffset">
      <summary v="1HnpzC" i="0">
트리거와 오버레이 사이의 수직 오프셋, 기본값은 4
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.BoundaryAdjustMode">
      <summary v="KChSv" i="0">
오버레이 조정 전략 (예: 브라우저 크기 조정이 발생하는 경우). 체크
세부 사항에 대한 enum.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.ChildContent">
      <summary v="1gMxc" i="0">
트리거 (링크, 버튼 등)
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.ComplexAutoCloseAndVisible">
      <summary v="3UGtkY" i="0">

자동 꺼짐 및 가시 제어 모두 닫힘
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Disabled">
      <summary v="2QRQsZ" i="0">
방아쇠가 비활성화되었는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.HiddenMode">
      <summary v="wznUH" i="0">
오버레이 구성 요소로 전달되는 속성. 오버레이를 참조하십시오
더 자세한 설명을위한 속성.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.InlineFlexMode">
      <summary v="1XN23m" i="0">
(언바운드에서는 사용되지 않음) 래핑 div 스타일을 '디스플레이: 인라인 플렉스;' 로 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.IsButton">
      <summary v="25Xeqt" i="0">
버튼처럼 행동하십시오: 클릭 할 때 클릭 온 클릭
(OnClickDiv가 오버 라이든하고 베이스를 호출하지 않는 한).
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnClick">
      <summary v="3d74MK" i="0">
방아쇠를 클릭하면 콜백
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMaskClick">
      <summary v="ikdSq" i="0">
콜백-트리거 트리거에서 OnMouseUp 이벤트와 동일합니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMouseEnter">
      <summary v="35YiFL" i="0">
마우스가 트리거 경계에 들어갈 때 콜백.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMouseLeave">
      <summary v="1VUc5I" i="0">
마우스가 트리거 경계를 떠날 때 콜백.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnOverlayHiding">
      <summary v="24gkPj" i="0">
오버레이가 숨어있을 때 콜백.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnVisibleChange">
      <summary v="3buQek" i="0">
오버레이 가시성이 변경 될 때 콜백.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Overlay">
      <summary v="2RFxLE" i="0">
오버레이 콘텐츠 (트리거가 활성화 된 후 렌더링 될 내용)
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayClassName">
      <summary v="3QEUgi" i="0">
오버레이 컨테이너 사용자 정의 CSS 클래스.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayEnterCls">
      <summary v="2LgbEv" i="0">
오버레이가 표시 될 때 오버레이에 추가 된 CSS 클래스.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayHiddenCls">
      <summary v="12iLR6" i="0">
오버레이를 숨길 때 오버레이에 추가 된 CSS 클래스.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayLeaveCls">
      <summary v="1PwGmh" i="0">
오버레이가 숨어있을 때 오버레이에 추가 된 CSS 클래스.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayStyle">
      <summary v="2XefjF" i="0">
오버레이 div에 추가 될 CSS 스타일.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.PlacementCls">
      <summary v="WTn3s" i="0">
'배치' 매개 변수를 기반으로하는 기본 배치 클래스를 재정의하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.PopupContainerSelector">
      <summary v="2eHWNH" i="0">
오버레이의 컨테이너가 될 것을 정의합니다.
예제 사용 사례: 오버레이가
스크롤 가능 영역.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Trigger">
      <summary v="40VgVu" i="0">
트리거 모드. 배열을 통과하면 여러 개일 수 있습니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.TriggerReference">
      <summary v="1DTqfD" i="0">
수동으로 트리거링 요소에 대한 참조를 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Unbound">
      <summary v="2o8VWA" i="0">
ElementReference가있는 ChildElement는 div를 감싸지 않도록 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Visible">
      <summary v="18BKHv" i="0">
오버레이 생존력을 토글합니다.
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef.OnCancel">
      <summary v="3A1HW6" i="0">
취소 버튼 또는 가까운 클릭 때 호출
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef.OnOk">
      <summary v="pmyYN" i="0">
Ok 버튼을 클릭하면 호출
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef`1.OnCancel">
      <summary v="uSJz1" i="0">
취소 버튼 또는 가까운 클릭 때 호출
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef`1.OnOk">
      <summary v="xi0GX" i="0">
Ok 버튼을 클릭하면 호출
</summary>
    </member>
    <member name="P:AntDesign.Mentions.LoadOptions">
      <summary v="27wMxz" i="0">
사용자가 @ 기호 뒤에 값을 입력할 때 표시를 위한 언급 옵션을 동적으로 로드합니다.
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.ActiveClass">
      <summary v="2vOtf4" i="0">
NavLink에 적용된 CSS 클래스 이름을 가져오거나 설정합니다.
현재 경로는 NavLink href와 일치합니다.
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.ChildContent">
      <summary v="23NMCf" i="0">
구성 요소의 자식 콘텐츠를 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.Match">
      <summary v="3aS9Lu" i="0">
URL 일치 동작을 나타내는 값을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Modal.AfterClose">
      <summary v="22x97b" i="0">
모달을 닫을 때 호출 할 함수 지정
</summary>
    </member>
    <member name="P:AntDesign.Modal.BodyStyle">
      <summary v="20QVv7" i="0">
모달 바디 요소를위한 바디 스타일. 높이, 패딩 등
</summary>
    </member>
    <member name="P:AntDesign.Modal.CancelButtonProps">
      <summary v="43SP5U" i="0">
취소 버튼 소품
</summary>
    </member>
    <member name="P:AntDesign.Modal.CancelText">
      <summary v="36siBe" i="0">
취소 버튼의 텍스트 또는 RenderFragment는 ModalLocale을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.Modal.Centered">
      <summary v="4ae1Lx" i="0">
중심
</summary>
    </member>
    <member name="P:AntDesign.Modal.ChildContent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Modal.Closable">
      <summary v="6Ku7u" i="0">
닫기 (x) 버튼이 모달 대화 상자의 오른쪽 상단에 표시되는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Modal.CloseIcon">
      <summary v="1Bc5mm" i="0">
더 가까운 아이콘 RenderFragment, 기본값은 "X" 입니다
</summary>
    </member>
    <member name="P:AntDesign.Modal.ConfirmLoading">
      <summary v="3IUGTG" i="0">
OK 버튼에 로딩 시각 효과를 적용할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Modal.DefaultMaximized">
      <summary v="iMY02" i="0">
구성 요소 초기화 중에 Modal을 최대화하면 최대 값을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.Modal.DestroyOnClose">
      <summary v="eSgaw" i="0">
OnClose에서 자식 구성 요소의 마운트 해제 여부, 기본값은 false
</summary>
    </member>
    <member name="P:AntDesign.Modal.Draggable">
      <summary v="2CuRqx" i="0">
모달 대화 상자를 드래그할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Modal.DragInViewport">
      <summary v="4eoCF0" i="0">
뷰포트 내에서만 드래그 앤 드롭
</summary>
    </member>
    <member name="P:AntDesign.Modal.Footer">
      <summary v="geWVh" i="0">
Footer 콘텐츠, 기본 버튼이 필요하지 않을 때 Footer = null로 설정
</summary>
    </member>
    <member name="P:AntDesign.Modal.ForceRender">
      <summary v="2f0TiM" i="0">
열기 전에 모달 돔을 강제로 렌더링할지 여부.
</summary>
    </member>
    <member name="P:AntDesign.Modal.GetContainer">
      <summary v="18bBhe" i="0">
모달 부모 DOM을 가져 오거나 설정하십시오. 기본값은 null입니다. document. body를 지정하는 것입니다.
</summary>
    </member>
    <member name="P:AntDesign.Modal.Header">
      <summary v="2AdhVw" i="0">
헤더 콘텐츠
</summary>
    </member>
    <member name="P:AntDesign.Modal.Keyboard">
      <summary v="4DS9c2" i="0">
닫는 것을 지원 프레스 esc
</summary>
    </member>
    <member name="P:AntDesign.Modal.Locale">
      <summary v="8rCHK" i="0">
모달 로칼
</summary>
    </member>
    <member name="P:AntDesign.Modal.Mask">
      <summary v="4N1u35" i="0">
마스크 표시 여부
</summary>
    </member>
    <member name="P:AntDesign.Modal.MaskClosable">
      <summary v="1DBAFK" i="0">
마스크 (모달 외부 영역) 를 클릭 할 때 모달 대화 상자를 닫는 지 여부
</summary>
    </member>
    <member name="P:AntDesign.Modal.MaskStyle">
      <summary v="37Y5Kb" i="0">
모달 마스크 요소 스타일
</summary>
    </member>
    <member name="P:AntDesign.Modal.MaxBodyHeight">
      <summary v="RA58v" i="0">
최대 모달 내용 몸 높이
</summary>
    </member>
    <member name="P:AntDesign.Modal.Maximizable">
      <summary v="4CJFl8" i="0">
표시 모달 최대화 버튼
</summary>
    </member>
    <member name="P:AntDesign.Modal.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
모달이 정상 상태에있을 때 최대화 버튼의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.Modal.ModalRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Modal.OkButtonProps">
      <summary v="y5TMV" i="0">
OK 버튼 소품
</summary>
    </member>
    <member name="P:AntDesign.Modal.OkText">
      <summary v="3XDkqM" i="0">
RenderFragment OK 버튼의 텍스트는 ModalLocale을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.Modal.OkType">
      <summary v="1XT62s" i="0">
OK 버튼의 버튼 유형
</summary>
    </member>
    <member name="P:AntDesign.Modal.OnCancel">
      <summary v="1CxuiP" i="0">
사용자가 마스크를 클릭하거나 오른쪽 상단의 버튼을 닫거나 버튼을 취소 할 때 호출되는 함수를 지정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Modal.OnOk">
      <summary v="1gOn2R" i="0">
사용자가 OK 버튼을 클릭할 때 호출될 함수 지정
</summary>
    </member>
    <member name="P:AntDesign.Modal.Resizable">
      <summary v="1COtwc" i="0">
(수평 방향만)
</summary>
    </member>
    <member name="P:AntDesign.Modal.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
모달을 최대화 할 때 최대화 버튼의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.Modal.Rtl">
      <summary v="MHb3Z" i="0">
RTL
</summary>
    </member>
    <member name="P:AntDesign.Modal.Title">
      <summary v="1pU6Fn" i="0">
모달 대화 상자의 제목입니다. If<param>제목 템플릿</param>! = Null,<param>제목</param>효력을 발휘하지 않습니다
</summary>
    </member>
    <member name="P:AntDesign.Modal.TitleTemplate">
      <summary v="3xtZMa" i="0">
모달 대화 상자의 제목
</summary>
    </member>
    <member name="P:AntDesign.Modal.Visible">
      <summary v="1nqRXC" i="0">
모달 대화 상자가 보이는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Modal.VisibleChanged">
      <summary v="2xcii5" i="0">
모달 대화 상자가 표시되거나 표시되지 않을 때 함수 호출 지정
</summary>
    </member>
    <member name="P:AntDesign.Modal.Width">
      <summary v="3Ed7Ef" i="0">
모달 대화 상자의 너비, 기본값은 520
</summary>
    </member>
    <member name="P:AntDesign.Modal.WrapClassName">
      <summary v="3xRJ9X" i="0">
모달 대화 상자의 컨테이너의 클래스 이름
</summary>
    </member>
    <member name="P:AntDesign.Modal.ZIndex">
      <summary v="10GCuH" i="0">
모달의 z 인덱스
</summary>
    </member>
    <member name="P:AntDesign.ModalCancelFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalClosingEventArgs.Cancel">
      <summary v="49f55H" i="0">
폐쇄를 취소해야하는지 여부.
닫기를 취소해야하는 경우 true를 설정합니다. 기본값은 false입니다.
。
석연압 true, true true false false 。
</summary>
    </member>
    <member name="P:AntDesign.ModalFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalLocale.CancelText">
      <summary v="3YxACC" i="0">
취소 버튼 텍스트
</summary>
    </member>
    <member name="P:AntDesign.ModalLocale.OkText">
      <summary v="1kbJyX" i="0">
OK 버튼 텍스트
</summary>
    </member>
    <member name="P:AntDesign.ModalOkFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalOptions.AfterClose">
      <summary v="2jjyi0" i="0">
대화 상자가 닫힌 후 트리거
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.BodyStyle">
      <summary v="Bh4MH" i="0">
Ant-모달-바디 스타일
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Closable">
      <summary v="122WS7" i="0">
쇼 ant-모달-클로저
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.CloseIcon">
      <summary v="1Bc5mm" i="0">
더 가까운 아이콘 RenderFragment, 기본값은 "X" 입니다
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.ConfirmLoading">
      <summary v="3IUGTG" i="0">
OK 버튼에 로딩 시각 효과를 적용할지 여부
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Content">
      <summary v="LVRKT" i="0">
아동 콘텐츠
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DefaultMaximized">
      <summary v="iMY02" i="0">
구성 요소 초기화 중에 Modal을 최대화하면 최대 값을 무시합니다.
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DestroyOnClose">
      <summary v="45nYFl" i="0">
모달 폐쇄 후 DOM에서 모달을 제거할지 여부
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Draggable">
      <summary v="3zmBrO" i="0">
드래그 블 모달
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DragInViewport">
      <summary v="4eoCF0" i="0">
뷰포트 내에서만 드래그 앤 드롭
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Footer">
      <summary v="4GmrOX" i="0">
모달 바닥. Footer = = null 인 경우 대화 상자에는 바닥 글이 없습니다.
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Maximizable">
      <summary v="4CJFl8" i="0">
표시 모달 최대화 버튼
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
모달이 정상 상태에있을 때 최대화 버튼의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.OnCancel">
      <summary v="4XxZcU" i="0">
사용자가 마스크를 클릭할 때 호출될 함수를 지정하거나, 오른쪽 상단의 버튼을 닫거나, 취소 버튼을 클릭합니다.
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.OnOk">
      <summary v="1gOn2R" i="0">
사용자가 OK 버튼을 클릭할 때 호출될 함수 지정
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Resizable">
      <summary v="2v6bNP" i="0">
조정 가능
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
모달을 최대화 할 때 최대화 버튼의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Style">
      <summary v="449EWV" i="0">
개미 모달 스타일
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalOptions.WrapClassName">
      <summary v="3xRJ9X" i="0">
모달 대화 상자의 컨테이너의 클래스 이름
</summary>
    </member>
    <member name="P:AntDesign.ModalRef`1.OnCancel">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.ModalRef`1.OnOk">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.NotificationConfig.AnimationClass">
      <summary v="jSnlC" i="0">
중제 출원고, 동화화
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Btn">
      <summary v="3rMr6n" i="0">
자의적 정령 의관
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.ClassName">
      <summary v="JO5pm" i="0">
自定义 CSS 클래스
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.CloseIcon">
      <summary v="3vgdNM" i="0">
自定义义 图
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Description">
      <summary v="4XGzTg" i="0">
통역지성서 내용성,, 현조참사 '렌더프래그먼트'
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Duration">
      <summary v="4USzIz" i="0">
自动적 관언 시조, 一分 。 4.5 后 自动트, nnull 不自动트
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Icon">
      <summary v="4Ai0SO" i="0">
自定义图
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Key">
      <summary v="2OV090" i="0">
前通知 一 志
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Message">
      <summary v="419bj1" i="0">
통지심,, string 者 RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.NotificationType">
      <summary v="1WRYqg" i="0">
Tongticiure
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Placement">
      <summary v="1Cg6Tf" i="0">
出电车
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Style">
      <summary v="1EFSed" i="0">
自定义内分式
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Bottom">
      <summary v="4CcfGP" i="0">
部 出时代, 部 的, 。
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.CloseIcon">
      <summary v="3vgdNM" i="0">
自定义义 图
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Duration">
      <summary v="4USzIz" i="0">
自动적 관언 시조, 一分 。 4.5 后 自动트, nnull 不自动트
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Placement">
      <summary v="1Cg6Tf" i="0">
出电车
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Rtl">
      <summary v="1mUF1k" i="0">
개성서 RTL
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Top">
      <summary v="PvlTX" i="0">
部 出时에, 部 的, 。 。
</summary>
    </member>
    <member name="P:AntDesign.NotificationRef.Config">
      <summary v="1axnfs" i="0">
알림 상자의 구성
</summary>
    </member>
    <member name="P:AntDesign.Progress.Format">
      <summary v="4Lqn3Z" i="0">
콘텐츠의 템플릿 기능
</summary>
    </member>
    <member name="P:AntDesign.Progress.GapDegree">
      <summary v="12RNGJ" i="0">
반 원의 간격 정도, 0 ~ 295
</summary>
    </member>
    <member name="P:AntDesign.Progress.GapPosition">
      <summary v="21CHJQ" i="0">
간격 위치, 옵션: 오른쪽 상단 하단
</summary>
    </member>
    <member name="P:AntDesign.Progress.Percent">
      <summary v="3NOeu0" i="0">
완료율을 설정하려면
</summary>
    </member>
    <member name="P:AntDesign.Progress.ShowInfo">
      <summary v="LnI2g" i="0">
진행 값 및 상태 아이콘을 표시할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Progress.Size">
      <summary v="3T93xE" i="0">
진행 크기
</summary>
    </member>
    <member name="P:AntDesign.Progress.Status">
      <summary v="1r9Emr" i="0">
진행 상태, 옵션: 성공 예외 정상 활성 (선만 해당)
</summary>
    </member>
    <member name="P:AntDesign.Progress.Steps">
      <summary v="42cdeR" i="0">
총 단계 수
</summary>
    </member>
    <member name="P:AntDesign.Progress.StrokeColor">
      <summary v="4XWxFu" i="0">
진행 막대의 색상, 객체를 통과 할 때 선형 기울기 렌더링
원형 진행의 색상, 객체를 통과 할 때 선형 기울기 렌더링
</summary>
    </member>
    <member name="P:AntDesign.Progress.StrokeLinecap">
      <summary v="3jsLOz" i="0">
진행 라인 캡의 스타일을 설정하기 위해
</summary>
    </member>
    <member name="P:AntDesign.Progress.StrokeWidth">
      <summary v="4JZZdB" i="0">
진행 표시줄의 너비를 설정하려면 단위: px
원형 진행률, 단위: 캔버스 너비의 백분율 설정
대시 보드 진행 폭을 설정하려면 단위: 캔버스 너비의 백분율
</summary>
    </member>
    <member name="P:AntDesign.Progress.SuccessPercent">
      <summary v="196roM" i="0">
세분화 된 성공 퍼센트
</summary>
    </member>
    <member name="P:AntDesign.Progress.TrailColor">
      <summary v="zWVJN" i="0">
채워지지 않은 부분의 색상
</summary>
    </member>
    <member name="P:AntDesign.Progress.Type">
      <summary v="3E83zd" i="0">
유형, 옵션을 설정하려면: 라인 서클 대시보드
</summary>
    </member>
    <member name="P:AntDesign.Progress.Width">
      <summary v="1IrjNn" i="0">
원형 진행의 캔버스 너비를 설정하려면 단위: px
대시 보드 진행의 캔버스 너비를 설정하려면 단위: px
</summary>
    </member>
    <member name="P:AntDesign.PropertyColumn`2.Property">
      <summary v="24tPyG" i="0">
이 열의 셀에 표시할 값을 정의합니다.
</summary>
    </member>
    <member name="P:AntDesign.RangePicker`1.Value">
      <summary v="yoUC3" i="0">
입력 값을 가져오거나 설정합니다. 이것은 양방향 바인딩과 함께 사용해야합니다.
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.Rate.AllowClear">
      <summary v="31ACLe" i="0">
后
</summary>
    </member>
    <member name="P:AntDesign.Rate.AllowHalf">
      <summary v="4eosQT" i="0">
许
</summary>
    </member>
    <member name="P:AntDesign.Rate.AutoFocus">
      <summary v="3fMFPR" i="0">

</summary>
    </member>
    <member name="P:AntDesign.Rate.Character">
      <summary v="Ria0m" i="0">
自定义字, 星星 自定义字 代
</summary>
    </member>
    <member name="P:AntDesign.Rate.Count">
      <summary v="21NjXr" i="0">
无的 성성기환상
</summary>
    </member>
    <member name="P:AntDesign.Rate.DefaultValue">
      <summary v="35fCJO" i="0">
前 中的 星星, 小 不 0,
</summary>
    </member>
    <member name="P:AntDesign.Rate.Disabled">
      <summary v="mwwY0" i="0">
가용
</summary>
    </member>
    <member name="P:AntDesign.Rate.Tooltips">
      <summary v="1bbY12" i="0">
자정령 의인 信 ()
</summary>
    </member>
    <member name="P:AntDesign.Rate.Value">
      <summary v="3AqHuX" i="0">
前과가 -- 中的 星星
</summary>
    </member>
    <member name="P:AntDesign.RateItemRenderContext.Type">
      <summary v="34NDQy" i="0">
'안티콘' | '다음'
</summary>
    </member>
    <member name="P:AntDesign.Result.IsShowIcon">
      <summary v="2WCoGi" i="0">
문답,
</summary>
    </member>
    <member name="P:AntDesign.Result.Status">
      <summary v="2RoVqZ" i="0">
성공 | 오류 | 정보 | 경고 | 404 | 403 | 500
기본: 정보
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Body">
      <summary v="151KL0" i="0">
페이지 내용을 사용자 정의하기위한 템플릿입니다.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Draggable">
      <summary v="3ONg1t" i="0">
탭을 끌고 떨어 뜨릴 수 있는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.HidePages">
      <summary v="2DzMAJ" i="0">
페이지 표시를 숨기고 제목 탭만 유지할지 여부. 그럼 당신은 사용할 수 있습니다<see cref="T:AntDesign.ReusePages" />페이지 conent를 표시합니다.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Locale">
      <summary v="2Y3MCv" i="0">
현지화 설정.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.ReuseTabsRouteData">
      <summary v="2MfoI1" i="0">
직렬화 가능한 버전 인 현재 페이지의 라우팅 정보<see cref="T:Microsoft.AspNetCore.Components.RouteData" />.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Size">
      <summary v="2haZnj" i="0">
탭의 크기입니다.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.TabPaneClass">
      <summary v="1gD4lo" i="0">
내부 탭 창의 클래스 이름입니다.
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabsService.Pages">
      <summary v="1FZzbS" i="0">
캐싱 및 복구에 사용할 수있는 현재 열린 페이지의 페이지 정보 목록
</summary>
    </member>
    <member name="P:AntDesign.Row.Align">
      <summary v="mIvIE" i="0">
'상단' | '중간' | '바닥'
</summary>
    </member>
    <member name="P:AntDesign.Row.DefaultBreakpoint">
      <summary v="2gg4aQ" i="0">
사전 렌더링 중에 거터를 설정하는 데 사용
</summary>
    </member>
    <member name="P:AntDesign.Row.Justify">
      <summary v="Ugi9m" i="0">
'시작' | '끝' | '중심' | '공간-주변' | '우주-사이'
</summary>
    </member>
    <member name="P:AntDesign.Search.ClassicSearchIcon">
      <summary v="1cvZKm" i="0">
검색 입력은 단추가 아닌 접미사 검색 아이콘으로 렌더링됩니다.
EnterButton != false 때 무시됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Search.EnterButton">
      <summary v="3Lcudq" i="0">
입력 후 입력 버튼을 표시할지 여부. 이 속성은 AddonAfter 속성과 충돌합니다.
</summary>
    </member>
    <member name="P:AntDesign.Search.Loading">
      <summary v="4HPN9Y" i="0">
로딩 검색 상자
</summary>
    </member>
    <member name="P:AntDesign.Search.OnSearch">
      <summary v="2YV1Az" i="0">
검색 아이콘, 지우기 아이콘을 클릭하거나 Enter 키를 누르면 콜백 기능이 트리거됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select.Internal.SelectOptionItem`2.SelectedTagRef">
      <summary v="r6r8j" i="0">
에 의해 사용될 ElementRef<see cref="T:AntDesign.Select.Internal.SelectContent`2" />만
선택한 모드 = 다중 및 MaxTagCount = 응답
</summary>
    </member>
    <member name="P:AntDesign.Select.Internal.SelectSuffixIcon`2.ShowSearchIcon">
      <summary v="1mzP4W" i="0">
단일 모드에서 검색 입력을 표시하는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.Select.LabelTemplateItem`2.Ref">
      <summary v="3v0RLn" i="0">
DOM 요소에 대한 반환 ElementRef 참조.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.Bordered">
      <summary v="3MXGxp" i="0">
국경 스타일을 토글.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DataSource">
      <summary v="3vflFW" i="0">
이 구성 요소에 대한 데이터 소스.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DataSourceEqualityComparer">
      <summary v="2AEbcd" i="0">
DataSource 변경 중에 사용되는 EqualityComparer
탐지. 비교기 세트가 없으면 기본값. 그물은
사용.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DefaultActiveFirstOption">
      <summary v="gQ3Lr" i="0">
비활성화되지 않은 첫 번째 항목을 활성화합니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DefaultValue">
      <summary v="f4vCE" i="0">
Mode = default-값은 초기화 중에 그리고 Forms 내에서 재설정 버튼을 누를 때 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DisabledName">
      <summary v="4Y7Gl5" i="0">
비활성화 표시기로 사용할 속성의 이름입니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DisabledPredicate">
      <summary v="ksaX5" i="0">
비활성화 된 옵션에 대한 술어 지정
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DropdownMatchSelectWidth">
      <summary v="3jo742" i="0">
익사 너비와 일치합니다:
-부울: true-드롭 다운 목록에서 가장 넓은 항목
-문자열: 값 (예: "256px")
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DropdownMaxWidth">
      <summary v="1LaV7G" i="0">
드롭 다운 너비가 여기에 명시된 값 (예: "768px")
</summary>
    </member>
    <member name="P:AntDesign.Select`2.EnableVirtualization">
      <summary v="39WGkE" i="0">
가상화 기능을 활성화할지 여부는 해당 기능에만 적용됩니다. NET 5 이상
</summary>
    </member>
    <member name="P:AntDesign.Select`2.GroupName">
      <summary v="35WDeN" i="0">
그룹 표시기로 사용할 속성의 이름입니다.
값이 설정되면 항목이 그룹으로 표시됩니다.
추가 SortByGroup 및 SortByLabel 사용.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.IgnoreItemChanges">
      <summary v="419yAi" i="0">
속도를 높이는 데 사용됩니다. 레이블 이름이 변경될 경우
그룹 이름 또는 비활성화 된 표시기는이 속성을 비활성화합니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.IsGroupingEnabled">
      <summary v="23rvdX" i="0">
GroupName 이 사용되는지 여부를 나타냅니다. 이 값이 True 인 경우 선택 옵션은 그룹 모드로 렌더링됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ItemTemplate">
      <summary v="3q66H2" i="0">
항목 스타일을 사용자 정의하는 데 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.LabelProperty">
      <summary v="3Tbo9L" i="0">
옵션 개체에서 레이블 속성을 지정합니다. 이 속성을 사용하는 경우 사용하지 마십시오.<see cref="!:LabelName" /></summary>
    </member>
    <member name="P:AntDesign.Select`2.NotFoundContent">
      <summary v="3ITps3" i="0">
결과가 일치하지 않을 때 표시할 콘텐츠를 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnBlur">
      <summary v="3D7tWb" i="0">
흐려질 때 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnCreateCustomTag">
      <summary v="3KnduO" i="0">
사용자 지정 태그를 만들 때 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnDataSourceChanged">
      <summary v="3DoqQL" i="0">
데이터 소스 변경 시 호출됩니다. Null에서<see cref="T:System.Collections.Generic.IEnumerable`1" />,
에서<see cref="T:System.Collections.Generic.IEnumerable`1" />에<see cref="T:System.Collections.Generic.IEnumerable`1" />
또는<see cref="T:System.Collections.Generic.IEnumerable`1" />Null.
내부의 값이 트리거되지 않습니다.<see cref="T:System.Collections.Generic.IEnumerable`1" />변경.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnDropdownVisibleChange">
      <summary v="QTkZe" i="0">
드롭 다운 가시성이 변경되면 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnSearch">
      <summary v="1JqXvj" i="0">
입력이 변경 될 때 발사되는 콜백 기능.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ShowArrowIcon">
      <summary v="3T7UEw" i="0">
드롭 다운 화살표를 표시할지 여부
</summary>
    </member>
    <member name="P:AntDesign.Select`2.TokenSeparators">
      <summary v="2uDnIP" i="0">
새로 생성 된 태그에 대한 토큰 구분 기호로 취급 될 문자를 정의합니다.
키보드 만 사용하여 새 태그를 만들 때 유용합니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.Value">
      <summary v="4UcFXa" i="0">
선택한 값을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ValueChanged">
      <summary v="1koZkv" i="0">
양방향 바인딩에 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ValueProperty">
      <summary v="2FBrf9" i="0">
옵션 개체의 값 속성을 지정합니다. 이 속성을 사용하는 경우 사용하지 마십시오.<see cref="!:ValueName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AccessKey">
      <summary v="290XqI" i="0">
Accesskey 글로벌 속성입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ActiveOption">
      <summary v="3ReKb8" i="0">
현재 활성 (강조 표시된) 옵션입니다.
선택한 옵션과 같을 필요는 없습니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AllowClear">
      <summary v="4g3Xf1" i="0">
클리어 버튼을 표시합니다. 효과가 없다면<see cref="P:AntDesign.AntInputComponentBase`1.Value" />기본 유형
또한 목록에 있습니다.<see cref="T:AntDesign.SelectOption`2" />,
와 함께 사용하지 않는 한<see cref="P:AntDesign.SelectBase`2.ValueOnClear" />.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AutoClearSearchValue">
      <summary v="4LMxuO" i="0">
항목을 선택할 때 현재 검색이 삭제되는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
오버레이 조정 전략 (예: 브라우저 크기 조정이 발생하는 경우)
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.CustomTagLabelToValue">
      <summary v="3EMaK3" i="0">
사용자 지정 태그 (문자열) 를 TittemValue 유형으로 변환합니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.DefaultValues">
      <summary v="2J5DPu" i="0">
Mode = multiple | tags-값은 초기화 중에 그리고 Forms 내에서 재설정 버튼을 누를 때 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Disabled">
      <summary v="2bl4pp" i="0">
선택 구성 요소가 비활성화되었는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.DropdownRender">
      <summary v="4Zzqb3" i="0">
드롭 다운 콘텐츠를 사용자 정의합니다. 컨텍스트는 원본 콘텐츠입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.EnableSearch">
      <summary v="2naqqM" i="0">
검색 함수가 활성 상태인지 여부를 나타냅니다. 모드 태그는 항상 true.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.HasValue">
      <summary v="4VVb1k" i="0">
SelectOptions에 선택한 항목이 있는지 확인
</summary>
      <returns v="2R5twB" i="0">SelectOptions에 선택한 항목이 있으면 true, 그렇지 않으면 false</returns>
    </member>
    <member name="P:AntDesign.SelectBase`2.HideSelected">
      <summary v="4AwoTD" i="0">
선택한 항목을 선택하면 숨깁니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.IsSearchEnabled">
      <summary v="2ABzzv" i="0">
사용자가 일치하는 항목을 검색하기 위해 패턴을 입력 할 수 있는지 여부를 반환
</summary>
      <returns v="3ORAAp" i="0">검색이 활성화 된 경우 true</returns>
    </member>
    <member name="P:AntDesign.SelectBase`2.ItemLabel">
      <summary v="4Yg7SF" i="0">
옵션 개체에서 레이블 속성을 지정합니다. 이 속성을 사용하는 경우 사용하지 마십시오.<see cref="P:AntDesign.SelectBase`2.LabelName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ItemValue">
      <summary v="1CAphC" i="0">
옵션 개체의 값 속성을 지정합니다. 이 속성을 사용하는 경우 사용하지 마십시오.<see cref="P:AntDesign.SelectBase`2.ValueName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelInValue">
      <summary v="1U3ymK" i="0">
레이블을 값에 포함할지 여부 TittemValue에서 문자열 (JSON) 로 값 형식을 전환
예: {"value": TittemValue, "label": "Label value"}
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelName">
      <summary v="3AwSrr" i="0">
레이블에 사용할 속성 이름입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelTemplate">
      <summary v="hwEOh" i="0">
레이블 스타일을 사용자 정의하는 데 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LastValueBeforeReset">
      <summary v="44YdO2" i="0">
SelectOptionItems에서 새로 설정된 값을 찾을 수 없으면
기본값. 이 속성은 재설정 전에 값을 보유합니다. 필요할 수 있습니다.
Reaplied (예: 새 값이 동시에 설정된 경우
새 SelectOption이 추가되지만 구성 요소의 값이 설정됩니다.
새로운 SelectOptionItem이 생성되기 전에).
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Loading">
      <summary v="3cOuxj" i="0">
로딩 표시기를 표시합니다. 로딩 논리를 직접 작성해야합니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagCount">
      <summary v="3GSRJr" i="0">
최대 태그 수를 표시합니다. 응답 비용 렌더링 성능.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagPlaceholder">
      <summary v="3mQAeT" i="0">
숨겨진 태그를위한 자리 표시자. ResponsiveTag. Responsive와 함께 사용하는 경우 자체 처리 논리를 구현하십시오.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagTextLength">
      <summary v="3C8N89" i="0">
얼마나 긴 (문자 수) 태그가 될 것입니다.
모드 = "다중" 또는 모드 = "태그" 에 대해서만
</summary>
      <value>
            The maximum length of the tag text.
            </value>
    </member>
    <member name="P:AntDesign.SelectBase`2.Mode">
      <summary v="3S2B5T" i="0">
선택-디폴트의 설정 모드 | 다중 | 태그
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnClearSelected">
      <summary v="14UtFb" i="0">
사용자가 선택을 지울 때 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnFocus">
      <summary v="1ERQAl" i="0">
초점을 맞출 때 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnMouseEnter">
      <summary v="46zJaG" i="0">
마우스가 들어갈 때 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnMouseLeave">
      <summary v="ninB2" i="0">
마우스가 떠날 때 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnSelectedItemChanged">
      <summary v="2ittuq" i="0">
선택한 항목이 변경되면 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnSelectedItemsChanged">
      <summary v="g9Onl" i="0">
선택한 항목이 변경되면 호출됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Open">
      <summary v="2tPov4" i="0">
제어 된 드롭 다운 오픈 상태.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Placeholder">
      <summary v="4QgNG1" i="0">
선택의 자리 표시 자.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.PopupContainerSelector">
      <summary v="2FFcRl" i="0">
예를 들어 # area 오버레이 문제를 해결하려면 이것을 사용하십시오.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.PrefixIcon">
      <summary v="YZqdW" i="0">
사용자 지정 접두사 아이콘입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SearchDebounceMilliseconds">
      <summary v="2lpe12" i="0">
사용자가 멈출 때까지 검색 입력 이벤트의 처리를 지연시킵니다.
미리 정해진 시간 동안 타이핑. 기본값은 250ms 입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SelectOptions">
      <summary v="2msqsT" i="0">
선택 옵션을 수동으로 렌더링하는 데 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ShowSearchIcon">
      <summary v="1mzP4W" i="0">
단일 모드에서 검색 입력을 표시하는지 여부.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortByGroup">
      <summary v="35WDeN" i="0">
그룹 표시기로 사용할 속성의 이름입니다.
값이 설정되면 항목이 그룹으로 표시됩니다.
추가 SortByGroup 및 SortByLabel 사용.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortByLabel">
      <summary v="2TkxTE" i="0">
레이블 값으로 항목을 정렬합니다. 없음 | Ascending | 내림
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortedSelectOptionItems">
      <summary v="2ME8BB" i="0">
SelectOptionItems의 정렬 목록
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SuffixIcon">
      <summary v="20vubH" i="0">
사용자 지정 접미사 아이콘입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueChanged">
      <summary v="1koZkv" i="0">
양방향 바인딩에 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueName">
      <summary v="1eRofc" i="0">
값에 사용할 속성의 이름입니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueOnClear">
      <summary v="3t8E6Y" i="0">
지우기 버튼을 누르면 값이
ValueOnClear에 설정된 것은 무엇이든
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Values">
      <summary v="38zUL6" i="0">
선택한 값을 가져오거나 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValuesChanged">
      <summary v="1koZkv" i="0">
양방향 바인딩에 사용됩니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Disabled">
      <summary v="zh3il" i="0">
이 옵션 비활성화
매개 변수는 SelectOption을 직접 만든 경우에만 사용해야합니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Label">
      <summary v="44K7nB" i="0">
이 옵션을 선택한 후 선택 레이블
매개 변수는 SelectOption을 직접 만든 경우에만 사용해야합니다.
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Value">
      <summary v="2QHMVs" i="0">
이 옵션을 선택한 후 선택 값
매개 변수는 SelectOption을 직접 만든 경우에만 사용해야합니다.
</summary>
    </member>
    <member name="P:AntDesign.Sider.Trigger">
      <summary v="1wXYCU" i="0">
Trigger가 null이면 'Collapse' 가 변경된 후 'OnCollapse' 가 호출되지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Avatar">
      <summary v="30BLfE" i="0">
电图
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Paragraph">
      <summary v="4CRksF" i="0">
电图
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Title">
      <summary v="iORgL" i="0">
电图
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.DefaultValue">
      <summary v="3Dmrok" i="0">
슬라이더의 기본값입니다. 언제<see cref="P:AntDesign.Slider`1.Range" />False, 사용 번호, 그렇지 않으면 사용 [번호, 번호]
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Disabled">
      <summary v="vRGcV" i="0">
True이면 슬라이더가 상호 작용하지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Dots">
      <summary v="3aNKAY" i="0">
엄지 손가락이 진드기 위로 드래그 할 수 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.GetTooltipPopupContainer">
      <summary v="1HMa3g" i="0">
Tooltip의 DOM 컨테이너, 기본 동작은 본문에 div 요소를 만드는 것입니다.
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Included">
      <summary v="2gasHt" i="0">
효과를 때<see cref="P:AntDesign.Slider`1.Marks" />Null, trul은 격리를 의미하고 거짓은 조정을 의미합니다.
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Marks">
      <summary v="3CLKnZ" i="0">
슬라이더의 틱 마크, 키 유형은 숫자 여야하며 닫힌 간격 [min, max] 에 있어야하며 각 마크는 자체 스타일을 선언 할 수 있습니다.
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Max">
      <summary v="4PpL6k" i="0">
슬라이더가 슬라이드 할 수있는 최대 값
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Min">
      <summary v="4F0VRd" i="0">
슬라이더가 슬라이드할 수 있는 최소값
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.OnAfterChange">
      <summary v="pI4j4" i="0">
Onmouseup이 발사 될 때 화재.
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.OnChange">
      <summary v="2m7PQ6" i="0">
사용자가 슬라이더의 값을 변경할 때 발사되는 콜백 기능.
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.TooltipPlacement">
      <summary v="1muwp0" i="0">
도구 팁 표시 위치를 설정하십시오. Ref 툴팁
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Value">
      <summary v="yoUC3" i="0">
입력 값을 가져오거나 설정합니다. 이것은 양방향 바인딩과 함께 사용해야합니다.
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.Slider`1.Vertical">
      <summary v="1XK2I0" i="0">
True이면 슬라이더가 수직이됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Space.Align">
      <summary v="3RqhIi" i="0">
시작 | 끝 | 센터 | 기준선
</summary>
    </member>
    <member name="P:AntDesign.Spin.Size">
      <summary v="78EEm" i="0">
작은 | 기본값 | 큰
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Prefix">
      <summary v="40wKuF" i="0">
的 전
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Suffix">
      <summary v="3cvVXk" i="0">
的 后 trop
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Title">
      <summary v="6Azy8" i="0">
Entificial
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Value">
      <summary v="4KtQ9J" i="0">
内용
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.ValueStyle">
      <summary v="14cxCL" i="0">
的
</summary>
    </member>
    <member name="P:AntDesign.Switch.Control">
      <summary v="n71vy" i="0">
스위치의 상태는 완전히 사용자에게 달려 있으며 더 이상
클릭 이벤트를 기반으로 데이터를 자동으로 변경합니다.
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DefaultExpandMaxLevel">
      <summary v="1EN01t" i="0">
DefaultExpandAllows를 사용할 때 최대 확장 수준.
이 속성은 트리 레코드에 원형 참조가 있을 때 무한 루프를 피하기 위해 사용됩니다.
기본값은 4 입니다.
</summary>
    </member>
    <member name="P:AntDesign.Table`1.EnableVirtualization">
      <summary v="39WGkE" i="0">
가상화 기능을 활성화할지 여부는 해당 기능에만 적용됩니다. NET 5 이상
</summary>
    </member>
    <member name="P:AntDesign.Table`1.PaginationPosition">
      <summary v="hyz7X" i="0">
TopLeft | topCenter | topRight | bottomLeft | bottomCenter | bottomRight
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Resizable">
      <summary v="3IDB7H" i="0">
크기 조정 가능한 열 활성화
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SelectedRows">
      <summary v="2mLBpB" i="0">
페이지에 걸쳐 선택한 행
</summary>
    </member>
    <member name="P:AntDesign.TableModels.RowData`1.Children">
      <summary v="3jUogV" i="0">
어린이 행의 상태를 유지
</summary>
    </member>
    <member name="P:AntDesign.TabPane.ForceRender">
      <summary v="2Cvjf8" i="0">
탭을 클릭 한 후 게으른 렌더링이 아닌 탭에서 콘텐츠의 강제 렌더링
</summary>
    </member>
    <member name="P:AntDesign.TabPane.Key">
      <summary v="2YYIS2" i="0">
TabPane의 열쇠
</summary>
    </member>
    <member name="P:AntDesign.TabPane.Tab">
      <summary v="8N7Wf" i="0">
에 텍스트 표시<see cref="T:AntDesign.TabPane" />의 머리
</summary>
    </member>
    <member name="P:AntDesign.Tabs.ActiveKey">
      <summary v="2FY5Zq" i="0">
현재<see cref="T:AntDesign.TabPane" />의<see cref="P:AntDesign.TabPane.Key" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.Animated">
      <summary v="2fNQfe" i="0">
애니메이션으로 탭을 변경할지 여부. 만 작동하는 동안<see cref="P:AntDesign.Tabs.TabPosition" />=<see cref="F:AntDesign.TabPosition.Top" />또는<see cref="F:AntDesign.TabPosition.Bottom" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.DefaultActiveKey">
      <summary v="CcZho" i="0">
초기 활성<see cref="T:AntDesign.TabPane" />의<see cref="P:AntDesign.TabPane.Key" />,<see cref="P:AntDesign.Tabs.ActiveKey" />설정되지 않았습니다.
</summary>
    </member>
    <member name="P:AntDesign.Tabs.HideAdd">
      <summary v="3x3txU" i="0">
더하기 아이콘 숨기기. 만 작동하는 동안<see cref="P:AntDesign.Tabs.Type" />=<see cref="F:AntDesign.TabType.EditableCard" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.OnChange">
      <summary v="ozKGD" i="0">
활성 탭이 변경되면 콜백 실행
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnClose">
      <summary v="24p9uY" i="0">
탭이 닫히면 콜백
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnEdit">
      <summary v="2pplmx" i="0">
탭이 추가되거나 제거되면 콜백이 실행됩니다. 만 작동하는 동안<see cref="P:AntDesign.Tabs.Type" />=<see cref="F:AntDesign.TabType.EditableCard" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.OnTabClick">
      <summary v="nzs2r" i="0">
탭을 클릭하면 콜백 실행
</summary>
    </member>
    <member name="P:AntDesign.Tabs.RenderTabBar">
      <summary v="4bb92P" i="0">
TabBar 교체
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Size">
      <summary v="2uRSg3" i="0">
사전 설정 탭 바 크기
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarClass">
      <summary v="3e35Zi" i="0">
탭 바 CSS 클래스
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContent">
      <summary v="3x7TO1" i="0">
탭 바의 추가 내용
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarGutter">
      <summary v="2R1oV0" i="0">
탭 사이의 간격
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarStyle">
      <summary v="3aIVwY" i="0">
탭 바 스타일 객체
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabPosition">
      <summary v="4ceKgX" i="0">
탭의 위치
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Type">
      <summary v="sK3mA" i="0">
탭의 기본 스타일
</summary>
    </member>
    <member name="P:AntDesign.Tag.Checkable">
      <summary v="4SrypX" i="0">
태그를 확인할 수 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Tag.Checked">
      <summary v="420tmQ" i="0">
태그의 확인된 상태
</summary>
    </member>
    <member name="P:AntDesign.Tag.CheckedChanged">
      <summary v="1VfqF2" i="0">
태그가 체크되거나 체크되지 않을 때 콜백 실행
</summary>
    </member>
    <member name="P:AntDesign.Tag.ChildContent">
      <summary v="4FUS9X" i="0">
태그 내용
</summary>
    </member>
    <member name="P:AntDesign.Tag.Closable">
      <summary v="E9gms" i="0">
태그를 닫을 수 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Tag.Color">
      <summary v="2JUVUq" i="0">
태그 색상. 미리 정의 된 색상 (문자열) 일 수 있습니다.
또는 육각색.
</summary>
    </member>
    <member name="P:AntDesign.Tag.Icon">
      <summary v="21J6lk" i="0">
태그의 아이콘 설정
</summary>
    </member>
    <member name="P:AntDesign.Tag.IconTheme">
      <summary v="3RjsZn" i="0">
'필링' | '아웃라인' | 'twotone';
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClick">
      <summary v="3I8uAB" i="0">
태그를 클릭하면 콜백 실행 (호출되지 않음)
닫는 아이콘을 클릭 할 때).
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClose">
      <summary v="2cb9Pq" i="0">
태그가 닫히면 콜백 실행
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClosing">
      <summary v="3vb75u" i="0">
진정한 닫기 전에 트리거, 폐쇄를 방지 할 수 있습니다
</summary>
    </member>
    <member name="P:AntDesign.Tag.Visible">
      <summary v="1Wdmg" i="0">
태그가 닫혀 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.TemplateComponentBase`1.Options">
      <summary v="11Cl1m" i="0">
외부에서 템플릿을 전달할 수있는 옵션
</summary>
    </member>
    <member name="P:AntDesign.TextArea.AutoSize">
      <summary v="bWvi3" i="0">
내용에 따라 'TextArea '를 조정 (성장 또는 축소) 합니다.
'MaxRows' 및 'MinRows' 와 관련하여 작업 할 수 있습니다.
Textarea HTML 요소의 크기 조정 속성을: none 으로 설정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TextArea.DefaultToEmptyString">
      <summary v="1OUfFJ" i="0">
'거짓' 일 때 콘텐츠가 비어있을 때 값이 'null' 으로 설정됩니다.
또는 공백. 'True' 이면 값이 빈 문자열로 설정됩니다.
</summary>
    </member>
    <member name="P:AntDesign.TextArea.MaxRows">
      <summary v="eoMTf" i="0">
'TextArea' 는 성장을 허용하지만 볼 때 중단됩니다.
행 = MaxRows (더 이상 성장하지 않음).
기본값 = uint.MaxValue
</summary>
    </member>
    <member name="P:AntDesign.TextArea.MinRows">
      <summary v="T6VLX" i="0">
'TextArea' 는 축소를 허용하지만 볼 때 중지됩니다.
행 = MinRows (더 이상 축소되지 않음).
기본값 = DEFAULT_MIN_ROWS = 1
</summary>
    </member>
    <member name="P:AntDesign.TextArea.OnResize">
      <summary v="41j1op" i="0">
크기가 변경되면 콜백
</summary>
    </member>
    <member name="P:AntDesign.TextArea.Rows">
      <summary v="A2xJ8" i="0">
행 수로 표현된 TextArea의 높이를 설정합니다.
기본값은 2 입니다.
</summary>
    </member>
    <member name="P:AntDesign.TextArea.Value">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.Timeline.Mode">
      <summary v="2SBVs1" i="0">
'좌우' | '번갈아' | '맞다'
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ListStyle">
      <summary v="Hovrn" i="0">
전송 열을 렌더링하는 데 사용되는 사용자 지정 CSS 스타일
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.BlockNode">
      <summary v="1C1tz" i="0">
트리 노드가 나머지 수평 공간을 채우는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Checkable">
      <summary v="2AZD7w" i="0">
노드 앞에 체크 박스 추가
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckableExpression">
      <summary v="rEuK6" i="0">
체크 가능한 노드를 반환하는 방법을 지정합니다
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckedKeys">
      <summary v="2X1ZjM" i="0">
확인 된 키
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckedKeysChanged">
      <summary v="14s0ey" i="0">
@ Bind-CheckedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckOnClickNode">
      <summary v="1ewR9Z" i="0">
체크 가능한 경우 TreeNodeTitle을 클릭하여 노드를 확인하거나 선택 취소합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckStrictly">
      <summary v="42UEkh" i="0">
트리 노드를 정확하게 확인하십시오. 부모 트리 노드 및 어린이 트리 노드는 연관되지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildNodes">
      <summary v="1SoIAs" i="0">
트리 아동 노드
노드가 초기화 될 때 값 추가
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildrenExpression">
      <summary v="1a94kF" i="0">
자식 노드를 반환하는 방법을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DataSource">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Tree`1.DefaultCheckedKeys">
      <summary v="18LgiI" i="0">
기본 체크 트리 노드의 키를 지정
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandAll">
      <summary v="2oK5An" i="0">
모든 트리 노드는 기본적으로 확장됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandedKeys">
      <summary v="2sJkXY" i="0">
지정된 트리 노드를 기본적으로 확장
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandParent">
      <summary v="lOqhO" i="0">
부모 노드는 기본적으로 확장됩니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DisableCheckKeys">
      <summary v="1cxA3L" i="0">
노드 체크 박스 비활성화
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Disabled">
      <summary v="1QaL60" i="0">
나무가 비활성화되었습니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DisabledExpression">
      <summary v="4QpUNh" i="0">
비활성화 된 노드를 반환하는 방법을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Draggable">
      <summary v="1IFV7v" i="0">
노드가 드래그 앤 드롭을 허용하는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DragItem">
      <summary v="2APWtc" i="0">
前
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ExpandedKeys">
      <summary v="4d5ThB" i="0">
(제어) 지정된 트리 노드를 확장합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ExpandOnClickNode">
      <summary v="1DJafz" i="0">
TreeNodeTitle을 클릭하여 노드를 확장하거나 축소
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IconExpression">
      <summary v="37B3eq" i="0">
노드 아이콘을 반환하는 방법을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IndentTemplate">
      <summary v="3FAxcU" i="0">
들여 쓰기 템플릿
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IsLeafExpression">
      <summary v="3OYLNx" i="0">
표현식이 리프 노드인지 여부를 반환하는 메서드를 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.KeyExpression">
      <summary v="3F1pUh" i="0">
노드의 키를 반환하는 메서드를 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.MatchedStyle">
      <summary v="3XV05o" i="0">
일치하는 텍스트 스타일 검색
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Multiple">
      <summary v="2dQlNQ" i="0">
여러 트리 노드를 선택할 수 있습니다
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnCheck">
      <summary v="8TDXd" i="0">
트리 노드 콜백 확인
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnClick">
      <summary v="3qs9fw" i="0">
트리 노드 콜백 클릭
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnContextMenu">
      <summary v="27GI7h" i="0">
오른쪽 클릭 트리 노드 콜백
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDblClick">
      <summary v="uIvkf" i="0">
노드 콜백을 두 번 클릭하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragEnd">
      <summary v="1L8CiD" i="0">
드래그 앤 드롭 엔드 콜백
</summary>
      <remarks>this callback method must be set</remarks>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragEnter">
      <summary v="2O4Pxh" i="0">
해제 가능한 대상에 드래그 앤 드롭시 호출
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragLeave">
      <summary v="1dobxG" i="0">
해제 가능한 타겟에서 드래그 앤 드롭 할 때 호출
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragStart">
      <summary v="31ndc9" i="0">
드래그 앤 드롭이 시작될 때 호출
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDrop">
      <summary v="1yoUYO" i="0">
드래그 앤 드롭 드롭이 성공하면 트리거
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnExpandChanged">
      <summary v="2pqvwr" i="0">
다시 호출하려면 확장 트리 노드 아이콘을 클릭하십시오.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnNodeLoadDelayAsync">
      <summary v="3A2c9f" i="0">
게으른 부하 콜백
</summary>
      <remarks>You must use async and the return type is Task, otherwise you may experience load lag and display problems</remarks>
    </member>
    <member name="P:AntDesign.Tree`1.SearchValue">
      <summary v="3gNRzP" i="0">
검색 값
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Selectable">
      <summary v="1x7lyW" i="0">
선택할 수 있는지 여부
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedData">
      <summary v="2vGOEn" i="0">
@ Bing-SelectedData
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDatas">
      <summary v="M11OA" i="0">
선택한 데이터 세트
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKey">
      <summary v="3KNPSJ" i="0">
@ Bind-SelectedKey
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeyChanged">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeys">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNode">
      <summary v="1nxXOb" i="0">
@ Bind-선택 노드
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodes">
      <summary v="23S8go" i="0">
선택한 노드 모음
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowExpand">
      <summary v="T2Gv1" i="0">
노드 앞에 확장 아이콘을 표시합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowIcon">
      <summary v="33jgCa" i="0">
표시 트리 노드 아이콘 아이콘
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowLeafIcon">
      <summary v="32TlPX" i="0">
Cotyledon 아이콘을 표시
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowLine">
      <summary v="2Gh5TZ" i="0">
연결 선을 표시합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SwitcherIcon">
      <summary v="3bRdwq" i="0">
특정 스위치 아이콘 유형
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SwitcherIconTemplate">
      <summary v="4OLQVz" i="0">
토글 아이콘 템플릿 사용자 정의
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleExpression">
      <summary v="17Cqdr" i="0">
노드의 텍스트를 반환하는 메서드를 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleIconTemplate">
      <summary v="2cC9bk" i="0">
아이콘 템플릿 사용자 지정
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleTemplate">
      <summary v="a0sZ5" i="0">
헤더 템플릿 사용자 지정
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.DropBelow">
      <summary v="34DM5g" i="0">
드래그 노드를 형제 (아래) 또는 대상 노드의 자식으로 드롭할지 여부.
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.OriginalEvent">
      <summary v="15L2Au" i="0">
원 사 생 사건
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.TargetNode">
      <summary v="1F0Y2X" i="0">
정석
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.SelfNode">
      <summary v="4bZ677" i="0">
현재 노드
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.TreeComponent">
      <summary v="1uvHBZ" i="0">
루트 트리
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Checked">
      <summary v="1ZPUcx" i="0">
TreeNode 확인 여부
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DisableCheckbox">
      <summary v="2pFfjr" i="0">
체크 박스 비활성화
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Disabled">
      <summary v="2mtrZP" i="0">
비활성화 된 상태는 부모 노드의 영향을받습니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DragTarget">
      <summary v="2I6Teb" i="0">
대상 공개 여부
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DragTargetBottom">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.Expanded">
      <summary v="1dJKzH" i="0">
노드 확장 여부
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.HasChildMatched">
      <summary v="2XEPG2" i="0">
자성선대모사
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.HasChildNodes">
      <summary v="4es4zi" i="0">
자식 노드가 존재하는지 여부
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Icon">
      <summary v="f80m3" i="0">
노드 앞의 아이콘
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IsLastNode">
      <summary v="4cJ424" i="0">
동일한 레벨 노드에서 마지막 노드인지 확인합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IsLeaf">
      <summary v="3cKGhc" i="0">
리프 노드인지 여부
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Key">
      <summary v="25YQXT" i="0">
현재 노드의 고유 식별자 이름을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Loading">
      <summary v="3cafGE" i="0">
로드 상태가 비동기인지 여부 (확장 아이콘의 표시에 영향을 미침)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Matched">
      <summary v="sRjSt" i="0">
Title S검색 값 (用)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.NodeIndex">
      <summary v="40g1H9" i="0">
부모 노드의 자식 노드 목록에 인덱스를 기록합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Nodes">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.ParentNode">
      <summary v="3xV3Wk" i="0">
上 一더 절도
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.RealDisplay">
      <summary v="1jnI3j" i="0">
경로에 확장 된 노드가있는 한 실제 확장 상태, 아래의 모든 접기
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Selected">
      <summary v="3XEjb8" i="0">
선택 여부
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherClose">
      <summary v="iICRj" i="0">
스위처가 가깝습니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherOpen">
      <summary v="TpcNo" i="0">
스위처가 열립니다
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TargetContainer">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.TreeComponent">
      <summary v="4SG0pP" i="0">

</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TreeLevel">
      <summary v="1c26WG" i="0">
현재 노드 레벨
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.SelfNode">
      <summary v="4bZ677" i="0">
현재 노드
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.TreeComponent">
      <summary v="1uvHBZ" i="0">
루트 트리
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.IsSwitcherClose">
      <summary v="3ur2B7" i="0">
절투과
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.IsSwitcherOpen">
      <summary v="2iaKt5" i="0">
절투과
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.SelfNode">
      <summary v="zQzEv" i="0">
前절도
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.TreeComponent">
      <summary v="4SG0pP" i="0">

</summary>
    </member>
    <member name="P:AntDesign.TreeNodeTitle`1.SelfNode">
      <summary v="zQzEv" i="0">
前절도
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeTitle`1.TreeComponent">
      <summary v="4SG0pP" i="0">

</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.CheckableExpression">
      <summary v="rEuK6" i="0">
체크 가능한 노드를 반환하는 방법을 지정합니다
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ChildrenExpression">
      <summary v="1a94kF" i="0">
자식 노드를 반환하는 방법을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.DisabledExpression">
      <summary v="4QpUNh" i="0">
비활성화 된 노드를 반환하는 방법을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ExpandedKeys">
      <summary v="4d5ThB" i="0">
(제어) 지정된 트리 노드를 확장합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.IconExpression">
      <summary v="37B3eq" i="0">
노드 아이콘을 반환하는 방법을 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.IsLeafExpression">
      <summary v="3OYLNx" i="0">
표현식이 리프 노드인지 여부를 반환하는 메서드를 지정합니다.
</summary>) == args.Node.Key).FirstOrDefault();
        </member>
    <member name="P:AntDesign.TreeSelect`2.KeyExpression">
      <summary v="3F1pUh" i="0">
노드의 키를 반환하는 메서드를 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowCheckedStrategy">
      <summary v="3JoB00" i="0">
TreeCheckable이 true이고 TreeCheckStrictly가 false 일 때 확인 된 값을 표시하는 방법을 지정하십시오.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowIcon">
      <summary v="33jgCa" i="0">
표시 트리 노드 아이콘 아이콘
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleExpression">
      <summary v="17Cqdr" i="0">
노드의 텍스트를 반환하는 메서드를 지정합니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleIconTemplate">
      <summary v="2cC9bk" i="0">
아이콘 템플릿 사용자 지정
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeCheckStrictly">
      <summary v="42UEkh" i="0">
트리 노드를 정확하게 확인하십시오. 부모 트리 노드 및 어린이 트리 노드는 연관되지 않습니다.
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeComponent">
      <summary v="4SG0pP" i="0">

</summary>
    </member>
    <member name="T:AntDesign.Alert">
      <summary v="lrPn5" i="0">
피드백에 대한 경고 구성 요소.
</summary>
    </member>
    <member name="T:AntDesign.AntInputComponentBase`1">
      <summary v="4IyV3t" i="0">
선택적으로 지원하는 입력 컨트롤의 기본 클래스<see cref="P:AntDesign.AntInputComponentBase`1.EditContext" />.
참조: https://github.com/dotnet/aspnetcore/blob/master/src/Components/Web/src/Forms/InputBase.cs
</summary>
      <typeparam name="TValue" v="KpCZe" i="0">입력 값의 자연 유형</typeparam>
    </member>
    <member name="T:AntDesign.Badge">
      <summary v="2Rq7Zo" i="0">
UI 요소에 대한 작은 숫자 값 또는 상태 설명자.
</summary>
    </member>
    <member name="T:AntDesign.BadgeRibbon">
      <summary v="2Rq7Zo" i="0">
UI 요소에 대한 작은 숫자 값 또는 상태 설명자.
</summary>
    </member>
    <member name="T:AntDesign.BreadcrumbOption">
      <summary v="3CaXYE" i="0">
현재 사용되지 않습니다. 미래 개발을위한 계획.
</summary>
    </member>
    <member name="T:AntDesign.ButtonProps">
      <summary v="1jRKjS" i="0">
버튼 소품
</summary>
    </member>
    <member name="T:AntDesign.CloseEventArgs`1">
      <summary v="qxMDq" i="0">
조건부 폐쇄 이벤트를 차단하는 데 사용할 수 있습니다.
</summary>
      <typeparam name="T" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Color">
      <summary v="1eFGx0" i="0">
개미 디자인 색상: https:// ant.de sign/docs/spec/colors
</summary>
    </member>
    <member name="T:AntDesign.Confirm">
      <summary v="3MOCfz" i="0">
직접 확인하지 마세요,
ModalService 또는 ConfirmService 를 사용하여 확인 대화 상자를 만드십시오.
</summary>
    </member>
    <member name="T:AntDesign.ConfirmButtonOptions">
      <summary v="29ac0n" i="0">
확인 버튼의 속성 구성
</summary>
    </member>
    <member name="T:AntDesign.ConfirmButtons">
      <summary v="4A7aQN" i="0">
바닥 버튼 유형 확인
</summary>
    </member>
    <member name="T:AntDesign.ConfirmIcon">
      <summary v="4btyuR" i="0">
아이콘 유형 확인
</summary>
    </member>
    <member name="T:AntDesign.ConfirmLocale">
      <summary v="1p1KyL" i="0">
대화 장소 확인
</summary>
    </member>
    <member name="T:AntDesign.ConfirmOptions">
      <summary v="1kUbEo" i="0">
대화 옵션 확인
</summary>
    </member>
    <member name="T:AntDesign.ConfirmRef">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ConfirmRef`1">
      <summary v="30SDzd" i="0">
반환 값으로 ConfirmRef
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ConfirmResult">
      <summary v="1E9RxE" i="0">
확인 버튼이 클릭되는
</summary>
    </member>
    <member name="T:AntDesign.ConfirmService">
      <summary v="4bavRW" i="0">
Windows의 MessageBox와 같은 간단한 확인 대화 상자를 표시하면 ModalService와 다릅니다. ModalService는 OK-Cancel 확인 대화 상자를 만들고 ConfirmRef를 반환 할 수 있지만 확인 서비스는 확인 결과를 반환합니다.
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCode`1">
      <summary v="2QfH9f" i="0">
두 매개 변수 값의 해시 비교 제공
</summary>
      <typeparam name="TParameter" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeExtensions">
      <summary v="25Bj9r" i="0">
구성 요소 매개 변수 및 기타 기능의 해시 코드 계산 제공
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider">
      <summary v="4U8Dt8" i="0">
HashCode 공급자
<para>HashCode의 매개 변수 값을 계산하는 데 사용됩니다.</para><para>컬렉션 유형은 각 요소에 대한 해시 코드를 계산합니다.
다른 유형은 단순히 객체의 기본 GetHashCode 메서드에 의해 제기 된 값을 반환
</para><para>반사 성능을 고려하여 복잡한 모델은 속성의 HashCode를 분해하고 계산하지 않으므로 모델 자체가 GetHashCode 방법을 다시 작성하는 것이 좋습니다.</para></summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.DictionaryHashCodeProvider">
      <summary v="ogIOV" i="0">
사전 유형에 대한 해시 공급자
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.EnumerableHashCodeProvider">
      <summary v="1U8TI8" i="0">
IEnumerable 유형에 대한 해시 공급자
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.OtherHashCodeProvider">
      <summary v="OKreE" i="0">
다른 유형의 해시 공급자
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.ParameterDescriptor`1">
      <summary v="3IE49e" i="0">
구성 요소에 대한 매개 변수 설명자를 나타냅니다.
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Dialog">
      <summary v="3kcfun" i="0">
대화 전용 제어 구성 요소 표시 또는 숨기기,
DOM 트리에서 요소가 제거되지 않습니다.
</summary>
    </member>
    <member name="T:AntDesign.DialogOptions">
      <summary v="4BPXAm" i="0">
대화 옵션
</summary>
    </member>
    <member name="T:AntDesign.DialogOptionsBase">
      <summary v="342PtQ" i="0">
ModalOptions, 확인 옵션 및 대화 옵션 기본 클래스
</summary>
    </member>
    <member name="T:AntDesign.DialogWrapper">
      <summary v="3kvY2G" i="0">
DOM 트리에 오랫동안 존재할 수있는 구성 요소, 자신의 주도하에 파괴하지 않는 한
</summary>
    </member>
    <member name="T:AntDesign.EventUtil">
      <summary v="1Qq0jo" i="0">
이벤트로 인한 구성 요소 재 렌더링을 Blazor 구성 요소로 피하십시오. (순수 이벤트 처리기)
<para>
저자: SteveSandersonMS,<see href="https://gist.github.com/SteveSandersonMS/8a19d8e992f127bb2d2a315ec6c5a373" />.
</para><para>
문제:<seealso href="https://github.com/dotnet/aspnetcore/issues/18919#issuecomment-735969441" />.
</para></summary>
    </member>
    <member name="T:AntDesign.FeedbackComponent`1">
      <summary v="1wTQkB" i="0">
피드백 구성 요소
</summary>
      <typeparam name="TComponentOptions" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackComponent`2">
      <summary v="1wTQkB" i="0">
피드백 구성 요소
</summary>
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackRefBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackRefWithOkCancelBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.IFeedbackRef">
      <summary v="4GzNez" i="0">
개방형 및 닫기 방법으로 구성 요소 참조
</summary>
    </member>
    <member name="T:AntDesign.Input`1">
      <summary v="1GfhnE" i="0">
입력 유형 구성 요소의 기본 클래스입니다.
</summary>
    </member>
    <member name="T:AntDesign.IOkCancelRef">
      <summary v="23dkGA" i="0">
Ok 및 취소 방법으로 구성 요소 참조
</summary>
    </member>
    <member name="T:AntDesign.IOkCancelRef`1">
      <summary v="4VqRkO" i="0">
구성 요소 &lt;&gt; 참조 Ok 및 취소 방법
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.MessageService">
      <summary v="46UWFn" i="0">
메시지 서비스
</summary>
    </member>
    <member name="T:AntDesign.Modal">
      <summary v="4eCJHq" i="0">
모달 대화
</summary>
    </member>
    <member name="T:AntDesign.ModalCancelFooter">
      <summary v="3rqwQJ" i="0">
모달 바닥 성분
</summary>
    </member>
    <member name="T:AntDesign.ModalFooter">
      <summary v="3rqwQJ" i="0">
모달 바닥 성분
</summary>
    </member>
    <member name="T:AntDesign.ModalLocale">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ModalOkFooter">
      <summary v="3rqwQJ" i="0">
모달 바닥 성분
</summary>
    </member>
    <member name="T:AntDesign.ModalOptions">
      <summary v="33zzV5" i="0">
Modal 대화 상자의 옵션
</summary>
    </member>
    <member name="T:AntDesign.ModalRef">
      <summary v="3g66il" i="0">
모달 인스턴스의 참조
</summary>
    </member>
    <member name="T:AntDesign.ModalRef`1">
      <summary v="obMVl" i="0">
반환 값이있는 ModalRef
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ModalService">
      <summary v="17Ulp2" i="0">
모달 대화 상자 만들기 및 열기
</summary>
    </member>
    <member name="T:AntDesign.NotificationBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.NotificationGlobalConfig">
      <summary v="1hOMBL" i="0">
AntNotification全
</summary>
    </member>
    <member name="T:AntDesign.NotificationRef">
      <summary v="1vLyd3" i="0">
알림 참조
</summary>
    </member>
    <member name="T:AntDesign.NotificationService">
      <summary v="SPIyy" i="0">
AntNotification 서비스
</summary>
    </member>
    <member name="T:AntDesign.RangePickerDefaults">
      <summary v="38wVtM" i="0">
PickerValues에 삽입해야하는 값을 평가합니다 (각 날짜
피커는 처음 보일 때 집중합니다).
</summary>
    </member>
    <member name="T:AntDesign.RerenderStrategy">
      <summary v="2FJ4wP" i="0">
Rerender 전략
</summary>
    </member>
    <member name="T:AntDesign.ReuseTabs">
      <summary v="2UMBIG" i="0">
응용 프로그램 내에서 여러 페이지 구성 요소 재사용
</summary>
    </member>
    <member name="T:AntDesign.Select.Internal.SelectOptionItem`2">
      <summary v="1X6flt" i="0">
내부적으로 사용되는 SelectOption에 대한 데이터 모델입니다.
</summary>
      <typeparam name="TItemValue" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Table.Internal.TItemProxy">
      <summary v="2auhJN" i="0">
이 클래스는 DispatchProxy의 인터페이스 인스턴스를 만드는 데 사용됩니다.
</summary>
    </member>
    <member name="T:AntDesign.TableModels.RowData">
      <summary v="2VK43F" i="0">
행과 같은 행과 관련된 모든 데이터를 보유합니다.
참조<see cref="P:AntDesign.TableModels.RowData.TableDataItem" />행 대신 항목에 특정한 모든 속성에 대해
</summary>
    </member>
    <member name="T:AntDesign.TableModels.RowData`1">
      <inheritdoc />
    </member>
    <member name="T:AntDesign.TableModels.TableDataItem">
      <summary v="4IsL8v" i="0">
테이블 내에 항목의 속성을 보유합니다.
테이블의 각 항목에 대해 고유합니다 (예: 항목이 두 번 이상 표시 되더라도
하나만있을 것입니다.<see cref="T:AntDesign.TableModels.TableDataItem" />).
따라서 동일한 항목을 가진 모든 행이 한 번에 선택/선택 해제됩니다.
<br />
행 특정 데이터에 대해서는<see cref="T:AntDesign.TableModels.RowData" />.
</summary>
    </member>
    <member name="T:AntDesign.TableModels.TableDataItem`1">
      <inheritdoc />
    </member>
    <member name="T:AntDesign.TemplateComponentBase`1">
      <summary v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
    </member>
  </members>
</doc>