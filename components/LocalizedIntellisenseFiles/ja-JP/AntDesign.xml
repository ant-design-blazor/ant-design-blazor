<?xml version="1.0"?>
<doc>
  <assembly>
    <name>AntDesign</name>
  </assembly>
  <members>
    <member name="E:AntDesign.MessageConfig.OnClose">
      <summary v="2h43or" i="0">
メッセージの終了時に実行されるコールバック
</summary>
    </member>
    <member name="E:AntDesign.NotificationConfig.OnClick">
      <summary v="42pkAh" i="0">
数数は、通知时になります。
</summary>
    </member>
    <member name="E:AntDesign.NotificationConfig.OnClose">
      <summary v="11YvOG" i="0">
通知関闭时回通过
</summary>
    </member>
    <member name="F:AntDesign.Alert._isClosed">
      <summary v="yW8vK" i="0">
コンポーネントが閉じているかどうかを示します。
</summary>
    </member>
    <member name="F:AntDesign.Alert._isClosing">
      <summary v="1CUgJ3" i="0">
コンポーネントを閉じる直前に、このインジケーターを閉じたアニメーションを表示するように設定します。
</summary>
    </member>
    <member name="F:AntDesign.AutoComplete`1._optionDataItems">
      <summary v="1EDVo6" i="0">
リストデータ収集
</summary>
    </member>
    <member name="F:AntDesign.AutoComplete`1._options">
      <summary v="1TuwMD" i="0">
バインドされたデータソース収集の一覧表示
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Closed">
      <summary v="2lNNDv" i="0">
一関閉閉閉時过一OnAfterRender/OnAfterRenderAsync、成成状態
OnAfterRender/OnAfterRenderAsyncを閉じるときに一度経験すると、この状態になります
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Closing">
      <summary v="1Mk8P4" i="0">
指定パラメーター指定指定中設置、指定指定者指定中設置
パラメータープロパティに設定するために使用され、コンポーネントが閉じていることを示します。
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Destroyed">
      <summary v="4HjwoW" i="0">
一時一OnAfterRender、成形
OnAfterRender/OnAfterRenderAsyncが破壊中に1回経験されると、この状態になります
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Destroying">
      <summary v="10HgBd" i="0">
指定パラメーターの指定された中央配置、指定された設定
パラメータ属性に設定するために使用され、コンポーネントが定期的に破壊されていることを示します。
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Inited">
      <summary v="1e7sQF" i="0">
组织的な一次的な
コンポーネントの初期化完了
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Initing">
      <summary v="2Dnf11" i="0">
组织的に
進行中のコンポーネントの初期化
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Opened">
      <summary v="1V4YNr" i="0">
一打開時过一一OnAfterRender/OnAfterRenderAsync、成成状態
コンポーネントが開いたときにOnAfterRender/OnAfterRenderAsyncを一度経験すると、この状態になります。
</summary>
    </member>
    <member name="F:AntDesign.ComponentStatus.Opening">
      <summary v="1WRA1H" i="0">
指定パラメーターの指定指定位置、指定指定位置の指定位置、指定位置の指定位置の指定位置
パラメータープロパティで設定するために使用され、コンポーネントが初めてレンダリングされることを示します。
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.AbortRetryIgnore">
      <summary v="3dHrPd" i="0">
3つのボタン: 中止、再試行、無視
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.OK">
      <summary v="3t6Etb" i="0">
[OK] ボタンのみ
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.OKCancel">
      <summary v="4UZPqN" i="0">
2つのボタン: OKとキャンセル
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.RetryCancel">
      <summary v="2JNCgQ" i="0">
2つのボタン: 再試行とキャンセル
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.YesNo">
      <summary v="4WMXxD" i="0">
2つのボタン: はいおよびいいえ
</summary>
    </member>
    <member name="F:AntDesign.ConfirmButtons.YesNoCancel">
      <summary v="3CuxQc" i="0">
3つのボタン: はい、いいえ、キャンセル
</summary>
    </member>
    <member name="F:AntDesign.Core.HashCodes.ParameterDescriptor`1.Descriptors">
      <summary v="3jJwQt" i="0">
コンポーネントのすべてのパラメータの説明を取得します。
</summary>
    </member>
    <member name="F:AntDesign.Dialog._dialogMouseDown">
      <summary v="2mDnNT" i="0">
チェックはダイアログをクリックします
</summary>
    </member>
    <member name="F:AntDesign.Dialog._element">
      <summary v="2lsUtt" i="0">
ダイアログルートコンテナ
</summary>
    </member>
    <member name="F:AntDesign.Dialog._sentinelStart">
      <summary v="enVVW" i="0">
TABキーボード制御
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultCloseIcon">
      <summary v="W8kIQ" i="0">
デフォルトのダイアログ閉じるアイコン
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultFooter">
      <summary v="T4rRh" i="0">
デフォルトのモーダルフッター
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultHeader">
      <summary v="2Y2SUn" i="0">
デフォルトのモーダルヘッダー
</summary>
    </member>
    <member name="F:AntDesign.DialogOptionsBase.DefaultMaximizeIcon">
      <summary v="W8kIQ" i="0">
デフォルトのダイアログ閉じるアイコン
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAndClear">
      <summary v="1w7dgS" i="0">
フォーカスすると、コンテンツはクリアされます
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAndSelectAll">
      <summary v="1zmt3n" i="0">
フォーカスすると、コンテンツが選択されます
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAtFirst">
      <summary v="3yAl94" i="0">
フォーカスすると、カーソルは最初の文字に移動します
</summary>
    </member>
    <member name="F:AntDesign.FocusBehavior.FocusAtLast">
      <summary v="2IX3yV" i="0">
フォーカスすると、カーソルは最後の文字に移動します
これはデフォルトの動作です。
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.None">
      <summary v="4NnUqv" i="0">
Noneに設定すると、フォームは必要なステータスに関係なく、フィールドごとにインジケーターを表示しません。
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.Optional">
      <summary v="3P3eBz" i="0">
[オプション] に設定すると、フォームにはオプションフィールドの横にインジケーターが表示されます。
</summary>
    </member>
    <member name="F:AntDesign.FormRequiredMark.Required">
      <summary v="1UZY2b" i="0">
[必須] に設定すると、フォームには必須フィールドの横にインジケーターが表示されます。
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Complex">
      <summary v="DyWos" i="0">
デフォルトモードとルールモードの両方を使用する
</summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Default">
      <summary v="2zLNw3" i="0">
検証は、に提供されるモデルのデータ属性から行われます。<see cref="P:AntDesign.Form`1.Model" /></summary>
    </member>
    <member name="F:AntDesign.FormValidateMode.Rules">
      <summary v="2b819E" i="0">
検証は、フォームアイテムのルールから行われます
</summary>
    </member>
    <member name="F:AntDesign.Internal.Overlay._isReloading">
      <summary v="3wcE9I" i="0">
ページがリフレッシュされていることを示します
</summary>
    </member>
    <member name="F:AntDesign.Rate._currentValue">
      <summary v="3qqeGZ" i="0">
時前星量選択的星量
現在選択されている星の数
</summary>
    </member>
    <member name="F:AntDesign.Rate._hasHalf">
      <summary v="2fqpId" i="0">
半选
半分の選択を許可するかどうか
</summary>
    </member>
    <member name="F:AntDesign.Rate._hoverValue">
      <summary v="dbFU7" i="0">
。
マウスでホバリングしたときのカーソル位置までの左端からの星の数。
</summary>
    </member>
    <member name="F:AntDesign.Rate._isFocused">
      <summary v="3ALEeG" i="0">

入力フォーカスを取得するためのウィーター。
</summary>
    </member>
    <member name="F:AntDesign.Rate._valueWasSet">
      <summary v="4T5P25" i="0">
値が変更されたかどうかを示します。 存在する場合はDefaultValueへの再設定を回避する必要があります。
</summary>
    </member>
    <member name="F:AntDesign.RerenderStrategy.Always">
      <summary v="BjYee" i="0">
常に再送信する
</summary>
    </member>
    <member name="F:AntDesign.RerenderStrategy.ParametersHashCodeChanged">
      <summary v="W9Mkm" i="0">
コンポーネントのパラメータ値のいずれかが変更された場合にのみレンダリング
</summary>
    </member>
    <member name="F:AntDesign.Select.Internal.SelectContent`2._isReloading">
      <summary v="3wcE9I" i="0">
ページがリフレッシュされていることを示します
</summary>
    </member>
    <member name="F:AntDesign.Select`2._dataSourceItemShallowCopyMehtod">
      <summary v="2dLgj3" i="0">
MethodInfoには、添付されたMemberwiseCloneが保護されます
メソッドを使用します。 その保護レベルのために、それはアクセスされなければなりません
反射を使用して。 それは世代の間に使用されます
DataSourceの浅いコピー (DataSourceの新しいリスト)
各アイテムのコピーが浅いアイテム)。
</summary>
    </member>
    <member name="F:AntDesign.SelectBase`2._maxTagCount">
      <summary v="v23JS" i="0">
タグの長さ (文字数)。
モード = "multiple" またはモード = "tags" のみ
</summary>
      <value>
                The maximum length of the tag text.
            </value>
    </member>
    <member name="F:AntDesign.SelectOption`2._itemSet">
      <summary v="3XJgl6" i="0">
SelectOptionのアイテム
パラメータは、SelectOptionが直接作成された場合にのみ使用してください。
</summary>
    </member>
    <member name="F:AntDesign.Slider`1._range">
      <summary v="34jy3B" i="0">
デュアル親指モード
</summary>
    </member>
    <member name="F:AntDesign.Table`1._isReloading">
      <summary v="3wcE9I" i="0">
ページがリフレッシュされていることを示します
</summary>
    </member>
    <member name="F:AntDesign.TextArea._isReloading">
      <summary v="3wcE9I" i="0">
ページがリフレッシュされていることを示します
</summary>
    </member>
    <member name="F:AntDesign.Tree`1._allNodes">
      <summary v="XXSU2" i="0">
すべてのノード
</summary>
    </member>
    <member name="F:AntDesign.Tree`1._checkedNodes">
      <summary v="1Z7yRm" i="0">
すべてのチェック済みノード
</summary>
    </member>
    <member name="F:AntDesign.TreeNodeTitle`1._dragTargetClientX">
      <summary v="0000" i="0" />
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.InScroll">
      <summary v="O1yfc" i="0">
ドキュメント境界は、オーバーレイを再配置する必要がある場合に計算に使用される境界です。
したがって、オーバーレイがビューポートの外にある場合でも、オーバーレイが表示される限り
はドキュメントの境界を「オーバーフロー」しません。
</summary>
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.InView">
      <summary v="1VQ33C" i="0">
デフォルトでは、ビューポートの境界は、オーバーレイの場合に計算に使用される境界です。
は完全に表示されます。
ビューポートで常に完全に表示されるように、オーバーレイをフィットさせようとします。
したがって、オーバーレイがビューポートの外側にある場合 (「オーバーフロー」) 、再配置計算が実行されます
試みられる。
</summary>
    </member>
    <member name="F:AntDesign.TriggerBoundaryAdjustMode.None">
      <summary v="4ECMwF" i="0">
自動調整しない
</summary>
    </member>
    <member name="M:AntDesign.Alert.OnCloseHandler(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="seeMo" i="0">
クローズコールバックを処理します。
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Alert.OnInitialized">
      <summary v="ajhia" i="0">
スタートアップコード。
</summary>
    </member>
    <member name="M:AntDesign.Alert.SetClassMap">
      <summary v="45aP6Q" i="0">
デフォルトのクラスを設定します。
</summary>
    </member>
    <member name="M:AntDesign.AntComponentBase.BlurAsync(Microsoft.AspNetCore.Components.ElementReference)">
      <summary v="1Df4hk" i="0">
標準ぼかし。 JS interopを使用します。
</summary>
      <param name="target" v="4QgwiP" i="0">フォーカスを受け取る要素。</param>
    </member>
    <member name="M:AntDesign.AntComponentBase.FocusAsync(Microsoft.AspNetCore.Components.ElementReference,AntDesign.FocusBehavior,System.Boolean)">
      <summary v="zIr6D" i="0">
行動に焦点を合わせます。 行動は、ある要素に対してのみ機能します
HTMLInputElementまたはHTMLTextAreaElement それ以外の場合は集中するだけです。
</summary>
      <param name="target" v="4QgwiP" i="0">フォーカスを受け取る要素。</param>
      <param name="behavior" v="4euOKD" i="0">焦点を絞った要素の行動</param>
      <param name="preventScroll" v="2zL7A" i="0">フォーカスされた要素にスクロールするかどうか</param>
    </member>
    <member name="M:AntDesign.AntComponentBase.FocusAsync(Microsoft.AspNetCore.Components.ElementReference,System.Boolean)">
      <summary v="3oHKS9" i="0">
標準フォーカス。 Net5からは、ElementReferenceでBlazor拡張メソッドを使用します。
以前は、Net5 JSとまったく同じように実装されたJSを使用しています。
</summary>
      <param name="target" v="4QgwiP" i="0">フォーカスを受け取る要素。</param>
      <param name="preventScroll" v="2zL7A" i="0">フォーカスされた要素にスクロールするかどうか</param>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.#ctor">
      <summary v="7iYge" i="0">
のインスタンスを作成します。<see cref="T:Microsoft.AspNetCore.Components.Forms.InputBase`1" />を参照してください。
</summary>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.FormatValueAsString(`0)">
      <summary v="2Mhrl9" i="0">
値を文字列としてフォーマットします。 派生クラスはこれをオーバーライドして、<see cref="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString" />を参照してください。
</summary>
      <param name="value" v="26kDud" i="0">フォーマットする値。</param>
      <returns v="1AaSv2" i="0">値の文字列表現。</returns>
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnCurrentValueChange(`0)">
      <summary v="1OUvUw" i="0">
このメソッドが呼び出されると、ValueとCurrentValueが変更され、ValueChangedがトリガーされたため、外側のバインド値が変更されます。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnValueChange(`0)">
      <summary v="oF6Fx" i="0">
このメソッドが呼び出された場合、Valueは変更されているだけですが、ValueChangedはトリガーされないため、外側のバインド値は変更されません。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.OnValueChangeAsync(`0)">
      <summary v="oF6Fx" i="0">
このメソッドが呼び出された場合、Valueは変更されているだけですが、ValueChangedはトリガーされないため、外側のバインド値は変更されません。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.SetParametersAsync(Microsoft.AspNetCore.Components.ParameterView)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.AntInputComponentBase`1.TryParseValueFromString(System.String,`0@,System.String@)">
      <summary v="4eJg98" i="0">
文字列を解析して、のインスタンスを作成します。を参照してください。 派生クラスはこれをオーバーライドして方法を変更できます
<see cref="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString" />着信値を解釈します。
<typeparamref name="TValue" /></summary>
      <param name="value" v="3C8L8R" i="0">解析される文字列の値。</param>
      <param name="result" v="2OSvxq" i="0">のインスタンスです。を参照してください。<typeparamref name="TValue" /></param>
      <param name="validationErrorMessage" v="1lxpYC" i="0">値を解析できなかった場合は、検証エラーメッセージを提供します。</param>
      <returns v="22lm7E" i="0">値を解析できる場合はtrueです。そうでない場合はfalse。</returns>
    </member>
    <member name="M:AntDesign.AutoComplete`1.ClosePanel">
      <summary v="2ruC60" i="0">
パネルを閉じる
</summary>
    </member>
    <member name="M:AntDesign.AutoComplete`1.OpenPanel">
      <summary v="3l6rLI" i="0">
オープンパネル
</summary>
    </member>
    <member name="M:AntDesign.AutoCompleteOption.CalcSelected">
      <summary v="15MAgK" i="0">
算出値の计算値の计算値は、
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Badge.OnInitialized">
      <summary v="1cE7i0" i="0">
スタートアップコード
</summary>
    </member>
    <member name="M:AntDesign.Badge.SetClassMap">
      <summary v="K1vic" i="0">
デフォルトのCSSクラスを設定します。
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.OnInitialized">
      <summary v="1cE7i0" i="0">
スタートアップコード
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.OnParametersSet">
      <summary v="3bianQ" i="0">
パラメーターが設定されるたびに実行されます。
</summary>
    </member>
    <member name="M:AntDesign.BadgeRibbon.SetClassMap">
      <summary v="K1vic" i="0">
デフォルトのCSSクラスを設定します。
</summary>
    </member>
    <member name="M:AntDesign.Carousel.GoTo(System.Int32)">
      <summary v="gjky1" i="0">
カルーセルを指定されたスライドにスライドさせます
</summary>
      <param name="index" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Carousel.Next">
      <summary v="4N4YpT" i="0">
カルーセルを次のスライドにスライドさせます
</summary>
    </member>
    <member name="M:AntDesign.Carousel.Previous">
      <summary v="019VF" i="0">
カルーセルを前のスライドにスライドさせます
</summary>
    </member>
    <member name="M:AntDesign.Cascader.CascaderOnBlur">
      <summary v="4QW9aB" i="0">
入/点 (点)
</summary>
    </member>
    <member name="M:AntDesign.Cascader.ClearSelected">
      <summary v="EYuLQ" i="0">
清の选択の项
</summary>
    </member>
    <member name="M:AntDesign.Cascader.GetNodeByValue(System.Collections.Generic.IEnumerable{AntDesign.CascaderNode},System.String)">
      <summary v="2me3yv" i="0">
指定された値に基づいてノードを取得します。
</summary>
      <param name="list" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.InitCascaderNodeState(System.Collections.Generic.List{AntDesign.CascaderNode},AntDesign.CascaderNode,System.Int32,System.Boolean)">
      <summary v="JTgDE" i="0">
ノードの初期化 (Level, ParentNode)
</summary>
      <param name="list" v="0000" i="0" />
      <param name="parentNode" v="0000" i="0" />
      <param name="level" v="0000" i="0" />
      <param name="recursive" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.InputOnToggle">
      <summary v="JoEYk" i="0">
入 (示/)
</summary>
    </member>
    <member name="M:AntDesign.Cascader.NodeOnClick(AntDesign.CascaderNode)">
      <summary v="4Y7NQo" i="0">
下节约
</summary>
      <param name="node" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.NodeOnMouseOver(AntDesign.CascaderNode)">
      <summary v="3PeI3Q" i="0">
下节约
</summary>
      <param name="node" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.NodesOnMouseOut">
      <summary v="4P5oXL" i="0">
出
</summary>
    </member>
    <member name="M:AntDesign.Cascader.NodesOnMouseOver">
      <summary v="2UJTjQ" i="0">
入
</summary>
    </member>
    <member name="M:AntDesign.Cascader.ProcessParentAndDefault">
      <summary v="fSFSs" i="0">
オプションの更新後、親ノードとデフォルトを処理します。
</summary>
    </member>
    <member name="M:AntDesign.Cascader.RefreshDisplayText">
      <summary v="4TItSt" i="0">
表示テキストを再構築する
</summary>
    </member>
    <member name="M:AntDesign.Cascader.RefreshNodeValue(System.String)">
      <summary v="23wDCv" i="0">
選択した値を更新する
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetDefaultValue(System.String)">
      <summary v="4bhYmD" i="0">
デフォルト値の設定
</summary>
      <param name="defaultValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetSelectedNode(AntDesign.CascaderNode,AntDesign.SelectedTypeEnum)">
      <summary v="1yanOb" i="0">
選択したノード
</summary>
      <param name="cascaderNode" v="0000" i="0" />
      <param name="selectedType" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetSelectedNodeWithParent(AntDesign.CascaderNode,System.Collections.Generic.List{AntDesign.CascaderNode}@)">
      <summary v="4cw9N0" i="0">
すべての親ノードを選択するように設定する
</summary>
      <param name="node" v="0000" i="0" />
      <param name="list" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Cascader.SetValue(System.String)">
      <summary v="4LHGMk" i="0">
バインディング値の設定
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.CheckboxGroup`1.OnCheckboxChange(AntDesign.Checkbox,System.Boolean)">
      <summary v="12407g" i="0">
[Checkbox change] のときに呼び出されます。
</summary>
      <param name="checkbox" v="RRWM4" i="0">チェックボックス。</param>
      <param name="invokeOnChange" v="2gshfC" i="0">変更イベントに向けて出発するかどうかのフラグ。</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Collapse.Activate(System.String[])">
      <summary v="4Fz9aG" i="0">
指定されたパネルを有効にする
</summary>
      <param name="activeKeys" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Collapse.Deactivate(System.String[])">
      <summary v="3vc5i4" i="0">
指定されたパネルを無効にする
</summary>
      <param name="inactiveKeys" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.Dispose(System.Boolean)">
      <summary v="JOrKd" i="0">
イベントの登録解除
</summary>
      <param name="disposing" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmClose(AntDesign.ConfirmRef)">
      <summary v="29ltvo" i="0">
[Confirm] ダイアログを破棄
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmCloseAll">
      <summary v="3stjhf" i="0">
[確認] ダイアログをすべて破棄
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmOpen(AntDesign.ConfirmRef)">
      <summary v="4Ttvme" i="0">
[確認] ダイアログを作成して開く
</summary>
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmRemove(AntDesign.ConfirmRef)">
      <summary v="2hkOM7" i="0">
DOMから削除するダイアログを確認した後、 _ confirmRefsから削除します。
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnConfirmUpdate(AntDesign.ConfirmRef)">
      <summary v="2Hw32B" i="0">
[確認] ダイアログの更新
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComfirmContainer.OnInitialized">
      <summary v="2AGfwn" i="0">
登録イベント
</summary>
    </member>
    <member name="M:AntDesign.ComponentStatusExt.Is(AntDesign.ComponentStatus,AntDesign.ComponentStatus)">
      <summary v="1aMoDL" i="0">
リターンは、<paramref name="componentStatus" /><paramref name="status" /></summary>
      <param name="componentStatus" v="0000" i="0" />
      <param name="status" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsClose(AntDesign.ComponentStatus)">
      <summary v="4f8eFK" i="0">
ComponentStatus.ClosingまたはComponentStatus.Closedですか?
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsNotOpen(AntDesign.ComponentStatus)">
      <summary v="37QzBT" i="0">
ComponentStatus.Openingではなく、ComponentStatusではありません。オープン
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ComponentStatusExt.IsOpen(AntDesign.ComponentStatus)">
      <summary v="3YviB6" i="0">
ComponentStatusです。オープンまたはComponentStatus.オープン
</summary>
      <param name="componentStatus" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Confirm.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Confirm.OnInitializedAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmOptions.BuildButtonsDefaultOptions">
      <summary v="N7VQ8" i="0">
ボタンのデフォルトオプションを設定する
</summary>
    </member>
    <member name="M:AntDesign.ConfirmRef.CloseAsync">
      <summary v="w8anv" i="0">
Close Confirmダイアログ
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.OpenAsync">
      <summary v="4ME4b" i="0">
[確認] ダイアログを開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.UpdateConfigAsync">
      <summary v="3cDh69" i="0">
更新Visible = trueのダイアログ設定の確認
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef.UpdateConfigAsync(AntDesign.ConfirmOptions)">
      <summary v="1aknzh" i="0">
新しいConfirmOptionsでConfirmダイアログ設定を更新する
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmRef`1.CancelAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ConfirmRef`1.OkAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ConfirmService.Show(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},AntDesign.ConfirmButtons,AntDesign.ConfirmIcon,AntDesign.ConfirmButtonOptions,System.Nullable{AntDesign.ConfirmAutoFocusButton})">
      <summary v="3S6wbj" i="0">
WindowsのMessageBoxのような確認ダイアログを表示する
</summary>
      <param name="content" v="4eHUMp" i="0">ダイアログの内容</param>
      <param name="title" v="2qim70" i="0">ダイアログのタイトル</param>
      <param name="confirmButtons" v="4OkTic" i="0">ダイアログのボタン</param>
      <param name="confirmIcon" v="4E5rut" i="0">ダイアログのアイコン</param>
      <param name="options" v="30j200" i="0">ダイアログの設定オプション</param>
      <param name="autoFocusButton" v="2g6u5L" i="0">Autofocusボタン</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ConfirmService.Show(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},AntDesign.ConfirmButtons,AntDesign.ConfirmIcon)">
      <summary v="3S6wbj" i="0">
WindowsのMessageBoxのような確認ダイアログを表示する
</summary>
      <param name="content" v="4eHUMp" i="0">ダイアログの内容</param>
      <param name="title" v="2qim70" i="0">ダイアログのタイトル</param>
      <param name="confirmButtons" v="4OkTic" i="0">ダイアログのボタン</param>
      <param name="confirmIcon" v="4E5rut" i="0">ダイアログのアイコン</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Extensions.ArrayExtensions.Scroll``1(``0[],System.Int32)">
      <summary v="KDoZN" i="0">
要素を左にスクロールする
</summary>
      <typeparam name="T" v="0000" i="0" />
      <param name="sourceArray" v="0000" i="0" />
      <param name="offset" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.DataConversionExtensions.Convert``2(``0)">
      <summary v="kkCNA" i="0">
ジェネリック型TFromを指定されたTTo型に変換します。
</summary>
      <typeparam name="TFrom" v="0000" i="0" />
      <typeparam name="TTo" v="0000" i="0" />
      <param name="fromValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.HttpClientExtensions.GetEncoding(System.Net.Http.HttpContent)">
      <summary v="1hf85j" i="0">
エンコード情報を取得する<see cref="T:System.Net.Http.HttpContent" /></summary>
      <param name="httpContent" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.core.Extensions.HttpClientExtensions.ReadAsByteArrayAsync(System.Net.Http.HttpContent,System.Text.Encoding)">
      <summary v="Vs5WG" i="0">
バイナリ配列として読み取り、指定されたエンコーディングに変換します。
</summary>
      <param name="httpContent" v="0000" i="0" />
      <param name="dstEncoding" v="3gsAdT" i="0">ターゲットエンコーディング</param>
      <exception cref="T:System.ArgumentException" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCode`1.GetHashCode(`0)">
      <summary v="lh0fV" i="0">
パラメータのハッシュ値を計算する
</summary>
      <param name="parameter" v="3HK7tg" i="0">パラメーター</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCode`1.HashCodeEquals(`0,`0)">
      <summary v="277aqd" i="0">
2つのパラメータ値のハッシュが等しいかどうかを計算する
</summary>
      <param name="parameter1" v="30MREE" i="0">パラメータ1</param>
      <param name="parameter2" v="YZiuF" i="0">パラメータ2</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeExtensions.GetParametersHashCode``1(``0)">
      <summary v="4PHukz" i="0">
すべてのパラメーターのHashCodeを計算する
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <param name="component" v="4TC8iJ" i="0">コンポーネント</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeProvider.Create(System.Type)">
      <summary v="4SPSAV" i="0">
パラメーターに適切なハッシュプロバイダーを作成します。
</summary>
      <param name="parameterType" v="4I5cph" i="0">パラメータタイプ</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.HashCodeProvider.GetHashCode(System.Object)">
      <summary v="4Vme4X" i="0">
パラメータ値のハッシュ値を取得します。
</summary>
      <param name="parameter" v="4I5cph" i="0">パラメータタイプ</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.#ctor(System.Reflection.PropertyInfo)">
      <summary v="24e72M" i="0">
コンポーネントのパラメータ记述子
</summary>
      <param name="property" v="33iWJQ" i="0">対応型</param>
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.CreateGetFunc(System.Reflection.PropertyInfo)">
      <summary v="2h7DUq" i="0">
プロパティのgetデリゲートを作成する
</summary>
      <param name="property" v="2UyZk2" i="0">プロパティ</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.GetValueHashCode(`0)">
      <summary v="13vswS" i="0">
パラメータ値のハッシュを返します。
</summary>
      <param name="component" v="1I629k" i="0">组织</param>
      <exception cref="T:System.NotSupportedException" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.HashCodes.ParameterDescriptor`1.IsEventCallBack(System.Reflection.PropertyInfo)">
      <summary v="4WeCE2" i="0">
EventCallback型かどうかを確認する
</summary>
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.Formatter.ToPercentWithoutBlank(System.Double)">
      <summary v="8T4Rw" i="0">
WASMモードでは、ダブルナンバーをパーセンテージにフォーマットすると、ナンバーと % の間に空白が表示されます。「35.00% 」
空白スペースを避けるために、代わりにこのメソッドを使用します
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.Formatter`1.ParseSpanTimeFormatString(System.String)">
      <summary v="2DFOjP" i="0">
他の文字をフォーマット文字列で解析します。
</summary>
      <remarks>refer to https://docs.microsoft.com/en-us/dotnet/standard/base-types/custom-timespan-format-strings#other-characters</remarks>
      <param name="format" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet(System.Object,System.String)">
      <summary v="3qsIng" i="0">
パスによるメンバー値の取得
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet``1(System.Object,System.String)">
      <summary v="3qsIng" i="0">
パスによるメンバー値の取得
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGet``2(``0,System.String)">
      <summary v="3qsIng" i="0">
パスによるメンバー値の取得
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault(System.Object,System.String)">
      <summary v="4a1HWG" i="0">
パスでnullaableメンバー値を取得すると、すべての例外がキャッチされ、nullが返されます。
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault``1(System.Object,System.String)">
      <summary v="4a1HWG" i="0">
パスでnullaableメンバー値を取得すると、すべての例外がキャッチされ、nullが返されます。
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathGetOrDefault``2(``0,System.String)">
      <summary v="4a1HWG" i="0">
パスでnullaableメンバー値を取得すると、すべての例外がキャッチされ、nullが返されます。
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet(System.Object,System.String,System.Object)">
      <summary v="3EPTh0" i="0">
パスによるメンバー値の設定
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet``1(System.Object,System.String,``0)">
      <summary v="3EPTh0" i="0">
パスによるメンバー値の設定
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathExtensions.PathSet``2(``0,System.String,``1)">
      <summary v="3EPTh0" i="0">
パスによるメンバー値の設定
</summary>
      <param name="item" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <typeparam name="TITem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="IEM4X" i="0">
Get値デリゲートを取得します。デリゲートのタイプはと:<br />
'Func&lt;TItem, TValue&gt;':= Typeof (TItem) 、= Typeof (TValue) 、= Falseです。<br />
'Func&lt;object, TValue&gt;':= Typeof (オブジェクト),= Typeof (TValue) 、= Falseです。<br />
'Func&lt;object, object&gt;':= Typeof (オブジェクト),= Typeof (オブジェクト),= Falseです。<br />
'Func&lt;TItem、TValue?&gt;':= Typeof (TItem) 、= Typeof (TValue) 、= Trueです。<br />
'Func&lt;object, TValue?&gt;':= Typeof (オブジェクト),= Typeof (TValue) 、= Trueです。<br />
'Func&lt;object, object?&gt;':= Typeof (オブジェクト),= Typeof (オブジェクト),= Trueです。<br /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="243k0x" i="0">アクセスオブジェクトのタイプ</param>
      <param name="path" v="31OaeH" i="0">文字列パス</param>
      <param name="paramType" v="1lMs0o" i="0">アイテムをオブジェクトとして渡す場合は、trueに設定します。</param>
      <param name="valueType" v="RS5c9" i="0">オブジェクトとして値を取得する場合は、trueに設定します。</param>
      <param name="checkNull" v="3hhVUM" i="0">Trueの場合、デリゲートはパスがnullであり、戻り値またはデフォルト値ではないことを確認します。戻り値の型がValueTypeの場合、デリゲートはNullable&lt;T&gt; を返します。
Falseの場合、デリゲートはnullではないパスをチェックしないため、パスにnull値が含まれているか、キーが見つからない場合、例外がスローされます。</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate(System.String,System.Type)">
      <summary v="2EGHXe" i="0">
Get valueデリゲートを取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate``1(System.String,System.Type)">
      <summary v="2EGHXe" i="0">
Get valueデリゲートを取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegate``2(System.String)">
      <summary v="2EGHXe" i="0">
Get valueデリゲートを取得する
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault(System.String,System.Type)">
      <summary v="3V8rsK" i="0">
取得nullable値デリゲート
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault``1(System.String,System.Type)">
      <summary v="3V8rsK" i="0">
取得nullable値デリゲート
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetDelegateDefault``2(System.String)">
      <summary v="3V8rsK" i="0">
取得nullable値デリゲート
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetExpression(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="4XJufI" i="0">
Get値式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="paramType" v="0000" i="0" />
      <param name="valueType" v="0000" i="0" />
      <param name="checkNull" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda(System.String,System.Type,System.Type,System.Type,System.Boolean)">
      <summary v="TEvn8" i="0">
を取得すると、ラムダ式の型はと:<br />
'式 &lt;Func&lt;TItem、TValue&gt;&gt;':= Typeof (TItem) 、= Typeof (TValue) 、= Falseです。<br />
'式 &lt;Func&lt;object, TValue&gt;&gt;':= Typeof (オブジェクト),= Typeof (TValue) 、= Falseです。<br />
'式 &lt;Func&lt;object, object&gt;&gt;':= Typeof (オブジェクト),= Typeof (オブジェクト),= Falseです。<br />
'式 &lt;Func&lt;TItem、TValue?&gt;&gt;':= Typeof (TItem) 、= Typeof (TValue) 、= Trueです。<br />
'式 &lt;Func&lt;object, TValue ?&gt;&gt;':= Typeof (オブジェクト),= Typeof (TValue) 、= Trueです。<br />
'式 &lt;Func&lt;object, object ?&gt;&gt;':= Typeof (オブジェクト),= Typeof (オブジェクト),= Trueです。<br /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="checkNull" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="243k0x" i="0">アクセスオブジェクトのタイプ</param>
      <param name="path" v="31OaeH" i="0">文字列パス</param>
      <param name="paramType" v="1lMs0o" i="0">アイテムをオブジェクトとして渡す場合は、trueに設定します。</param>
      <param name="valueType" v="RS5c9" i="0">オブジェクトとして値を取得する場合は、trueに設定します。</param>
      <param name="checkNull" v="3hhVUM" i="0">Trueの場合、デリゲートはパスがnullであり、戻り値またはデフォルト値ではないことを確認します。戻り値の型がValueTypeの場合、デリゲートはNullable&lt;T&gt; を返します。
Falseの場合、デリゲートはnullではないパスをチェックしないため、パスにnull値が含まれているか、キーが見つからない場合、例外がスローされます。</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda(System.String,System.Type)">
      <summary v="l9gOr" i="0">
Get値ラムダ式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda``1(System.String,System.Type)">
      <summary v="l9gOr" i="0">
Get値ラムダ式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambda``2(System.String)">
      <summary v="l9gOr" i="0">
Get値ラムダ式を取得する
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault(System.String,System.Type)">
      <summary v="5YTrN" i="0">
Nullable値ラムダ式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault``1(System.String,System.Type)">
      <summary v="5YTrN" i="0">
Nullable値ラムダ式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.GetLambdaDefault``2(System.String)">
      <summary v="5YTrN" i="0">
Nullable値ラムダ式を取得する
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate(System.String,System.Type,System.Type,System.Type)">
      <summary v="247ukh" i="0">
設定値のデリゲートを取得すると、デリゲートのタイプはと:<br />
'アクション &lt;TItem、TValue&gt;':= Typeof (TItem) 、= Typeof (TValue)。<br />
'Action&lt;object, TValue&gt;':= Typeof (オブジェクト),= Typeof (TValue)。<br />
'Action&lt;object, object&gt;':= Typeof (オブジェクト),= Typeof (オブジェクト)<br /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="3KAWC" i="0">アイテムのタイプ</param>
      <param name="path" v="1tDgZj" i="0">メンバーパス文字列</param>
      <param name="paramType" v="3EPEMR" i="0">着信オブジェクトのタイプ</param>
      <param name="valueType" v="4S22WK" i="0">割り当てオブジェクトのタイプ</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate(System.String,System.Type)">
      <summary v="1tIQdL" i="0">
設定値のデリゲートを取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate``1(System.String,System.Type)">
      <summary v="1tIQdL" i="0">
設定値のデリゲートを取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetDelegate``2(System.String)">
      <summary v="1tIQdL" i="0">
設定値のデリゲートを取得する
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetExpression(System.String,System.Type,System.Type,System.Type)">
      <summary v="2YPZv4" i="0">
セット値式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <param name="paramType" v="0000" i="0" />
      <param name="valueType" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda(System.String,System.Type,System.Type,System.Type)">
      <summary v="4MOdQj" i="0">
設定値のラムダ式を取得します。ラムダ式の型はと:<br />
'表現 &lt;アクション &lt;TItem、TValue&gt;&gt;':= Typeof (TItem) 、= Typeof (TValue)。<br />
'式 &lt;アクション &lt;オブジェクト、TValue&gt;&gt;':= Typeof (オブジェクト),= Typeof (TValue)。<br />
'式 &lt;アクション &lt;オブジェクト、オブジェクト&gt;&gt;':= Typeof (オブジェクト),= Typeof (オブジェクト)<br /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="paramType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /><paramref name="valueType" /></summary>
      <param name="itemType" v="3KAWC" i="0">アイテムのタイプ</param>
      <param name="path" v="1tDgZj" i="0">メンバーパス文字列</param>
      <param name="paramType" v="3EPEMR" i="0">着信オブジェクトのタイプ</param>
      <param name="valueType" v="4S22WK" i="0">割り当てオブジェクトのタイプ</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda(System.String,System.Type)">
      <summary v="132T86" i="0">
設定値ラムダ式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda``1(System.String,System.Type)">
      <summary v="132T86" i="0">
設定値ラムダ式を取得する
</summary>
      <param name="itemType" v="0000" i="0" />
      <param name="path" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.MemberPath.PathHelper.SetLambda``2(System.String)">
      <summary v="132T86" i="0">
設定値ラムダ式を取得する
</summary>
      <param name="path" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
      <typeparam name="TValue" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ClassGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="3kkUvI" i="0">
C.小道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ClassGetPropertyOrNull(System.Linq.Expressions.Expression,System.String)">
      <summary v="1RqOfF" i="0">
C?。小道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.GetRootParameterExpression(System.Linq.Expressions.Expression)">
      <summary v="2GqtB8" i="0">
式は次のようになります。ParameterExpression-&gt;MemberExpression1-&gt;MemberExpression2. ..,
「Expression」のルートがParameterExpressionでない場合、これはnullを返します。
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsClass(System.Linq.Expressions.Expression)">
      <summary v="1fYDYr" i="0">
式を確認します。型はクラス、そうでない場合はスローと例外です。
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsNullableTypeOrThrow(System.Linq.Expressions.Expression)">
      <summary v="4ElDLn" i="0">
式を確認します。タイプはNullable&lt;T&gt; で、そうでない場合はスローと例外
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.IsValueType(System.Linq.Expressions.Expression)">
      <summary v="Ty4KO" i="0">
式を確認します。タイプはValueTypeであり、Nullable&lt;T&gt; ではありません。そうでない場合は、スローと例外
</summary>
      <param name="expression" v="0000" i="0" />
      <exception cref="T:System.ArgumentNullException" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="2TjE8o" i="0">
NV!。値。提案、おそらく値なしのInvalidOperationException
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetPropOrNull(System.Linq.Expressions.Expression,System.String)">
      <summary v="1x7cZa" i="0">
NV?。値。小道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetValue(System.Linq.Expressions.Expression)">
      <summary v="1rT0TK" i="0">
NV!。値、おそらく値なしのInvalidOperationException
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.NullableTypeGetValueOrNull(System.Linq.Expressions.Expression)">
      <summary v="373AOg" i="0">
NV?。価値
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ParseIndexAccess(System.String)">
      <summary v="1CTdtF" i="0">
プロパティ文字列にインデックス操作があるかどうかを確認し、式を解析します。
</summary>
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
      <exception cref="T:System.InvalidOperationException" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.TryConvertToNullable(System.Linq.Expressions.Expression)">
      <summary v="1TR7Jh" i="0">
式の型をNullable型に変換してみてください。NullableでないValueTypeのみを変換できます。
</summary>
      <param name="expression" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Core.Helpers.PropertyAccessHelper.ValueTypeGetProperty(System.Linq.Expressions.Expression,System.String)">
      <summary v="4BMgnr" i="0">
V.小道具
</summary>
      <param name="expression" v="0000" i="0" />
      <param name="property" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.CountDown.Reset">
      <summary v="3jhNiH" i="0">
カウントダウンをリセットする
</summary>
    </member>
    <member name="M:AntDesign.DateHelper.AddDaysSafely(System.DateTime,System.Int32)">
      <summary v="tyQe5" i="0">
System System System System System
関数によるAddDaysは、System.ArgumentOutOfRangeExceptionをスローすることはありません
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddMonthsSafely(System.DateTime,System.Int32)">
      <summary v="2eg2rN" i="0">
System System System System System System System
関数によるAddMonthsは、System.ArgumentOutOfRangeExceptionを投げることはありません
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.AddYearsSafely(System.DateTime,System.Int32)">
      <summary v="31u7rC" i="0">
System System System System System System
関数によるAddYearsは、System.ArgumentOutOfRangeExceptionを投げることはありません
</summary>
      <param name="currentDate" v="0000" i="0" />
      <param name="value" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfDay(System.DateTime)">
      <summary v="rYvKV" i="0">
たとえば、currentDateTimeが2020-01-04 05:34:55の場合:
次の日付shoubleは2021-01-05 00:00:00、それは次の日の開始日です
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfDecade(System.DateTime)">
      <summary v="1kzAtL" i="0">
たとえば、
CurrentDateTimeが2020-01-04 05:34:55の場合:
次の日付shoubleは2030-01-01 00:00:00、それは次の10年の開始日です

CurrentDateTimeが2023-01-04 05:34:55の場合:
次の日付shoubleは2030-01-01 00:00:00、それは次の10年の開始日です

CurrentDateTimeが2018-01-04 05:34:55の場合:
次の日付shouble be 2020-01-01 00:00:00、それは次の10年の開始日です
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfMonth(System.DateTime)">
      <summary v="1z1IDD" i="0">
たとえば、currentDateTimeが2020-01-04 05:34:55の場合:
次の日付shouble be 2020-02-01 00:00:00、それは来月の開始日です
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfQuarter(System.DateTime)">
      <summary v="3VCB6e" i="0">
たとえば、currentDateTimeが2020-01-04 05:34:55の場合:
次の日付shouble be 2020-04-01 00:00:00、それは2020年の次の四半期の開始日です
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DateHelper.GetNextStartDateOfYear(System.DateTime)">
      <summary v="33tvDc" i="0">
たとえば、currentDateTimeが2020-01-04 05:34:55の場合:
次の日付shoubleは2021-01-01 00:00:00、それは来年の開始日です
</summary>
      <param name="date" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePicker`1.GetIndexValue(System.Int32)">
      <summary v="29wd8z" i="0">
ピッカーの値を取得する
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePicker`1.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="15XtPd" i="0">
キーボードキーが入力要素内で押されなくなった場合、メソッドはEventCallBack経由で呼び出されます。
</summary>
      <param name="e" v="19uVqq" i="0">入力要素内で押されたキー (組み合わせ) が含まれています</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.Blur(System.Int32)">
      <summary v="NzMp1" i="0">
ピッカーからフォーカスを削除する
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ChangePickerValue(System.DateTime,System.Nullable{System.Int32})">
      <summary v="4PBJQR" i="0">
ピッカーに表示される日付を変更します。
</summary>
      <param name="date" v="2tF8nX" i="0">保存する新しい日付。</param>
      <param name="index" v="4P8AAT" i="0">入力ボックスのインデックス (0 = inputStartおよび1 = inputEnd) (RangePickerのみ)</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ChangeValue(System.DateTime,System.Int32,System.Boolean)">
      <summary v="JXlJa" i="0">
指定されたピッカーパネルの値を変更する
</summary>
      <param name="value" v="dEOrC" i="0">に変更する値</param>
      <param name="index" v="3Pn3Lz" i="0">変更するピッカーパネルのインデックス</param>
      <param name="closeDropdown" v="1qiJfH" i="0">設定時にパネルを閉じるかどうか</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.ClearValue(System.Int32,System.Boolean)">
      <summary v="2OQIfI" i="0">
指定されたピッカーパネルインデックスの値をクリアする
</summary>
      <param name="index" v="4FVGEz" i="0">クリアするピッカーパネルのインデックス</param>
      <param name="closeDropdown" v="33hqaP" i="0">クリアするかどうかにかかわらず、パネルを閉じる</param>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.Close">
      <summary v="3EyWuO" i="0">
Popoverを閉じる
</summary>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.Focus(System.Int32)">
      <summary v="WUaAD" i="0">
ピッカーにフォーカスを追加する
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetIndexPickerValue(System.Int32)">
      <summary v="wsrBf" i="0">
PickerValue by pickerインデックスを取得します。 インデックスはピッカーパネルを指すことに注意してください
テキストを入力しないでください。 RangePickerの場合、2つの入力が2つのパネルを生成します。
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetIndexValue(System.Int32)">
      <summary v="2rt7aO" i="0">
インデックスでピッカーパネルの値を取得する
</summary>
      <param name="index" v="2WrpHQ" i="0">の値を取得するためのピッカーパネルのインデックス</param>
      <returns v="1eCmAU" i="0">パネルのDateTime値</returns>
    </member>
    <member name="M:AntDesign.DatePickerBase`1.GetOnFocusPickerIndex">
      <summary v="4T2tLt" i="0">
現在フォーカスしているピッカーのインデックスを取得する
</summary>
      <returns v="I5IB4" i="0">ピッカーのインデックス。 0は、どちらも焦点が合っていないことを意味する場合もあります。</returns>
    </member>
    <member name="M:AntDesign.DayOfWeekHelper.GetDiffForDayOfWeek(System.DayOfWeek)">
      <summary v="2AmivX" i="0">
週の正しい最初の日を取得するために開始日に追加する必要がある日数を返します。
</summary>
      <param name="firstDayOfWeek" v="2NXrGl" i="0">現在のロケールで定義されている週の初日。</param>
      <returns v="4ZXel1" i="0">日のdiff。</returns>
    </member>
    <member name="M:AntDesign.Dialog.AppendToContainer">
      <summary v="rD7kr" i="0">
ボディへのappend
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.CleanShowAnimationAsync">
      <summary v="2e9XUW" i="0">
Clear ant-model enter classを使用すると、user-selectが無効になります。
詳細は、スタイル/mixins/modal-mask.lessを参照してください。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.GetStyle">
      <summary v="449EWV" i="0">
Ant-モーダルスタイル
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.Hide">
      <summary v="B1FcK" i="0">
アニメーションを介してダイアログを非表示にする
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.IsShow">
      <summary v="4TzPoA" i="0">
ダイアログが表示されているかどうかを判断する
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="isFirst" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnCloserClick">
      <summary v="wH6uH" i="0">
Closer (X) クリックイベント
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="1oMDd3" i="0">
タブとESCのキーイベントを聴く
</summary>
      <param name="e" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnMaxBtnClick">
      <summary v="wH6uH" i="0">
Closer (X) クリックイベント
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.OnParametersSetAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.Show">
      <summary v="3EGs1m" i="0">
アニメーションを介してダイアログを表示
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dialog.TryResetModalStyle">
      <summary v="1O67Zt" i="0">
モーダルがドラッグ可能な場合は、最初のショーと同様の位置スタイルをリセットします
</summary>
    </member>
    <member name="M:AntDesign.DialogWrapper.DestroyAsync">
      <summary v="1InHPh" i="0">
DOMツリーからコンポーネントを破壊する
</summary>
    </member>
    <member name="M:AntDesign.DialogWrapper.OnAfterRenderAsync(System.Boolean)">
      <summary v="0000" i="0" />
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DialogWrapper.OnParametersSetAsync">
      <summary v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.CloseClick">
      <summary v="41qy8P" i="0">
Closerがクリックされたときにトリガーされる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.HandleClose(System.Boolean)">
      <summary v="ydVZ5" i="0">
閉じる後のクリーンアップ
</summary>
      <param name="isChangeByParamater" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Drawer.MaskClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="3dYfV8" i="0">
マスクがクリックされたときにトリガーされる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnClose(AntDesign.DrawerRef)">
      <summary v="3VEoDU" i="0">
引き出しを閉じる
</summary>
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnCreate(AntDesign.DrawerRef)">
      <summary v="1IAQRb" i="0">
引き出しを作成して開く
</summary>
    </member>
    <member name="M:AntDesign.DrawerContainer.DrawerService_OnUpdateEvent(AntDesign.DrawerRef)">
      <summary v="3xcPb5" i="0">
引き出しを更新
</summary>
      <param name="drawerRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.CloseAsync">
      <summary v="1qTxxs" i="0">
近い引き出し
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.OpenAsync">
      <summary v="1B0nA" i="0">
オープン引き出し
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.UpdateConfigAsync">
      <summary v="4LO2Qo" i="0">
Visible = trueのdrawer設定の更新
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef.UpdateConfigAsync(AntDesign.DrawerOptions)">
      <summary v="KYvjl" i="0">
新しいオプションでdrawer configを更新する
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerRef`1.CloseAsync(`0)">
      <summary v="1fh4wR" i="0">
関闭会
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerService.CreateAsync(AntDesign.DrawerOptions)">
      <summary v="4COGsK" i="0">
結果なしでシンプルな引き出しを作成して開く
</summary>
      <param name="options" v="4Co7ip" i="0">引き出しオプション</param>
      <returns v="4dM9xE" i="0">引き出しの参考</returns>
    </member>
    <member name="M:AntDesign.DrawerService.CreateAsync``3(AntDesign.DrawerOptions,``1)">
      <summary v="3xw7KV" i="0">
テンプレートで引き出しを作成して開きます
</summary>
      <typeparam name="TComponent" v="zYcLf" i="0">DrawerTemplateの実装のタイプ</typeparam>
      <typeparam name="TComponentOptions" v="70Cl2" i="0">
      </typeparam>
      <typeparam name="TResult" v="22qdCS" i="0">戻り値のタイプ</typeparam>
      <param name="config" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <returns v="4dM9xE" i="0">引き出しの参考</returns>
    </member>
    <member name="M:AntDesign.DrawerService.CreateDialogAsync``3(AntDesign.DrawerOptions,``1)">
      <summary v="3IA0Sy" i="0">
引き出しを作成して開く
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DrawerService.UpdateAsync(AntDesign.DrawerRef)">
      <summary v="1KxX7p" i="0">
引き出しを更新する
</summary>
      <param name="drawerRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Dropdown.OnClickDiv(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="uNBE4" i="0">
トリガークリックを処理します。
</summary>
      <param name="args" v="2rN4Oq" i="0">MouseEventArgs</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.DropdownButton.OnAfterRenderAsync(System.Boolean)">
      <summary v="li9fM" i="0">
オーバーレイトリガーをラッピング要素に取り付けるように強制します。
右ボタン。 右ボタンを包む必要があり、
オーバーレイが最初の子を探しているので
オーバーレイの位置を計算するためのオーバーレイトリガーの要素。
右のボタンがトリガーだった場合、その最初の子
はアイコン/省略記号で、オーバーレイは
高すぎるレンダリング。
</summary>
      <param name="firstRender" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.EnumerableExtensions.AddIf``1(System.Collections.Generic.IList{``0},System.Boolean,``0)">
      <summary v="39Zky1" i="0">
条件がtrueのときにアイテムにアイテムを追加する
</summary>
      <typeparam name="T" v="0000" i="0" />
      <param name="items" v="0000" i="0" />
      <param name="condition" v="0000" i="0" />
      <param name="item" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="ne9hr" i="0">
キャンセルボタンがトリガーされたときにコールバックします。これを使用して、終了をキャンセルできます。
时回回をキャンセル,可来取関を闭じます。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.CloseFeedbackAsync">
      <summary v="MRcJX" i="0">
ユーザーがボタンを介してテンプレートを閉じることができるように

</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2P1DPD" i="0">
OKボタンがトリガーされたときにコールバックします。これを使用して、終了をキャンセルできます。
可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OnFeedbackCancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="ne9hr" i="0">
キャンセルボタンがトリガーされたときにコールバックします。これを使用して、終了をキャンセルできます。
时回回をキャンセル,可来取関を闭じます。
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackComponent`1.OnFeedbackOkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2P1DPD" i="0">
OKボタンがトリガーされたときにコールバックします。これを使用して、終了をキャンセルできます。
可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.CloseAsync">
      <summary v="2ZRDin" i="0">
フィードバックコンポーネントを閉じるだけで、OkAsyncまたはOkCancelをトリガーしません
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.OpenAsync">
      <summary v="17W1IJ" i="0">
ちょうど近いフィードバックコンポーネントを開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefBase.UpdateConfigAsync">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.FeedbackRefWithOkCancelBase.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2goXMY" i="0">
[キャンセル] ボタンクリック
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.FeedbackRefWithOkCancelBase.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2chA2T" i="0">
[OK] ボタンクリック
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Form`1.Reset">
      <summary v="1T9H3W" i="0">
フォーム内のすべての値をリセットする
</summary>
    </member>
    <member name="M:AntDesign.Form`1.SetValidationMessages(System.String,System.String[])">
      <summary v="2RXa8p" i="0">
検証メッセージを特定のフィールドに設定します。
</summary>
      <param name="field" v="1vxpf6" i="0">フィールド名</param>
      <param name="errorMessages" v="1NA1dx" i="0">エラーメッセージ</param>
    </member>
    <member name="M:AntDesign.Form`1.Submit">
      <summary v="8Wx47" i="0">
フォームを送信します。 検証をトリガーし、<see cref="P:AntDesign.Form`1.OnFinish" />または<see cref="P:AntDesign.Form`1.OnFinishFailed" />を参照してください。
</summary>
    </member>
    <member name="M:AntDesign.Form`1.Validate">
      <summary v="3XTK5k" i="0">
検証の実行
</summary>
      <returns v="cunYz" i="0">リターン<c>True</c>すべてのフィールドが有効な場合</returns>
    </member>
    <member name="M:AntDesign.Form`1.ValidationReset">
      <summary v="3B9ksl" i="0">
検証のリセット
</summary>
    </member>
    <member name="M:AntDesign.FormItem.GetRulesFromAttributes">
      <summary v="3N16ij" i="0">
ロケール検証メッセージテンプレートを使用するためのFormValidationRuleへのtansform属性
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.HtmlRenderer.HandleException(System.Exception)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.HtmlRenderer.UpdateDisplayAsync(Microsoft.AspNetCore.Components.RenderTree.RenderBatch@)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.IFeedbackRef.CloseAsync">
      <summary v="2ZRDin" i="0">
フィードバックコンポーネントを閉じるだけで、OkAsyncまたはOkCancelをトリガーしません
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IFeedbackRef.OpenAsync">
      <summary v="21ZJm2" i="0">
コンポーネントを開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IFeedbackRef.UpdateConfigAsync">
      <summary v="YyiiH" i="0">
コンポーネントの更新
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IForm.Reset">
      <summary v="8JhiC" i="0">
すべてのフィールドの値と検証メッセージをリセットします。
</summary>
    </member>
    <member name="M:AntDesign.IForm.SetValidationMessages(System.String,System.String[])">
      <summary>
特定のフィールドの検証メッセージを設定します。
</summary>
      <param name="field" v="0000" i="0" />
      <param name="errorMessages" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IForm.Submit">
      <summary v="1o8vxt" i="0">
すべてのフィールドが有効である間に「OnFinish」をトリガーし、それ以外の場合は「OnFinishFaled」をトリガーします。
</summary>
    </member>
    <member name="M:AntDesign.IForm.Validate">
      <summary v="1O3Irc" i="0">
すべてのフィールドを検証します。
</summary>
      <returns v="24dNwT" i="0">すべてのフィールドが有効な場合はtrue、そうでない場合はfalse。</returns>
    </member>
    <member name="M:AntDesign.IMessageService.Config(AntDesign.MessageGlobalConfig)">
      <summary v="4WvGWn" i="0">
グローバルメッセージオプションの設定
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Error(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="4Zagvq" i="0">
エラーメッセージを表示
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Info(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="3bRkyo" i="0">
Infoメッセージを表示
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Loading(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="2LuCX0" i="0">
読み込みメッセージを表示
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Open(AntDesign.MessageConfig)">
      <summary v="3r0kPR" i="0">
提供された設定でメッセージを開く
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Success(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="2PmtLb" i="0">
成功メッセージを表示
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IMessageService.Warning(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment,AntDesign.MessageConfig},System.Nullable{System.Double},System.Action)">
      <summary v="3bSb0e" i="0">
警告メッセージを表示
</summary>
      <param name="content" v="0000" i="0" />
      <param name="duration" v="0000" i="0" />
      <param name="onClose" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IModalTemplate.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="HOT19" i="0">
キャンセルボタンがトリガーされたときにコールバック
可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="1st9il" i="0">
OKボタンがトリガーされたときにコールバック
可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OnFeedbackCancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="HOT19" i="0">
キャンセルボタンがトリガーされたときにコールバック
可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可可
</summary>
    </member>
    <member name="M:AntDesign.IModalTemplate.OnFeedbackOkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="11XfcB" i="0">
OKボタンがトリガーされたときにコールバック
定定数時的に
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Input`1.Blur">
      <summary v="2TivqD" i="0">
入力要素からフォーカスを削除します。
</summary>
    </member>
    <member name="M:AntDesign.Input`1.Focus(AntDesign.FocusBehavior,System.Boolean)">
      <summary v="2TJZHv" i="0">
オプションの動作で入力コンポーネントの動作に焦点を当てます。
</summary>
      <param name="behavior" v="3ckSUH" i="0">Enum: AntDesign.FocusBehavior</param>
      <param name="preventScroll" v="mJzFU" i="0">Trueの場合、フォーカスを受け取る要素はスクロールされません。</param>
    </member>
    <member name="M:AntDesign.Input`1.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <summary v="2rohGm" i="0">
ユーザーがコンテンツを追加/削除したときに呼び出される
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.InputNumber`1.TryParseValueFromString(System.String,`0@,System.String@)">
      <summary v="1YS4Nn" i="0">
常にtrueを返します。入力文字列が無効な場合はresult = default、入力文字列がnullまたは空の場合はresult = DefaultValue
</summary>
      <param name="value" v="0000" i="0" />
      <param name="result" v="0000" i="0" />
      <param name="validationErrorMessage" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.InputPassword.Focus(AntDesign.FocusBehavior,System.Boolean)">
      <summary v="BBLs9" i="0">
オプションの動作でInputPasswordコンポーネントの動作に焦点を当てます。
Wasmに必要な特別な行動。
</summary>
      <param name="behavior" v="3ckSUH" i="0">Enum: AntDesign.FocusBehavior</param>
      <param name="preventScroll" v="mJzFU" i="0">Trueの場合、フォーカスを受け取る要素はスクロールされません。</param>
    </member>
    <member name="M:AntDesign.Internal.DateTimeInputMaskConverter.Convert(System.String,System.String)">
      <summary v="1qVqcd" i="0">
文字列値をマスクに変換する
</summary>
      <param name="value" v="0000" i="0" />
      <param name="mask" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.IsHiding">
      <summary v="4zx3a" i="0">
オーバーレイが完全に非表示になると、IsPopupはtrueを返します
オーバーレイが非表示 (非表示アニメーションの再生) の場合、IsPopupはfalseを返し、IsHidingはtrueを返します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.UpdateChildState(AntDesign.Internal.Overlay,System.Boolean)">
      <summary v="4HGtC6" i="0">
任意の子オーバーレイショーまたは非表示がある場合に設定
子供が表示されている場合、オーバーレイは非表示になりません
</summary>
      <param name="child" v="0000" i="0" />
      <param name="isChildOverlayShow" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.Overlay.WaitFor(System.Func{System.Boolean},System.Int32,System.Int32)">
      <summary v="WmAnP" i="0">
述語が真になるまで、または述語が真になるまで、特定のミリ秒ごとにチェック述語をプローブします。
Probingsの数が尽きます。
</summary>
      <param name="check" v="DTHnp" i="0">待機後に毎回実行される述語TimeInMilisecondsPerProbingが通過します。</param>
      <param name="probings" v="3vA775" i="0">プロービングの最大数。 この数に達した後、方法は終了する。</param>
      <param name="waitTimeInMilisecondsPerProbing" v="3rKbiP" i="0">各プロービングの間にどれくらい待つか。</param>
      <returns v="VAeqQ" i="0">タスク</returns>
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.Close">
      <summary v="2KR58q" i="0">
オーバーレイを隠します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.IsOverlayShow">
      <summary v="2Ggocw" i="0">
オーバーレイが現在表示されているかどうかを確認します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.OnClickDiv(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="uNBE4" i="0">
トリガークリックを処理します。
</summary>
      <param name="args" v="2rN4Oq" i="0">MouseEventArgs</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.OnMouseUp(System.Text.Json.JsonElement)">
      <summary v="4XMUqd" i="0">
ドキュメント上のマウスアップ
</summary>
      <param name="element" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Internal.OverlayTrigger.SetVisible(System.Boolean)">
      <summary v="3vKfxn" i="0">
オーバーレイの可視性を切り替えます。
</summary>
      <param name="visible" v="P3osx" i="0">Boolean: 可視性true/false</param>
    </member>
    <member name="M:AntDesign.IOkCancelRef.CancelAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="2qxEww" i="0">
トリガーキャンセルボタンクリック
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef.OkAsync(AntDesign.ModalClosingEventArgs)">
      <summary v="1AzDVn" i="0">
トリガーOKボタンクリック
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef`1.CancelAsync(`0)">
      <summary v="2qxEww" i="0">
トリガーキャンセルボタンクリック
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.IOkCancelRef`1.OkAsync(`0)">
      <summary v="1AzDVn" i="0">
トリガーOKボタンクリック
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.MenuHelper.EqualsHrefExactlyOrIfTrailingSlashAdded(System.String,System.String)">
      <summary v="45QEiW" i="0">
平等のために2つのURIを比較し、オプションのトレーリングスラッシュを説明します。
</summary>
      <param name="currentUriAbsolute" v="2FTHGm" i="0">現在の場所の絶対URI。</param>
      <param name="hrefAbsolute" v="2oqpNf" i="0">比較する絶対URI。</param>
      <returns v="0721d" i="0">URIが等しい場合、または現在のURIに後続のスラッシュを追加すると、URIが等しくなる場合はtrueです。それ以外の場合は、falseです。</returns>
    </member>
    <member name="M:AntDesign.MenuHelper.IsStrictlyPrefixWithSeparator(System.String,System.String)">
      <summary v="21TnT1" i="0">
文字列値が厳密に別の文字列のプレフィックスであるかどうかを決定します。
</summary>
      <param name="value" v="4Mj5B9" i="0">チェックする文字列の値。</param>
      <param name="prefix" v="3FK6u0" i="0">チェックするプレフィックス。</param>
      <returns v="kserR" i="0">値がプレフィックスの後に区切り文字が続く場合はtrue、そうでない場合はfalseです。</returns>
    </member>
    <member name="M:AntDesign.MenuHelper.ShouldMatch(Microsoft.AspNetCore.Components.Routing.NavLinkMatch,System.String,System.String)">
      <summary v="2Yuawe" i="0">
指定された一致基準に基づいて、現在のURIが指定されたURIと一致するかどうかを決定します。
</summary>
      <param name="match" v="1c2o8O" i="0">一致基準 (正確またはプレフィックス)。</param>
      <param name="currentUriAbsolute" v="2FTHGm" i="0">現在の場所の絶対URI。</param>
      <param name="hrefAbsolute" v="21c5Xn" i="0">照合する絶対URI。</param>
      <returns v="eIoT1" i="0">基準に基づいてURIが一致する場合はtrue、そうでない場合はfalseです。</returns>
    </member>
    <member name="M:AntDesign.MenuLink.Dispose(System.Boolean)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.MenuLink.OnInitialized">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.MenuLink.OnParametersSet">
      <inheritdoc />
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalClosingEventArgs.Reject">
      <summary v="1weYjX" i="0">
モーダルを閉じることを拒否します。
</summary>
    </member>
    <member name="M:AntDesign.ModalRef.CloseAsync">
      <summary v="1C3EuD" i="0">
モーダルダイアログを閉じる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.OpenAsync">
      <summary v="4ej4FH" i="0">
モーダルダイアログを開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.SetConfirmLoading(System.Boolean)">
      <summary v="3rjfxG" i="0">
確認ボタンの読み込み状態を設定する
</summary>
      <param name="loading" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef.UpdateConfigAsync">
      <summary v="3HSUvR" i="0">
モーダルの更新
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalRef`1.CancelAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalRef`1.OkAsync(`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.ModalService.CheckConfirmOptionsIsNull(AntDesign.ConfirmOptions)">
      <summary v="ceR4u" i="0">
チェック確認オプションがnull
</summary>
      <param name="options" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CloseModalAsync(AntDesign.ModalRef)">
      <summary v="32KVPZ" i="0">
モーダルダイアログを閉じる
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Confirm(AntDesign.ConfirmOptions)">
      <summary v="446RlY" i="0">
[OK-Cancel Confirm] ダイアログを作成して開く
</summary>
      <param name="props" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.ConfirmAsync(AntDesign.ConfirmOptions)">
      <summary v="4GLQTQ" i="0">
[OK-Cancel Confirm] ダイアログを作成して開き、
OKボタンがクリックされたかどうかを示すbool値を返します
</summary>
      <param name="props" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateAsync(AntDesign.ConfirmOptions)">
      <summary v="mEobg" i="0">
OKを作成して開く-非同期の確認をキャンセル
</summary>
      <param name="config" v="VWReJ" i="0">オプション</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateAsync``3(AntDesign.ConfirmOptions,``1)">
      <summary v="ozXdH" i="0">
テンプレートを作成して開く [確認] ダイアログ
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateConfirmAsync(AntDesign.ConfirmOptions)">
      <summary v="mEobg" i="0">
OKを作成して開く-非同期の確認をキャンセル
</summary>
      <param name="config" v="VWReJ" i="0">オプション</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateConfirmAsync``3(AntDesign.ConfirmOptions,``1)">
      <summary v="ozXdH" i="0">
テンプレートを作成して開く [確認] ダイアログ
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="config" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
モーダルを作成して開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``1(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
モーダルを作成して開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``2(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
テンプレートを使用してモーダルを作成して開く
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <param name="options" v="tybuH" i="0">モーダルオプション</param>
      <param name="componentOptions" v="3DQjZ" i="0">テンプレートcompoenntのオプションを設定する</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModal``3(AntDesign.ModalOptions,``1)">
      <summary v="BZBpW" i="0">
テンプレートコンポーネントを使用してModalを作成して開く
</summary>
      <typeparam name="TComponent" v="32TQtz" i="0">テンプレートコンポーネントのタイプ。</typeparam>
      <typeparam name="TComponentOptions" v="1r24BW" i="0">テンプレートコンポーネントオプションのタイプ。</typeparam>
      <typeparam name="TResult" v="3XbXsR" i="0">テンプレートコンポーネントから返される結果。</typeparam>
      <param name="options" v="tybuH" i="0">モーダルオプション</param>
      <param name="componentOptions" v="3DQjZ" i="0">テンプレートcompoenntのオプションを設定する</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
モーダルを作成して開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``1(AntDesign.ModalOptions)">
      <summary v="2CcdBC" i="0">
モーダルを作成して開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``2(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
テンプレートを使用してモーダルを作成して開く
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateModalAsync``3(AntDesign.ModalOptions,``1)">
      <summary v="UuMrr" i="0">
テンプレートを使用してモーダルを作成して開く
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
      <param name="options" v="0000" i="0" />
      <param name="componentOptions" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateOrOpenModalAsync(AntDesign.ModalRef)">
      <summary v="2bOTQb" i="0">
モーダルダイアログを作成または開く
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.CreateOrOpenModalAsync``1(AntDesign.ModalRef{``0})">
      <summary v="2bOTQb" i="0">
モーダルダイアログを作成または開く
</summary>
      <param name="modalRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Destroy(AntDesign.ConfirmRef)">
      <summary v="3tfjt5" i="0">
[確認] ダイアログを閉じる
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyAll">
      <summary v="1pE5wT" i="0">
すべての [確認] ダイアログを閉じる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyAllConfirmAsync">
      <summary v="1pE5wT" i="0">
すべての [確認] ダイアログを閉じる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.DestroyConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="2arRzl" i="0">
[確認] ダイアログを閉じる
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Error(AntDesign.ConfirmOptions)">
      <summary v="2ux7xK" i="0">
[OK-キャンセル] [エラー] アイコンを使用して [確認] ダイアログを作成して開く
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.ErrorAsync(AntDesign.ConfirmOptions)">
      <summary v="2Qy7Ap" i="0">
[OK-キャンセル] [エラー] アイコンを使用して [確認] ダイアログを作成して開き、
OKボタンがクリックされたかどうかを示すbool値を返します
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Info(AntDesign.ConfirmOptions)">
      <summary v="2Ho26k" i="0">
[OK-Cancel Confirm] ダイアログをinfoアイコンで作成して開く
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.InfoAsync(AntDesign.ConfirmOptions)">
      <summary v="4m1YE" i="0">
[OK-Cancel Confirm] ダイアログを情報アイコンで作成して開き、
OKボタンがクリックされたかどうかを示すbool値を返します
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.OpenConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="1l2VTY" i="0">
[確認] ダイアログを開く
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Success(AntDesign.ConfirmOptions)">
      <summary v="33yL7U" i="0">
成功アイコンでOK-Cancel Confirmダイアログを作成して開く
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.SuccessAsync(AntDesign.ConfirmOptions)">
      <summary v="4blYzC" i="0">
成功アイコンを使用してOK-Cancel Confirmダイアログを作成して開き、
OKボタンがクリックされたかどうかを示すbool値を返します
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.System#IDisposable#Dispose">
      <summary v="2VmIAJ" i="0">
インターフェイスIDisposableの実装
</summary>
    </member>
    <member name="M:AntDesign.ModalService.Update(AntDesign.ConfirmRef)">
      <summary v="1NFloI" i="0">
更新Visible = trueの確認
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.UpdateConfirmAsync(AntDesign.ConfirmRef)">
      <summary v="1NFloI" i="0">
更新Visible = trueの確認
</summary>
      <param name="confirmRef" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.Warning(AntDesign.ConfirmOptions)">
      <summary v="fbH97" i="0">
[OK-キャンセル] [警告] アイコンを使用して [確認] ダイアログを作成して開く
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ModalService.WarningAsync(AntDesign.ConfirmOptions)">
      <summary v="3rhIU9" i="0">
警告アイコンを使用してOK-Cancel Confirmダイアログを作成して開き、
OKボタンがクリックされたかどうかを示すbool値を返します
</summary>
      <param name="options" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Notification.Config(AntDesign.NotificationGlobalConfig)">
      <summary v="1is6NV" i="0">
グローバル設定の変更
</summary>
      <param name="defaultConfig" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.CloseAsync">
      <summary v="4UcOnP" i="0">
通知ボックスを閉じる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.OpenAsync">
      <summary v="4SH2nV" i="0">
通知ボックスを開く
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync">
      <summary v="3tSEAT" i="0">
Configプロパティを変更したら、通知ボックスを更新します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment})">
      <summary v="1mHuoq" i="0">
通知ボックスの説明とメッセージを更新する
</summary>
      <param name="description" v="0000" i="0" />
      <param name="message" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationRef.UpdateConfigAsync(OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment})">
      <summary v="2kVQOh" i="0">
通知ボックスの説明を更新する
</summary>
      <param name="description" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Close(System.String)">
      <summary v="3jolhi" i="0">
キーによるクローズ通知
</summary>
      <param name="key" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Config(AntDesign.NotificationGlobalConfig)">
      <summary v="4cjrnb" i="0">
すべての通知にデフォルト設定を提供
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.CreateRefAsync(AntDesign.NotificationConfig)">
      <summary v="2Bc7tH" i="0">
開かずにNotificationRefを作成するだけです
</summary>
      <param name="config" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Destroy">
      <summary v="39Brkl" i="0">
すべての通知ボックスを破壊する
</summary>
    </member>
    <member name="M:AntDesign.NotificationService.Error(AntDesign.NotificationConfig)">
      <summary v="xrKET" i="0">
NotificationType.Errorスタイルで通知ボックスを開く
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Info(AntDesign.NotificationConfig)">
      <summary v="pEMCC" i="0">
NotificationType.Infoスタイルで通知ボックスを開く
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Open(AntDesign.NotificationConfig)">
      <summary v="3MKyC" i="0">
通知ボックスを開く
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Success(AntDesign.NotificationConfig)">
      <summary v="4DfMLQ" i="0">
NotificationType.Successスタイルで通知ボックスを開く
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.UpdateAsync(System.String,OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment},System.Nullable{OneOf.OneOf{System.String,Microsoft.AspNetCore.Components.RenderFragment}})">
      <summary v="3C21Nn" i="0">
存在した通知ボックスを更新する
</summary>
      <param name="key" v="0000" i="0" />
      <param name="description" v="0000" i="0" />
      <param name="message" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Warn(AntDesign.NotificationConfig)">
      <summary v="bXGWQ" i="0">
警告方法に相当
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.NotificationService.Warning(AntDesign.NotificationConfig)">
      <summary v="2FtkJD" i="0">
NotificationType.Warningスタイルで通知ボックスを開く
</summary>
      <param name="config" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Pagination.GetItemIcon(Microsoft.AspNetCore.Components.RenderFragment{AntDesign.PaginationItemRenderContext},System.String)">
      <summary v="yaMOW" i="0">
レンダリングする必要がある計算されたアイコンノード。
</summary>
      <param name="icon" v="0000" i="0" />
      <param name="label" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Panel.SetActive(System.Boolean)">
      <summary v="3xKgL8" i="0">
パネルのアクティブ状態を設定する
</summary>
      <param name="active" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Panel.Toggle">
      <summary v="3ojfpk" i="0">
パネルのアクティブ状態を切り替えます
</summary>
    </member>
    <member name="M:AntDesign.RangePicker`1.GetIndexValue(System.Int32)">
      <summary v="3Nl0wm" i="0">
ピッカーインデックスで値を取得する
</summary>
      <param name="index" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.RangePicker`1.OnKeyDown(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs,System.Int32)">
      <summary v="15XtPd" i="0">
キーボードキーが入力要素内で押されなくなった場合、メソッドはEventCallBack経由で呼び出されます。
</summary>
      <param name="e" v="19uVqq" i="0">入力要素内で押されたキー (組み合わせ) が含まれています</param>
      <param name="index" v="3EB8uv" i="0">ピッカーインデックス-開始日は0、終了日は1を参照します</param>
    </member>
    <member name="M:AntDesign.RangePicker`1.OnValueChange(`0)">
      <summary v="3fp1oJ" i="0">
値の変更を処理します。
値が変更されると、PickerValuesはそれらの新しい値を指す必要があります
または値が渡されなかった場合は現在の日付。
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseAll">
      <summary v="DxSPd" i="0">
閉じるか、ピン留めされていないすべてのページを閉じる
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseCurrent">
      <summary v="4fGDon" i="0">
現在のページを閉じる
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CloseOther(System.String)">
      <summary v="1AstJw" i="0">
指定されたキーを持つページを除くすべてのページを閉じる
</summary>
      <param name="key" v="41HRQc" i="0">指定されたページのキー</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.ClosePage(System.String)">
      <summary v="2DgLqm" i="0">
指定されたキーに対応するページを閉じる
</summary>
      <param name="key" v="41HRQc" i="0">指定されたページのキー</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CreateTab(System.String,Microsoft.AspNetCore.Components.RenderFragment)">
      <summary v="1ZV1GJ" i="0">
ナビゲーションなしでタブを作成すると、タブがクリックされるまでページは実際にはレンダリングされません
</summary>
      <param name="pageUrl" v="cpmkn" i="0">ターゲットページのURL</param>
      <param name="titleTemplate" v="40GSf5" i="0">タブのタイトルショー</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.CreateTab(System.String,System.String)">
      <summary v="1ZV1GJ" i="0">
ナビゲーションなしでタブを作成すると、タブがクリックされるまでページは実際にはレンダリングされません
</summary>
      <param name="pageUrl" v="cpmkn" i="0">ターゲットページのURL</param>
      <param name="title" v="40GSf5" i="0">タブのタイトルショー</param>
    </member>
    <member name="M:AntDesign.ReuseTabsService.GetAllAssembly">
      <summary v="3UYZ3R" i="0">
すべてのアセンブリを取得
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.ReloadPage">
      <summary v="3tT3nA" i="0">
現在のページをリロード
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.ReloadPage(System.String)">
      <summary v="OXxMk" i="0">
指定されたキーに対応するページをリロードする
</summary>
      <param name="key" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.ReuseTabsService.ScanReuseTabsPageAttribute">
      <summary v="Yp05V" i="0">
ReuseTabsPageAttributeのスキャン
</summary>
    </member>
    <member name="M:AntDesign.ReuseTabsService.Update">
      <summary v="5CJpu" i="0">
の状態を更新します。<see cref="T:AntDesign.ReuseTabs" /></summary>
    </member>
    <member name="M:AntDesign.Select.Internal.SelectContent`2.GetFirstItemMaxWidth">
      <summary v="43hQcz" i="0">
どのアイテムもオーバーフローする可能性があります。 最初のアイテムの場合、そこにあるとき
SelectContent内の他の要素 (プレフィックス、サフィックス、クリアbtnなど) です。
デフォルトのMaxWidthはSelectContentを強制的に拡大します。 MaxWidthの変更
あふれているアイテムを1行に収めることができます。
TODO: 相対単位を使用する
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.AllOptionsHidden">
      <summary v="40RjGr" i="0">
SelectOptionsリストのすべてのエントリに対してパラメータIsHiddenがtrueに設定されている場合はTrueを返します。
</summary>
      <returns v="2q84ZY" i="0">すべてのアイテムがIsHidden(true) に設定されている場合はtrue</returns>
    </member>
    <member name="M:AntDesign.Select`2.AppendLabelValue(System.String)">
      <summary v="1bSAjX" i="0">
タグモードでラベルアイテムを追加する
</summary>
      <param name="label" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.CreateDeleteSelectOptions">
      <summary v="44SoRK" i="0">
データソースが変更されたときにSelectOptionを作成または削除する
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ElementScrollIntoViewAsync(Microsoft.AspNetCore.Components.ElementReference)">
      <summary v="wAgqW" i="0">
JavaScript経由でアイテムにスクロールします。
</summary>
      <param name="element" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.EvaluateValueChangedOutsideComponent(AntDesign.Select.Internal.SelectOptionItem{`0,`1},`0)">
      <summary v="4NsNUd" i="0">
Bind-Valueがコンポーネントの外部で変更された場合、コンポーネント
選択したアイテムは、渡された新しい値に応じて再選択する必要があります。
</summary>
      <param name="optionItem" v="lDKGf" i="0">選択されたオプションアイテム。</param>
      <param name="value" v="2kKYpM" i="0">選択したオプションアイテムの値。</param>
    </member>
    <member name="M:AntDesign.Select`2.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <summary v="4V1spf" i="0">
Input要素の値がキーボードによって変更された場合、メソッドはEventCallBack経由で呼び出されます。
</summary>
      <param name="e" v="1BvLkq" i="0">入力要素の値を含む</param>
    </member>
    <member name="M:AntDesign.Select`2.OnKeyDownAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="2Eypjm" i="0">
Input要素内でキーが押された場合、メソッドはEventCallback経由で呼び出されます。
このメソッドは、ユーザーがTABを押してトラフ要素をサイクルする場合にTABイベントを取得するために使用されます。
TABが受信されると、オーバーレイは閉じられ、入力要素はぼやけます。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.OnKeyUpAsync(Microsoft.AspNetCore.Components.Web.KeyboardEventArgs)">
      <summary v="15XtPd" i="0">
キーボードキーが入力要素内で押されなくなった場合、メソッドはEventCallBack経由で呼び出されます。
</summary>
      <param name="e" v="19uVqq" i="0">入力要素内で押されたキー (組み合わせ) が含まれています</param>
    </member>
    <member name="M:AntDesign.Select`2.OnRemoveSelectedAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4XvNPB" i="0">
ユーザーがタグの閉じるアイコンをクリックした場合、メソッドはEventCallBack経由で呼び出されます。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ProcessSelectedSelectOptions">
      <summary v="4g8hNe" i="0">
ChildElement SelectOptionsが使用されている場合にのみ使用されます。
Initalizationの後でアイテムがこのプロセスを実行します
が追加され、選択されたものとしてもマークされます。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.ResetValue">
      <summary v="cEne8" i="0">
フォームリセットメソッドによって呼び出されます。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.ScrollToFirstSelectedItemAsync">
      <summary v="OQdQR" i="0">
最初に選択したアイテムを検索し、他のすべてのアイテムについてIsActiveをFalseに設定し、JavaScript経由でscrollIntoView関数を呼び出します。
この方法は、オーバーレイを開いた後、最初に選択されたアイテムにスクロールするために使用される。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetClassMap">
      <summary v="RBCbP" i="0">
CSSクラスを设定してビジュアルスタイルを変更する
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetDefaultActiveFirstItemAsync">
      <summary v="1b9LQT" i="0">
DefaultActiveFirstItemがTrueの場合、IsDisabled(True) でない最初のアイテムが選択されたとおりに設定されます。
アイテムがない場合は、クリアメソッドに戻ります。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetDropdownStyleAsync">
      <summary v="1rNbax" i="0">
Ref (JSInvoke) のBoundingClientRectを取得し、min-widthとwidthをpxで設定します。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetInitialValuesAsync">
      <summary v="nJ8su" i="0">
初期化後の初期値を設定します。メソッドは1回だけ呼び出されます。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.SetInputBlurAsync">
      <summary v="2BVDnI" i="0">
Focusedプロパティがtrueかどうかを確認します。Focusedプロパティをfalseに設定し、
スタイルとDOMを介して入力要素をぼかします。 また、OnBlurアクションを呼び出します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Select`2.TrySetDefaultValueAsync">
      <summary v="2yMz2T" i="0">
値がnull (デフォルト) の場合にOnAfterRenderAsyncによって呼び出されるメソッド
DefaultValueは値を持つか、DefaultActiveFirstItemはTrueです。
</summary>
    </member>
    <member name="M:AntDesign.Select`2.TrySetDefaultValuesAsync">
      <summary v="3y6E36" i="0">
値がnull (デフォルト) の場合にOnAfterRenderAsyncによって呼び出されるメソッド
DefaultValuesは値を持つか、DefaultActiveFirstItemはTrueです。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.ClearSelectedAsync">
      <summary v="38H8Nv" i="0">
SelectValueプロパティをクリアし、双方向バインディングを介してnull (デフォルト) 値を送り返します。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.CloseAsync">
      <summary v="1jx2FJ" i="0">
オーバーレイを閉じる
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.CreateSelectOptionItem(System.String,System.Boolean)">
      <summary v="4s4PA" i="0">
選択オプションアイテムを作成します。 主に新しいタグを作成することを目的としているため、IsAddedTagはtrueにハードコードされています。
</summary>
      <param name="label" v="HyC3F" i="0">渡されたラベルに基づく作成</param>
      <param name="isActive" v="47SihR" i="0">に設定されている場合<c>True</c>[アクティブ] です。</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.EvaluateValuesChangedOutsideComponent(System.Collections.Generic.IEnumerable{`0})">
      <summary v="1z9pAS" i="0">
Bind-値がコンポーネントの外部で変更された場合、コンポーネント
選択したアイテムは、渡された新しい値に従って再選択する必要があります。
TODO :( Perf) ハッシュを使用して、渡された値が現在選択されている値と異なるかどうかを識別することを検討してください。
</summary>
      <param name="values" v="2odFbD" i="0">選択する必要がある値。</param>
    </member>
    <member name="M:AntDesign.SelectBase`2.InvokeOnSelectedItemChanged(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="3K1S7F" i="0">
コードの重複を減らすためにValuesChangedとOnSelectedItemsChangedを呼び出す別の方法。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputBlurAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
      <summary v="4p4QI" i="0">
Input要素がフォーカスを失った場合、メソッドはEventCallBack経由で呼び出されます
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputClearClickAsync(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="1sG09T" i="0">
メソッドは、ユーザーがInput要素内のClearアイコンをクリックした後、EventCallBack経由で呼び出されます。
すべてのアイテムのIsSelectedプロパティとIsHiddenプロパティをFalseに設定します。 オーバーレイ位置を更新します。
SelectModeはタグまたは複数です。 OnClearSelectedアクションを呼び出します。 値をデフォルトに設定します。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnInputFocusAsync(Microsoft.AspNetCore.Components.Web.FocusEventArgs)">
      <summary v="22mu2d" i="0">
Input要素がフォーカスを取得した場合、メソッドはEventCallBack経由で呼び出されます
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnRemoveSelectedAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4XvNPB" i="0">
ユーザーがタグの閉じるアイコンをクリックした場合、メソッドはEventCallBack経由で呼び出されます。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.OnValuesChangeAsync(System.Collections.Generic.IEnumerable{`0})">
      <summary v="4VfcuR" i="0">
メソッドは、 @ bind-Valuesの値が2方向バインディングによって変更された場合、毎回呼び出されます。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.ResetValue">
      <summary v="cEne8" i="0">
フォームリセットメソッドによって呼び出されます。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.SetInputBlurAsync">
      <summary v="2BVDnI" i="0">
Focusedプロパティがtrueかどうかを確認します。Focusedプロパティをfalseに設定し、
スタイルとDOMを介して入力要素をぼかします。 また、OnBlurアクションを呼び出します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.SelectBase`2.SetInputFocusAsync">
      <summary v="Rq9hv" i="0">
FocusedプロパティがFalseかどうかを確認します。Focusedプロパティをtrueに設定し、
スタイルを設定し、DOM経由で入力要素にフォーカスを設定します。 また、OnFocusアクションを呼び出します。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.SetValueAsync(AntDesign.Select.Internal.SelectOptionItem{`0,`1})">
      <summary v="4JZajd" i="0">
このメソッドは、ユーザーがマウスまたはキーボードでアイテムを選択/選択解除するたびに呼び出されます。
この関数の外でIsSelectedプロパティを変更しないでください。
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.UnhideSelectOptions">
      <summary v="1znG6K" i="0">
すべての選択オプションを非表示にします。ただし、<see cref="P:AntDesign.SelectBase`2.HideSelected" />はtrue
</summary>
    </member>
    <member name="M:AntDesign.SelectBase`2.UpdateOverlayPositionAsync">
      <summary v="4VAGyk" i="0">
位置を更新するには、オーバーレイに通知します。
</summary>
    </member>
    <member name="M:AntDesign.Table`1.AntDesign#ITable#OnColumnInitialized">
      <summary v="3j8YuV" i="0">
このメソッドは、すべての列が設定されたときに呼び出されます
</summary>
    </member>
    <member name="M:AntDesign.Table`1.AntDesign#ITable#RebuildColumns(System.Boolean)">
      <summary v="1lzzz9" i="0">
各列変更のために、それは4回再送信する必要があります
<br />1.を呼び出した後に変更された列があることを認識するために一度再レンダリングする<see cref="M:AntDesign.Table`1.OnParametersSet" />、空のChildContentをトリガーします。
<br />2.を呼び出した後、空のChildContentに対して1回再レンダリングします。<see cref="M:AntDesign.ITable.RebuildColumns(System.Boolean)" />配信元コンテンツを再構築するためのレンダリングをトリガーします。
<br />3.を呼び出した後、列を再構築するために再レンダリングします。<see cref="M:AntDesign.Table`1.OnAfterRenderAsync(System.Boolean)" />列の準備ができたら、ロードデータのレンダリングをトリガーします。
<br />4.を呼び出した後、データをリロードするための再レンダリング<see cref="M:AntDesign.Table`1.OnColumnInitialized" /></summary>
      <param name="add" v="4duF5f" i="0">列が追加/削除されているかどうか</param>
      <remarks>
            lifecycle process: columns was changed -&gt; render#1(true) -&gt; column add/dispose -&gt; call rebuild(call render#2) -&gt; render#2(true) -&gt; OnAfterRenderAsync#2 (call render#3) -&gt; render#3(true)
            -&gt; OnColumnInitialized call render#4 -&gt; OnAfterRenderAsync#4 -&gt; OnAfterRenderAsync#3 -&gt; OnAfterRenderAsync#1 (the last 2 steps are duplicated and useless)
            </remarks>
      <returns v="3rKED9" i="0">再建を開始するかどうか</returns>
    </member>
    <member name="M:AntDesign.Table`1.ClearSelectedRows">
      <summary v="1OT3qB" i="0">
現在のページの選択された行をクリア
</summary>
    </member>
    <member name="M:AntDesign.Table`1.GetQueryModel">
      <summary v="3dqLFg" i="0">
テーブルのクエリモデルを取得する
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.InvokeDataSourceHasChanged">
      <summary v="0pX44" i="0">
テーブルの状態を更新するためにデータソースが変更された後、このメソッドを呼び出します。
</summary>
            Make the method protected to allow derived classes to call it.
        </member>
    <member name="M:AntDesign.Table`1.ReloadData">
      <summary v="3acSVM" i="0">
テーブルのデータをリロードし、1ページに移動します
</summary>
    </member>
    <member name="M:AntDesign.Table`1.ReloadData(AntDesign.TableModels.QueryModel)">
      <summary v="1ge9b8" i="0">
提供されたクエリモデルからテーブルのデータをリロードする
</summary>
      <param name="queryModel" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.ReloadData(System.Nullable{System.Int32},System.Nullable{System.Int32})">
      <summary v="12ueqt" i="0">
テーブルのデータをリロードし、ページサイズで特定のページに移動します
</summary>
      <param name="pageIndex" v="V8yia" i="0">リロード後にロードするページ。 デフォルトは1です。</param>
      <param name="pageSize" v="3BZbSS" i="0">リロード後に使用するページサイズ。 デフォルトでは、現在の値の<see cref="P:AntDesign.Table`1.PageSize" /></param>
    </member>
    <member name="M:AntDesign.Table`1.ResetData">
      <summary v="3T6SeN" i="0">
テーブルをデフォルトのビューにリセットします。 ページ1、デフォルトのページサイズに移動し、ソートとフィルターをクリアします。
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SelectAll">
      <summary v="1zOBwL" i="0">
現在のページのすべての行を選択します
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(`0)">
      <summary v="20O0Av" i="0">
アイテムを1つ選択
</summary>
      <param name="item" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.ICollection{System.String})">
      <summary v="ZRvp2" i="0">
ご利用ください<see cref="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.IEnumerable{`0})" />可能であれば、代わりに
仮想化が有効になっている場合、このメソッドは非表示の行からアイテムを正しく選択しません。
</summary>
    </member>
    <member name="M:AntDesign.Table`1.SetSelection(System.Collections.Generic.IEnumerable{`0})">
      <summary v="31oGTq" i="0">
選択したすべてのアイテムを設定する
</summary>
      <param name="items" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Table`1.UnselectAll">
      <summary v="4ITSSv" i="0">
現在のページのすべての行を選択解除する
</summary>
    </member>
    <member name="M:AntDesign.TableModels.QueryModel`1.GetFilterExpression">
      <summary v="2TdfGV" i="0">
Entity FrameworkのようなORMの現在のフィルター式を取得します。
また、データソースで式を実行することで、フィルタリングされたデータを取得できます。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TableModels.SortModel`1.Compare(`0,`0)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.Tabs.AddTabPane(AntDesign.TabPane)">
      <summary v="2lX08c" i="0">
追加<see cref="T:AntDesign.TabPane" /><see cref="T:AntDesign.Tabs" /></summary>
      <param name="tabPane" v="1YkHnc" i="0">追加するAntTabPane</param>
      <exception cref="T:System.ArgumentNullException">Key is null</exception>
      <exception cref="T:System.ArgumentException">An AntTabPane with the same key already exists</exception>
    </member>
    <member name="M:AntDesign.TextArea.OnInputAsync(Microsoft.AspNetCore.Components.ChangeEventArgs)">
      <inheritdoc />
    </member>
    <member name="M:AntDesign.Tree`1.AddChildNode(AntDesign.TreeNode{`0})">
      <summary v="1A85p0" i="0">
ノードの追加
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.CollapseAll(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="4cORof" i="0">
すべてのノードを崩壊させる
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.DeselectAll">
      <summary v="22GThZ" i="0">
すべてのノードの選択を解除
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.ExpandAll(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="gV1mk" i="0">
すべてのノードを拡張
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.FindFirstOrDefaultNode(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="eypyL" i="0">
ノードを探す
</summary>
      <param name="predicate" v="3xQfy6" i="0">プレディケート</param>
      <param name="recursive" v="DgcMI" i="0">再帰的な検索</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.GetNode(System.String)">
      <summary v="3HcUYe" i="0">
キーからTreeNodeを取得する
</summary>
      <param name="key" v="1LwHKs" i="0">キー</param>
    </member>
    <member name="M:AntDesign.Tree`1.SelectAll">
      <summary v="4NBEb5" i="0">
すべてのノードを選択
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.TriggerOnSelect(AntDesign.TreeNode{`0})">
      <summary v="Z97NP" i="0">
イベントOnSelectをトリガーする
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.TriggerOnUnselect(AntDesign.TreeNode{`0})">
      <summary v="3ttz41" i="0">
イベントOnUnselectをトリガーする
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.Tree`1.UncheckAll">
      <summary v="4fGZnq" i="0">
すべてのノードのチェックを解除
</summary>
    </member>
    <member name="M:AntDesign.Tree`1.UpdateSelectedKeys">
      <summary v="4Ddxug" i="0">
バインディングデータの更新
</summary>
    </member>
    <member name="M:AntDesign.TreeIndent`1.GetParentNode(AntDesign.TreeNode{`0},System.Int32)">
      <summary v="21vmtR" i="0">
特定のレベルの親ノードを見つけるには
</summary>
      <param name="node" v="0000" i="0" />
      <param name="level" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddChildNode(`0)">
      <summary v="4Woj0Y" i="0">
子ノードの追加
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddNextNode(`0)">
      <summary v="4UcvGu" i="0">
ノードの次にノードを追加する
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddNode(AntDesign.TreeNode{`0})">
      <summary v="11Ldf2" i="0">
親ノードにノードを追加
</summary>
      <param name="treeNode" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.AddPreviousNode(`0)">
      <summary v="1chHuB" i="0">
ノードの前にノードを追加する
</summary>
      <param name="dataItem" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.CheckAllChildren">
      <summary v="44neT7" i="0">
すべての子ノードをチェック
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.CollapseAll">
      <summary v="0InAm" i="0">
すべての子ノードを崩壊させる
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.Downgrade">
      <summary v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.DragMoveDown(AntDesign.TreeNode{`0})">
      <summary v="24tZuq" i="0">
ターゲットの下部にドラッグアンドドロップ
</summary>
      <param name="treeNode" v="3w3ozB" i="0">目标</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.DragMoveInto(AntDesign.TreeNode{`0})">
      <summary v="2DcpoU" i="0">
子ノードへのドラッグアンドドロップ
</summary>
      <param name="treeNode" v="3w3ozB" i="0">目标</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.Expand(System.Boolean)">
      <summary v="1Mpf35" i="0">
ノードを拡張します。
</summary>
      <param name="expanded" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.ExpandAll">
      <summary v="34qmuW" i="0">
すべての子ノードを拡張
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.FindFirstOrDefaultNode(System.Func{AntDesign.TreeNode{`0},System.Boolean},System.Boolean)">
      <summary v="3HXbN3" i="0">
ノードを見つける
</summary>
      <param name="predicate" v="3xQfy6" i="0">プレディケート</param>
      <param name="recursive" v="DgcMI" i="0">再帰的な検索</param>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetNextNode">
      <summary v="4CXVjG" i="0">
次のノードを取得する
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentChildDataItems">
      <summary v="2YwfqR" i="0">
得上上上上集集合
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentChildNodes">
      <summary v="1kSesi" i="0">
親ノードの子を取得します。
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetParentNodes">
      <summary v="2gK1NO" i="0">
親データセットの取得
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.GetPreviousNode">
      <summary v="WrvBC" i="0">
前のノードを取得する
</summary>
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveDown">
      <summary v="3BRJY8" i="0">
ノードを下に移動する
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveInto(AntDesign.TreeNode{`0})">
      <summary v="1U6xDN" i="0">
ノードが子ノードに移動します。
</summary>
      <param name="treeNode" v="4IISiB" i="0">ターゲットノード</param>
    </member>
    <member name="M:AntDesign.TreeNode`1.MoveUp">
      <summary v="2ZOqfQ" i="0">
ノードを上に移動する
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.OnCheckBoxClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="2xEXWN" i="0">
選択ボックスがクリックされたときにトリガーされる
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.OnSwitcherClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="3iMt4O" i="0">
ノードスイッチ
</summary>
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.OpenPropagation(System.Boolean)">
      <summary v="4fa8eR" i="0">
拡大した両親
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.Remove">
      <summary v="sd5wW" i="0">
削除
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.RemoveNode">
      <summary v="dGVDZ" i="0">
現在のノードを削除する
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.SetChecked(System.Boolean)">
      <summary v="1BDNpt" i="0">
チェックボックスの状態を設定する
</summary>
      <param name="check" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetChildChecked(AntDesign.TreeNode{`0},System.Boolean,System.Boolean,System.Boolean)">
      <summary v="1UnxiI" i="0">
子ノードのチェックボックスのステータスを設定します。
</summary>
      <param name="subnode" v="0000" i="0" />
      <param name="check" v="0000" i="0" />
      <param name="isManual" v="0000" i="0" />
      <param name="forceRecursive" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetParentTargetContainer(System.Boolean)">
      <summary v="bQvqo" i="0">
ドラッグアンドドロップのターゲットノードコンテナーを設定します。
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.SetSelected(System.Boolean)">
      <summary v="x0QNF" i="0">
選択状態の設定
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SetTargetBottom(System.Boolean)">
      <summary v="1VAIex" i="0">
ターゲット位置を解放するノードを設定します
</summary>
      <param name="value" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.SwitchAllNodes(AntDesign.TreeNode{`0},System.Boolean)">
      <summary v="3aHy9v" i="0">
节约展示开関の闭
</summary>
      <param name="node" v="0000" i="0" />
      <param name="expanded" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.UnCheckAllChildren">
      <summary v="3yTjP3" i="0">
すべての子ノードのチェックを解除
</summary>
    </member>
    <member name="M:AntDesign.TreeNode`1.UpdateCheckState(System.Nullable{System.Boolean})">
      <summary v="9fWzk" i="0">
チェックステータスの更新
</summary>
      <param name="halfChecked" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNode`1.Upgrade">
      <summary v="12yZbC" i="0">
ノードのアップグレード
</summary>
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnContextMenu(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDblClick(Microsoft.AspNetCore.Components.Web.MouseEventArgs)">
      <summary v="0000" i="0" />
      <param name="args" v="0000" i="0" />
      <returns v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragEnd(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="9faGh" i="0">
終了をドラッグ
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragEnter(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragLeave(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="1uwlgW" i="0">
ターゲットを解放する
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragOver(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="2qw6tf" i="0">
ターゲットがOffsetXの距離を超えて右に移動した場合、子として扱うことができます
</summary>
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDragStart(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.TreeNodeTitle`1.OnDrop(Microsoft.AspNetCore.Components.Web.DragEventArgs)">
      <summary v="0000" i="0" />
      <param name="e" v="0000" i="0" />
    </member>
    <member name="M:AntDesign.UploadFileItem.IsPicture">
      <summary v="qcX1K" i="0">
ファイルが画像であるかどうかを確認します。 「」をご参照ください。<see cref="P:AntDesign.UploadFileItem.ImageExtensions" />これをtrueに戻すエクステンションのために。
</summary>
      <returns v="ejNLF" i="0">ファイルが画像であるかどうかを示すブール値。</returns>
    </member>
    <member name="P:AntDesign.ActionColumn.CellRender">
      <summary v="1CUwB6" i="0">
行の列の内容。 優先順位を引き継ぐ<see cref="P:AntDesign.ColumnBase.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Affix.ChildContent">
      <summary v="3ll9iq" i="0">
追加コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Affix.OffsetBottom">
      <summary v="1bVteV" i="0">
ビューポートの下部からのオフセット (ピクセル単位)
</summary>
    </member>
    <member name="P:AntDesign.Affix.OffsetTop">
      <summary v="2aj1Wk" i="0">
ビューポートの上部からのオフセット (ピクセル単位)
</summary>
    </member>
    <member name="P:AntDesign.Affix.OnChange">
      <summary v="398SQU" i="0">
Affix状態が変更されたときのコールバック。 Affixが現在添付されているかどうかを示すブール値が渡されます。
</summary>
    </member>
    <member name="P:AntDesign.Affix.TargetSelector">
      <summary v="4U8mqQ" i="0">
スクロール可能エリアDOMノードを指定するCSSセレクター
</summary>
      <default value="window" />
    </member>
    <member name="P:AntDesign.Alert.AfterClose">
      <summary v="1HTYuL" i="0">
閉じるアニメーションが終了したときに呼び出される
</summary>
    </member>
    <member name="P:AntDesign.Alert.Banner">
      <summary v="1rzYJy" i="0">
バナーとして表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Alert.ChildContent">
      <summary v="3ll9iq" i="0">
追加コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Alert.Closable">
      <summary v="h5EMt" i="0">
アラートを閉じることができるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Alert.CloseText">
      <summary v="29NGpS" i="0">
テキストを閉じて表示する
</summary>
    </member>
    <member name="P:AntDesign.Alert.Description">
      <summary v="3xZDj2" i="0">
アラートの追加コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Alert.Icon">
      <summary v="rqvuO" i="0">
カスタムアイコン、showIconが真のときに効果的
</summary>
    </member>
    <member name="P:AntDesign.Alert.IconType">
      <summary v="4EXXPV" i="0">
表示するアイコン。
</summary>
    </member>
    <member name="P:AntDesign.Alert.Message">
      <summary v="3ySxVB" i="0">
アラートの内容
</summary>
    </member>
    <member name="P:AntDesign.Alert.MessageTemplate">
      <summary v="1VjZjM" i="0">
コンテンツのテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Alert.OnClose">
      <summary v="3qPRmi" i="0">
アラートが閉じられたときのコールバック。
</summary>
    </member>
    <member name="P:AntDesign.Alert.ShowIcon">
      <summary v="2CtP65" i="0">
アイコンを表示するかどうか。
</summary>
    </member>
    <member name="P:AntDesign.Alert.Type">
      <summary v="4TLMol" i="0">
アラートスタイルのタイプ、オプション: 成功、情報、警告、エラー
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Affix">
      <summary v="G5LeF" i="0">
アンカーの固定モード
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Anchor.Bounds">
      <summary v="2ba1Sf" i="0">
アンカーエリアの境界距離
</summary>
      <default value="5" />
    </member>
    <member name="P:AntDesign.Anchor.ChildContent">
      <summary v="voFNe" i="0">
コンポーネントの内容。
</summary>
    </member>
    <member name="P:AntDesign.Anchor.GetContainer">
      <summary v="2yuhxT" i="0">
スクロールコンテナ
</summary>
      <default value="window" />
    </member>
    <member name="P:AntDesign.Anchor.GetCurrentAnchor">
      <summary v="4JAkIk" i="0">
アンカーハイライトをカスタマイズする
</summary>
    </member>
    <member name="P:AntDesign.Anchor.Key">
      <summary v="13ppKL" i="0">
キーが変更されたときにリンクリストを更新するために使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OffsetBottom">
      <summary v="4gFv5O" i="0">
スクロールの位置を計算するときに下からオフセットするピクセル
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OffsetTop">
      <summary v="1vMGhz" i="0">
スクロールの位置を計算するときに上からオフセットするピクセル
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Anchor.OnChange">
      <summary v="4f9pah" i="0">
クリックまたはスクロールによってアンカーが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Anchor.OnClick">
      <summary v="4N09j8" i="0">
クリックイベントを処理するようにハンドラーを設定する
</summary>
    </member>
    <member name="P:AntDesign.Anchor.ShowInkInFixed">
      <summary v="11ujva" i="0">
固定モードでインクボールを表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Anchor.TargetOffset">
      <summary v="39FgZF" i="0">
アンカースクロールオフセット、デフォルトは<see cref="P:AntDesign.Anchor.OffsetTop" /></summary>
    </member>
    <member name="P:AntDesign.AnchorLink.ChildContent">
      <summary v="LxDa8" i="0">
追加コンテンツ。 タイトルをオーバーライドしません。
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Href">
      <summary v="3mPUVd" i="0">
ハイパーリンクのターゲット
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Target">
      <summary v="278vCU" i="0">
リンクされたURLを表示する場所を指定します
</summary>
    </member>
    <member name="P:AntDesign.AnchorLink.Title">
      <summary v="1A9uXB" i="0">
ハイパーリンクの内容
</summary>
    </member>
    <member name="P:AntDesign.AntComponentBase.RefBack">
      <summary v="2fs6li" i="0">
A<see cref="T:AntDesign.ForwardRef" />インスタンスを使用します。 内部DOMへの参照を取得するために使用します。
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Class">
      <summary v="1PA7jq" i="0">
DOM要素の1つ以上のクラス名を指定します。
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Id">
      <summary v="2sbSpG" i="0">
コンポーネントのHTMLのID
</summary>
      <default value="Uniquely Generated ID" />
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Ref">
      <summary v="3v0RLn" i="0">
DOM要素に対して返されたElementRef参照。
</summary>
    </member>
    <member name="P:AntDesign.AntDomComponentBase.Style">
      <summary v="34unoz" i="0">
DOM要素のインラインスタイルを指定します。
</summary>
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.AutoFocus">
      <summary v="1npFta" i="0">
入力にオートフォーカスするかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.Checked">
      <summary v="pR8oE" i="0">
入力がチェックされているかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.CheckedChanged">
      <summary v="3VLzSp" i="0">
バインドされたチェック済み値を更新するコールバックを取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.Disabled">
      <summary v="BRDoU" i="0">
入力を無効にする
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntInputBoolComponentBase.OnChange">
      <summary v="2O4Jlz" i="0">
入力が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.AdditionalAttributes">
      <summary v="3jnG2N" i="0">
作成された要素に適用される追加の属性のコレクションを取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CultureInfo">
      <summary v="OrqPJ" i="0">
文字列を値に、値を文字列に変換するときに使用される文化
InputNumberコンポーネントに役立ちます。
</summary>
      <default value="CultureInfo.CurrentCulture" />
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CurrentValue">
      <summary v="4WBLIM" i="0">
入力の現在の値を取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.CurrentValueAsString">
      <summary v="DJ3yY" i="0">
文字列として表される入力の現在の値を取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.EditContext">
      <summary v="3o9jfY" i="0">
関連する<see cref="P:AntDesign.AntInputComponentBase`1.EditContext" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.FieldIdentifier">
      <summary v="4LejCf" i="0">
取得します。<see cref="P:AntDesign.AntInputComponentBase`1.FieldIdentifier" />バインドされた値に対して
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.NameAttributeValue">
      <summary v="2QEQYC" i="0">
入力の "name" 属性に使用される値を取得します。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.Size">
      <summary v="P25m2" i="0">
入力ボックスのサイズ。 注: フォームのコンテキストでは、
「Large」サイズが使用されます。 利用可能: 「大」「デフォルト」「小」
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValidationMessages">
      <summary v="19XaGu" i="0">
FormItemの検証メッセージ
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.Value">
      <summary v="yoUC3" i="0">
入力の値を取得または設定します。 これは双方向バインディングで使用する必要があります。
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValueChanged">
      <summary v="2lXscZ" i="0">
バインドされた値を更新するコールバック。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValueExpression">
      <summary v="28YahG" i="0">
バインドされた値を識別する式。
</summary>
    </member>
    <member name="P:AntDesign.AntInputComponentBase`1.ValuesExpression">
      <summary v="3gftm2" i="0">
バインドされた値の列挙を識別する式。
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Bordered">
      <summary v="3eCm5E" i="0">
リストに境界線を置く
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntList`1.ChildContent">
      <summary v="2FxNFA" i="0">
リストの内容
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.DataSource">
      <summary v="1n0EpW" i="0">
リストに表示するアイテムのリスト
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Footer">
      <summary v="4QTEYo" i="0">
リストのフッターコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Grid">
      <summary v="3sH0AF" i="0">
リストのグリッドタイプ
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Header">
      <summary v="1F0C7c" i="0">
リストのヘッダーコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.ItemLayout">
      <summary v="2nYwCr" i="0">
リストのレイアウト、デフォルトは水平です。垂直リストが必要な場合は、itemLayoutプロパティを垂直に設定します。
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Loading">
      <summary v="3L4453" i="0">
リストにロードを表示する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AntList`1.LoadMore">
      <summary v="2wqp8f" i="0">
より多くの負荷をディプレイするためのリストアイテムの終わりのコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.NoResult">
      <summary v="1XuNXN" i="0">
現在未使用
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Pagination">
      <summary v="4YhZwA" i="0">
リストをページ化するためのオプション
</summary>
    </member>
    <member name="P:AntDesign.AntList`1.Size">
      <summary v="1RqWZH" i="0">
リストのサイズ
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.AntList`1.Split">
      <summary v="3WTHju" i="0">
リストアイテムの下の分割のレンダリングを切り替えます
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.AllowFilter">
      <summary v="31z86x" i="0">
フィルタリングを許可
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.AutoCompleteOptions">
      <summary v="4Vipzt" i="0">
オブジェクトコレクションの一覧表示
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.Backfill">
      <summary v="1eOqoK" i="0">
キーボードを使用してアイテムを選択するときに、選択したアイテムを入力に埋め戻します
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.BoundaryAdjustMode">
      <summary v="43Sv5h" i="0">
オーバーレイ調整戦略 (たとえば、ブラウザのサイズ変更が行われている場合)。 チェック
</summary>
      <default value="TriggerBoundaryAdjustMode.InView" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.ChildContent">
      <summary v="1ix7Vu" i="0">
ドロップダウンのコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.CompareWith">
      <summary v="3NNCvY" i="0">
コントラスト、2つのオブジェクトが同じかどうかを比較するために使用
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.DebounceMilliseconds">
      <summary v="34bwxT" i="0">
ユーザーが停止するまでKeyUpイベントの処理を遅らせる
所定の時間のタイピング
</summary>
      <default value="250" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.DefaultActiveFirstOption">
      <summary v="39Ppty" i="0">
最初のオプションをデフォルトでアクティブにするかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.Disabled">
      <summary v="3lHEsi" i="0">
無効化
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.FilterExpression">
      <summary v="3el3u1" i="0">
フィルター式
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnActiveChange">
      <summary v="1TFw3l" i="0">
アクティブなアイテムが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnInput">
      <summary v="2R5yCc" i="0">
入力が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnPanelVisibleChange">
      <summary v="4UcsZ4" i="0">
パネルの表示が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OnSelectionChange">
      <summary v="1caslt" i="0">
選択が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionDataItems">
      <summary v="3hYL8K" i="0">
リストデータアイテム形式のデータソースをバインドする
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionFormat">
      <summary v="1vuYrb" i="0">
フォーマットオプション、表示形式をカスタマイズできます
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.Options">
      <summary v="4ATRvE" i="0">
ドロップダウンで表示するオプション
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OptionTemplate">
      <summary v="3T0G9o" i="0">
オプションテンプレート
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayClassName">
      <summary v="1Zz4Zw" i="0">
オーバーレイに渡されるクラス名
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayStyle">
      <summary v="4OJsAG" i="0">
オーバーレイに渡されたスタイル
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.OverlayTemplate">
      <summary v="1v9d2K" i="0">
すべてのオプションテンプレート
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.Placeholder">
      <summary v="3VHNBc" i="0">
入力要素プレースホルダー
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.PopupContainerSelector">
      <summary v="1yjJ1F" i="0">
ポップアップのコンテナセレクター
</summary>
      <default value="body" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.SelectedItem">
      <summary v="1SHHXV" i="0">
ドロップダウンから選択したアイテム
</summary>
    </member>
    <member name="P:AntDesign.AutoComplete`1.ShowPanel">
      <summary v="19YFkB" i="0">
表示オプションドロップダウン
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AutoComplete`1.Width">
      <summary v="5XEbj" i="0">
入力の幅、intが与えられたときのピクセル、文字列が与えられたときのCSS widthプロパティに与えられる完全な値
</summary>
    </member>
    <member name="P:AntDesign.AutoCompleteOption.ChildContent">
      <summary v="2Yg8Yk" i="0">
オプションのラベル。 ラベルよりも優先されます
</summary>
    </member>
    <member name="P:AntDesign.AutoCompleteOption.Disabled">
      <summary v="16XAKT" i="0">
オプションが無効かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.AutoCompleteOption.Label">
      <summary v="3qVCxl" i="0">
オプションのラベル
</summary>
      <default value="Value.ToString()" />
    </member>
    <member name="P:AntDesign.AutoCompleteOption.Value">
      <summary v="4AJSrd" i="0">
オプションの値
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Alt">
      <summary v="4PwqeG" i="0">
画像の代替テキスト
</summary>
    </member>
    <member name="P:AntDesign.Avatar.ChildContent">
      <summary v="2sGD0A" i="0">
アバター形状の内部に表示するコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Avatar.Text" /></summary>
    </member>
    <member name="P:AntDesign.Avatar.Icon">
      <summary v="3FNtTd" i="0">
表示するアイコン
</summary>
    </member>
    <member name="P:AntDesign.Avatar.OnError">
      <summary v="2GlTzv" i="0">
イメージがに渡されたときに実行されるコールバック<see cref="P:AntDesign.Avatar.Src" />ロードに失敗
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Overflow">
      <summary v="XJk6e" i="0">
グループ最大数以上
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Shape">
      <summary v="2o70s4" i="0">
アバターの形
</summary>
      <default value="AvatarShape.Circle" />
    </member>
    <member name="P:AntDesign.Avatar.Size">
      <summary v="2ePoOp" i="0">
アバターのサイズ。 「」をご参照ください。<see cref="T:AntDesign.AntSizeLDSType" />可能な値に対して。
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Avatar.Src">
      <summary v="1td510" i="0">
アバターの画像src。 これがロードに失敗した場合、<see cref="P:AntDesign.Avatar.Icon" />と<see cref="P:AntDesign.Avatar.ChildContent" />/<see cref="P:AntDesign.Avatar.Text" />引き続き表示されます。
</summary>
    </member>
    <member name="P:AntDesign.Avatar.SrcSet">
      <summary v="1GCOtz" i="0">
さまざまな画面解像度に使用するソースのリスト。 にまっすぐに渡された<c>Img</c>タグを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Avatar.Text">
      <summary v="1okoiv" i="0">
アバターに表示するテキスト文字列。 典型的な用途は、イニシャルを表示するためである。
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.ChildContent">
      <summary v="2cODQ0" i="0">
子コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.MaxCount">
      <summary v="1FHFVw" i="0">
表示するマックスアバター
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.MaxPopoverPlacement">
      <summary v="zxrWk" i="0">
過剰なアバターPopoverの配置
</summary>
    </member>
    <member name="P:AntDesign.AvatarGroup.MaxStyle">
      <summary v="JOEEV" i="0">
過剰なアバタースタイルのスタイル
</summary>
    </member>
    <member name="P:AntDesign.BackTop.ChildContent">
      <summary v="1TRzc0" i="0">
ボタンの内容。 アイコンよりも優先されます。
</summary>
    </member>
    <member name="P:AntDesign.BackTop.Icon">
      <summary v="Bghi3" i="0">
ボタンのアイコン
</summary>
      <default value="vertical-align-top" />
    </member>
    <member name="P:AntDesign.BackTop.OnClick">
      <summary v="1MUw6n" i="0">
BackTopがクリックされたときにコールバックが実行されます。 デフォルトの機能をオーバーライドしません。
</summary>
    </member>
    <member name="P:AntDesign.BackTop.TargetSelector">
      <summary v="i3p2B" i="0">
ボタンのスクロール可能エリア
</summary>
      <default value="window" />
    </member>
    <member name="P:AntDesign.BackTop.VisibilityHeight">
      <summary v="9DMwc" i="0">
ボタンが表示されるスクロールオフセット (px)
</summary>
      <default value="400" />
    </member>
    <member name="P:AntDesign.Badge.ChildContent">
      <summary v="3K0w9c" i="0">
このアイテムを包みます。
</summary>
    </member>
    <member name="P:AntDesign.Badge.Color">
      <summary v="3hwCN6" i="0">
バッジステータスドットの色をカスタマイズします。 このパラメータを使用すると、バッジがステータスドットになります。
</summary>
    </member>
    <member name="P:AntDesign.Badge.Count">
      <summary v="3xDbds" i="0">
バッジに表示する番号
</summary>
    </member>
    <member name="P:AntDesign.Badge.CountTemplate">
      <summary v="3mO9Ri" i="0">
カウントの代わりに表示するテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Badge.Dot">
      <summary v="2fwY3p" i="0">
カウントの代わりにドットを表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Badge.Offset">
      <summary v="2TKOcL" i="0">
バッジドットのオフセットを設定します (左、上)
</summary>
    </member>
    <member name="P:AntDesign.Badge.OverflowCount">
      <summary v="4wMP5" i="0">
表示する最大数
</summary>
      <default value="99" />
    </member>
    <member name="P:AntDesign.Badge.PresetColor">
      <summary v="48RxSA" i="0">
バッジステータスドットをプリセット色に設定します。 このパラメータを使用すると、バッジがステータスドットになります。
</summary>
    </member>
    <member name="P:AntDesign.Badge.ShowZero">
      <summary v="An9Bu" i="0">
カウントがゼロのときにバッジを表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Badge.Size">
      <summary v="2hUVCd" i="0">
バッジのサイズ
</summary>
    </member>
    <member name="P:AntDesign.Badge.Status">
      <summary v="2SAJpA" i="0">
バッジドットをステータスカラーに設定します。 このパラメータを使用すると、バッジがステータスドットになります。
</summary>
    </member>
    <member name="P:AntDesign.Badge.Text">
      <summary v="mNMHX" i="0">
ステータスドットの横にある表示テキスト
</summary>
    </member>
    <member name="P:AntDesign.Badge.Title">
      <summary v="GmAt5" i="0">
バッジの上にホバリングするときに表示するテキスト。 Countの値のデフォルト
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.ChildContent">
      <summary v="3K0w9c" i="0">
このアイテムを包みます。
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Color">
      <summary v="45tQm" i="0">
リボン色をカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.Placement">
      <summary v="1w1VYs" i="0">
リボンの配置を設定します。
</summary>
      <default value="end" />
    </member>
    <member name="P:AntDesign.BadgeRibbon.Text">
      <summary v="3jivWP" i="0">
リボンのテキスト文字列。
</summary>
    </member>
    <member name="P:AntDesign.BadgeRibbon.TextTemplate">
      <summary v="b3qmQ" i="0">
リボンのテキストコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.BadgeRibbon.Text" /></summary>
    </member>
    <member name="P:AntDesign.Breadcrumb.AutoGenerate">
      <summary v="3CaXYE" i="0">
現在使用されていません。 将来の開発のために計画されています。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Breadcrumb.ChildContent">
      <summary v="02z6m" i="0">
ブレッドクラムの内容。 BreadcrumItem要素を含む必要があります
</summary>
    </member>
    <member name="P:AntDesign.Breadcrumb.Separator">
      <summary v="3PPCFZ" i="0">
アイテム間のセパレータ
</summary>
      <default value="/" />
    </member>
    <member name="P:AntDesign.BreadcrumbItem.ChildContent">
      <summary v="1tClXq" i="0">
アイテムの内部コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.BreadcrumbItem.Href">
      <summary v="2ngrfH" i="0">
アイテムのリンク。 これを提供すると、このリンクのアンカータグでChildContentがラップされます。
</summary>
    </member>
    <member name="P:AntDesign.BreadcrumbItem.OnClick">
      <summary v="2PYceh" i="0">
コールバックをクリック
</summary>
    </member>
    <member name="P:AntDesign.BreadcrumbItem.Overlay">
      <summary v="1TExH2" i="0">
ドロップダウンメニューのオーバーレイ
</summary>
    </member>
    <member name="P:AntDesign.Button.AriaLabel">
      <summary v="3lc7zV" i="0">
Aria-label属性の値を設定します。
</summary>
    </member>
    <member name="P:AntDesign.Button.Block">
      <summary v="4dlKNJ" i="0">
ボタンの幅を親の幅に合わせるオプション
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.ChildContent">
      <summary v="2ZM4UH" i="0">
ボタンの内容。
</summary>
    </member>
    <member name="P:AntDesign.Button.Color">
      <summary v="Zhn2Z" i="0">
ボタンの色を设定します。
</summary>
      <default value="Color.None" />
    </member>
    <member name="P:AntDesign.Button.Danger">
      <summary v="38p6E3" i="0">
ボタンの危険状態を設定します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.Disabled">
      <summary v="2k5NmL" i="0">
「ボタン」が無効かどうか。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.Ghost">
      <summary v="Sd2qi" i="0">
背景を透明にし、テキストとボーダーの色を反転します
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.HtmlType">
      <summary v="RzH3K" i="0">
ボタン要素の元のhtmlタイプを設定します。
</summary>
      <default value="button" />
    </member>
    <member name="P:AntDesign.Button.Icon">
      <summary v="WDN78" i="0">
ボタンのアイコンコンポーネントを設定します。
</summary>
    </member>
    <member name="P:AntDesign.Button.Loading">
      <summary v="3cOuxj" i="0">
ローディングインジケータを表示します。 ロードロジックを自分で書く必要があります。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Button.NoSpanWrap">
      <summary v="4UYg0o" i="0">
&lt;Span&gt; でラップしない
</summary>
    </member>
    <member name="P:AntDesign.Button.OnClick">
      <summary v="2T2oFB" i="0">
「ボタン」がクリックされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Button.OnClickStopPropagation">
      <summary v="QjNIe" i="0">
ボタンをクリックしたときにイベントを伝播しないでください。
</summary>
    </member>
    <member name="P:AntDesign.Button.Shape">
      <summary v="4PnLWH" i="0">
ボタンの形状を設定できます: 'circle' | 'round' または 'null' (デフォルトは長方形)。
</summary>
      <default value="null" />
    </member>
    <member name="P:AntDesign.Button.Size">
      <summary v="P6T6U" i="0">
ボタンのサイズを设定します。
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.Button.Type">
      <summary v="V9Agx" i="0">
ボタンのタイプ。
</summary>
      <default value="ButtonType.Default" />
    </member>
    <member name="P:AntDesign.Calendar.CultureInfo">
      <summary v="41bNP6" i="0">
フォーマットに使用される文化情報
</summary>
    </member>
    <member name="P:AntDesign.Calendar.DateCellRender">
      <summary v="VjCJ3" i="0">
日付セルの表示をカスタマイズすると、返されたコンテンツがセルに追加されます
</summary>
    </member>
    <member name="P:AntDesign.Calendar.DateFullCellRender">
      <summary v="N6Pzo" i="0">
日付セルの表示をカスタマイズすると、返されるコンテンツがセルをオーバーライドします
</summary>
    </member>
    <member name="P:AntDesign.Calendar.DefaultValue">
      <summary v="2Td99N" i="0">
選択した日付のデフォルト値。 セットされるとき、セットします<see cref="P:AntDesign.Calendar.Value" /></summary>
    </member>
    <member name="P:AntDesign.Calendar.DisabledDate">
      <summary v="2tbld3" i="0">
特定の日付が無効かどうかを判断する関数
</summary>
    </member>
    <member name="P:AntDesign.Calendar.FullScreen">
      <summary v="2FPt2i" i="0">
カレンダーがすべての利用可能なスペースを占めるべきかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Calendar.HeaderRender">
      <summary v="1602a4" i="0">
カスタムヘッダーをレンダリングする関数
</summary>
    </member>
    <member name="P:AntDesign.Calendar.Locale">
      <summary v="3wLPe1" i="0">
UIと日付のフォーマットのためのロケール情報
</summary>
    </member>
    <member name="P:AntDesign.Calendar.Mode">
      <summary v="1SAMQ3" i="0">
表示モード。 「」をご参照ください。<see cref="T:AntDesign.CalendarMode" />有効なオプション
</summary>
      <default value="CalendarMode.Month" />
    </member>
    <member name="P:AntDesign.Calendar.MonthCellRender">
      <summary v="17JhHi" i="0">
月セルの表示をカスタマイズすると、返されたコンテンツがセルに追加されます
</summary>
    </member>
    <member name="P:AntDesign.Calendar.MonthFullCellRender">
      <summary v="37uoGA" i="0">
月セルの表示をカスタマイズすると、返されるコンテンツがセルをオーバーライドします
</summary>
    </member>
    <member name="P:AntDesign.Calendar.OnChange">
      <summary v="10MmkF" i="0">
日付が選択されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Calendar.OnPanelChange">
      <summary v="3Dhe5L" i="0">
表示されるカレンダーのタイプが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Calendar.OnSelect">
      <summary v="10MmkF" i="0">
日付が選択されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Calendar.ValidRange">
      <summary v="4FvQW2" i="0">
日付または選択の範囲を検証する
</summary>
    </member>
    <member name="P:AntDesign.Calendar.Value">
      <summary v="45oWQ0" i="0">
カレンダーの選択値
</summary>
      <default value="DateTime.Now" />
    </member>
    <member name="P:AntDesign.Card.Actions">
      <summary v="1SldMO" i="0">
カードのアクション
</summary>
    </member>
    <member name="P:AntDesign.Card.ActionTemplate">
      <summary v="2CBMwF" i="0">
カードのアクションセクションに入れるコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Card.Actions" /></summary>
    </member>
    <member name="P:AntDesign.Card.Body">
      <summary v="4SH28t" i="0">
カードの本体の内容。 上に示す<see cref="P:AntDesign.Card.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Card.BodyStyle">
      <summary v="fqCDe" i="0">
ボディセクションのスタイル文字列
</summary>
    </member>
    <member name="P:AntDesign.Card.Bordered">
      <summary v="QJSxs" i="0">
カードの周りの境界線のレンダリングを切り替えます
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Card.ChildContent">
      <summary v="3htK2L" i="0">
カードの本体の内容。 以下に示す<see cref="P:AntDesign.Card.Body" /></summary>
    </member>
    <member name="P:AntDesign.Card.Cover">
      <summary v="4UC2Xa" i="0">
カードのコンテンツをカバーします。 ヘッダーの下とボディの上に表示
</summary>
    </member>
    <member name="P:AntDesign.Card.Extra">
      <summary v="m28sG" i="0">
カードの右上隅にレンダリングするコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Card.Hoverable">
      <summary v="1W1yJ5" i="0">
カードをhoverableにする
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Card.Loading">
      <summary v="pZtqz" i="0">
カードの内容がフェッチされている間にロードインジケータを表示します
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Card.Size">
      <summary v="2QA6lV" i="0">
カードのサイズ
</summary>
    </member>
    <member name="P:AntDesign.Card.Title">
      <summary v="2PbqpP" i="0">
ヘッダーのタイトル文字列
</summary>
    </member>
    <member name="P:AntDesign.Card.TitleTemplate">
      <summary v="3I3neW" i="0">
ヘッダーのタイトルコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Card.Title" /></summary>
    </member>
    <member name="P:AntDesign.Card.Type">
      <summary v="og1sW" i="0">
カードスタイルタイプ、インナーに设定することができますまたは设定しない
</summary>
    </member>
    <member name="P:AntDesign.CardAction.ChildContent">
      <summary v="47cEvD" i="0">
カードのアクション。
</summary>
    </member>
    <member name="P:AntDesign.CardGrid.ChildContent">
      <summary v="4WCqYB" i="0">
グリッドのそのセクションの内容
</summary>
    </member>
    <member name="P:AntDesign.CardGrid.Hoverable">
      <summary v="9IWLO" i="0">
セクションがhoverableであるべきであれば。 ドロップシャドウを追加し、trueの場合はホバリングするとリフトアップします。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.CardMeta.Avatar">
      <summary v="3wAzHd" i="0">
アバター文字列。 に渡されます<see cref="T:AntDesign.Avatar" />コンポーネントの<see cref="P:AntDesign.Avatar.Src" /></summary>
    </member>
    <member name="P:AntDesign.CardMeta.AvatarTemplate">
      <summary v="1lap2R" i="0">
アバターのコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.CardMeta.Avatar" /></summary>
    </member>
    <member name="P:AntDesign.CardMeta.Description">
      <summary v="3rb2Fb" i="0">
説明文字列
</summary>
    </member>
    <member name="P:AntDesign.CardMeta.DescriptionTemplate">
      <summary v="3KzIC4" i="0">
説明内容。 優先順位を引き継ぐ<see cref="P:AntDesign.CardMeta.Description" /></summary>
    </member>
    <member name="P:AntDesign.CardMeta.Title">
      <summary v="3QA4UE" i="0">
タイトル文字列
</summary>
    </member>
    <member name="P:AntDesign.CardMeta.TitleTemplate">
      <summary v="2smmKE" i="0">
タイトルコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.CardMeta.Title" /></summary>
    </member>
    <member name="P:AntDesign.Carousel.Autoplay">
      <summary v="4Zlm4r" i="0">
自動的にスクロールするかどうか
</summary>
    </member>
    <member name="P:AntDesign.Carousel.ChildContent">
      <summary v="2C6aYD" i="0">
カルーセルの内容。 通常<see cref="T:AntDesign.CarouselSlick" />要素
</summary>
    </member>
    <member name="P:AntDesign.Carousel.DotPosition">
      <summary v="44UFvq" i="0">
ドットの位置は、上、下、左または右のいずれかになります。<see cref="T:AntDesign.CarouselDotPosition" /></summary>
    </member>
    <member name="P:AntDesign.Carousel.Effect">
      <summary v="0D1WU" i="0">
移行効果、<see cref="T:AntDesign.CarouselEffect" /></summary>
    </member>
    <member name="P:AntDesign.CarouselSlick.ChildContent">
      <summary v="2FFEGG" i="0">
カルーセルのこの部分に表示するコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Cascader.AllowClear">
      <summary v="4dvcJY" i="0">
クリアを許可するかどうか
</summary>
      <summary xml:lang="zh-CN" v="3JhsZp" i="0">

</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Cascader.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
オーバーレイ調整戦略 (たとえば、ブラウザのサイズ変更が行われている場合)
</summary>
    </member>
    <member name="P:AntDesign.Cascader.ChangeOnSelect">
      <summary v="29HLgF" i="0">
Trueに設定されている場合は各選択の値を変更し、falseの場合は最終選択のchageのみを変更します。
</summary>
    </member>
    <member name="P:AntDesign.Cascader.DefaultValue">
      <summary v="rrJLf" i="0">
最初に選択された値
</summary>
    </member>
    <member name="P:AntDesign.Cascader.Disabled">
      <summary v="16Ifmn" i="0">
入力を無効にするかどうか
</summary>
    </member>
    <member name="P:AntDesign.Cascader.ExpandTrigger">
      <summary v="3wfMcF" i="0">
現在のアイテムを展開するとき-クリックまたはホバー
</summary>
      <default value="click" />
    </member>
    <member name="P:AntDesign.Cascader.NotFoundContent">
      <summary v="2DZlN9" i="0">
見つからないときの空の説明
</summary>
      <default value="No Data (in current locale)" />
    </member>
    <member name="P:AntDesign.Cascader.OnChange">
      <summary v="47ZR4f" i="0">
選択した値が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Cascader.Options">
      <summary v="4fNkeE" i="0">
オーバーレイのオプション
</summary>
    </member>
    <member name="P:AntDesign.Cascader.Placeholder">
      <summary v="4SL0ph" i="0">
入力用プレースホルダー
</summary>
      <default value="Please select (in current locacle)" />
    </member>
    <member name="P:AntDesign.Cascader.Placement">
      <summary v="3OpREP" i="0">
オーバーレイの配置
</summary>
    </member>
    <member name="P:AntDesign.Cascader.PopupContainerSelector">
      <summary v="5ZZue" i="0">
ポップアップコンテナを表示する要素
</summary>
      <deault value="body" />
    </member>
    <member name="P:AntDesign.Cascader.SelectedNodesChanged">
      <summary v="47ZR4f" i="0">
選択した値が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Cascader.ShowSearch">
      <summary v="2Z0h7z" i="0">
検索を許可するかどうか
</summary>
    </member>
    <member name="P:AntDesign.CascaderNode.Children">
      <summary v="2OKsaB" i="0">
この1つの下のオプション
</summary>
    </member>
    <member name="P:AntDesign.CascaderNode.Disabled">
      <summary v="1ffam7" i="0">
オプションを無効にするかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.CascaderNode.Label">
      <summary v="1bhx7x" i="0">
値に表示されるラベル
</summary>
    </member>
    <member name="P:AntDesign.CascaderNode.Value">
      <summary v="2VQYQD" i="0">
オプションが選択されたときの値
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.CheckedChange">
      <summary v="3bz624" i="0">
チェック済み状態の変更時に実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.ChildContent">
      <summary v="3QkRL0" i="0">
チェックボックスの横に表示するコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.Indeterminate">
      <summary v="3sJK36" i="0">
チェックボックスの不確定なチェック状態
</summary>
    </member>
    <member name="P:AntDesign.Checkbox.Label">
      <summary v="2Ppr5U" i="0">
チェックボックスのラベル
</summary>
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.ChildContent">
      <summary v="2IxI2A" i="0">
グループ内のコンテンツを表示します。 使用<see cref="P:AntDesign.CheckboxGroup`1.MixedMode" />を使用して、<see cref="P:AntDesign.CheckboxGroup`1.Options" /></summary>
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.Disabled">
      <summary v="1XADSI" i="0">
グループ内のすべてのチェックボックスを無効にする
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.MixedMode">
      <summary v="116013" i="0">
両方のとき<see cref="P:AntDesign.CheckboxGroup`1.ChildContent" />と<see cref="P:AntDesign.CheckboxGroup`1.Options" />これは、最初にレンダリングする必要があるものを指定します。
</summary>
      <default value="CheckboxGroupMixedMode.ChildContentFirst" />
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.OnChange">
      <summary v="1ca82K" i="0">
チェックされたオプションが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.CheckboxGroup`1.Options">
      <summary v="3PR40I" i="0">
チェックボックスのオプション
</summary>
    </member>
    <member name="P:AntDesign.CloseEventArgs`1.Cancel">
      <summary v="1g27YO" i="0">
Trueの場合、コンポーネントは閉じることができません。
</summary>
    </member>
    <member name="P:AntDesign.Col.ChildContent">
      <summary v="1MLCNF" i="0">
コラムの内容
</summary>
    </member>
    <member name="P:AntDesign.Col.Flex">
      <summary v="1YY68q" i="0">
フレックスモードを使用するかどうか。 Nullの場合はflexモードを使用しません。
</summary>
    </member>
    <member name="P:AntDesign.Col.Lg">
      <summary v="1cG3ru" i="0">
グリッドの &ge; 992px列
</summary>
    </member>
    <member name="P:AntDesign.Col.Md">
      <summary v="2JROGw" i="0">
グリッドの &ge; 768px列
</summary>
    </member>
    <member name="P:AntDesign.Col.Offset">
      <summary v="4dZsm6" i="0">
左からColをオフセットするColsの数
</summary>
    </member>
    <member name="P:AntDesign.Col.Order">
      <summary v="3kPKoz" i="0">
屈曲モードで使用されるColの順序
</summary>
    </member>
    <member name="P:AntDesign.Col.Pull">
      <summary v="21ldwV" i="0">
コルを左に引っ張るためのコルの数
</summary>
    </member>
    <member name="P:AntDesign.Col.Push">
      <summary v="3dUgdy" i="0">
コルを右に押すためのコルの数
</summary>
    </member>
    <member name="P:AntDesign.Col.Sm">
      <summary v="eWhMM" i="0">
グリッドの &ge; 576px列
</summary>
    </member>
    <member name="P:AntDesign.Col.Span">
      <summary v="3mX4Ek" i="0">
コルの幅
</summary>
    </member>
    <member name="P:AntDesign.Col.Xl">
      <summary v="xG0Zl" i="0">
グリッドの &ge; 1200px列
</summary>
    </member>
    <member name="P:AntDesign.Col.Xs">
      <summary v="4AyrfH" i="0">
グリッドの &lt;576px列
</summary>
    </member>
    <member name="P:AntDesign.Col.Xxl">
      <summary v="20jLOR" i="0">
グリッドの &ge; 1600px列
</summary>
    </member>
    <member name="P:AntDesign.Collapse.Accordion">
      <summary v="30sfSl" i="0">
アコーディオンモードを有効/無効にします。 Trueの場合、一度に開くことができるパネルは1つだけです。 別のものを開くと、残りは崩壊します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Collapse.Animation">
      <summary v="4N3BlR" i="0">
展開/崩壊アニメーションを有効にするかどうか
</summary>
    </member>
    <member name="P:AntDesign.Collapse.Bordered">
      <summary v="1QCVGz" i="0">
境界線の有効化/無効化
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Collapse.ChildContent">
      <summary v="UjjTN" i="0">
崩壊の内容。 通常は含まれます<see cref="T:AntDesign.Panel" />要素
</summary>
    </member>
    <member name="P:AntDesign.Collapse.DefaultActiveKey">
      <summary v="7Hd3f" i="0">
デフォルト<see cref="T:AntDesign.Panel" />要素の<see cref="P:AntDesign.Panel.Key" /></summary>
    </member>
    <member name="P:AntDesign.Collapse.ExpandIcon">
      <summary v="1EB3MA" i="0">
で表示するアイコン<see cref="P:AntDesign.Collapse.ExpandIconPosition" /></summary>
      <default value="right" />
    </member>
    <member name="P:AntDesign.Collapse.ExpandIconPosition">
      <summary v="CTbz8" i="0">
アイコンの位置を拡大
</summary>
      <default value="CollapseExpandIconPosition.Left" />
    </member>
    <member name="P:AntDesign.Collapse.ExpandIconTemplate">
      <summary v="2OZ9Rq" i="0">
表示するアイコンの内容を展開します。<see cref="P:AntDesign.Collapse.ExpandIconPosition" />を参照してください。 優先順位を引き継ぐ<see cref="P:AntDesign.Collapse.ExpandIcon" /></summary>
    </member>
    <member name="P:AntDesign.Collapse.OnChange">
      <summary v="1aCzNc" i="0">
開いているパネルが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Column`1.CellRender">
      <summary v="1Jig4V" i="0">
テーブルに表示する列の内容を设定する
</summary>
    </member>
    <member name="P:AntDesign.Column`1.DataIndex">
      <summary v="1Sz0pH" i="0">
データアイテム内の列データの対応するパス。配列を介してネストされたパスを照会するためのサポート
</summary>
    </member>
    <member name="P:AntDesign.Column`1.DefaultFilters">
      <summary v="TOwn4" i="0">
複数のフィルターを許可するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Column`1.DefaultSortOrder">
      <summary v="1ZaXZp" i="0">
デフォルトのソート方向
</summary>
    </member>
    <member name="P:AntDesign.Column`1.DisplayName">
      <summary v="3o7yZ4" i="0">
列の表示名
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Field">
      <summary v="2ZwpfU" i="0">
@ Bind-Fieldを使用してTItemのプロパティにバインドします。<see cref="T:AntDesign.PropertyColumn`2" />代わりに
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldChanged">
      <summary v="44B5H9" i="0">
@ Bind-Fieldにのみ使用され、式を取得します。他の目的はありません。
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldExpression">
      <summary v="3qhONM" i="0">
フィールドのデータを取得する式
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldFilterType">
      <summary v="2llI5z" i="0">
列のフィルタータイプ
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FieldName">
      <summary v="281ImF" i="0">
列のフィールド名
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filterable">
      <summary v="3VDP4M" i="0">
列がフィルタ可能かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Column`1.FilterDropdown">
      <summary v="3gLeeI" i="0">
この列が表すフィールド
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filtered">
      <summary v="2XyWA9" i="0">
DataSourceがフィルタリングされているかどうか。 フィルターアイコンはtrueのときにアクティブになります。
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FilterModel">
      <summary v="unuE7" i="0">
列のフィルターモデル
</summary>
    </member>
    <member name="P:AntDesign.Column`1.FilterMultiple">
      <summary v="TOwn4" i="0">
複数のフィルターを許可するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Filters">
      <summary v="3oTgXj" i="0">
列のフィルターオプション
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Format">
      <summary v="3S8OJA" i="0">
DateTime.ToString("XXX") などの列データシリアル化ルール
</summary>
    </member>
    <member name="P:AntDesign.Column`1.GroupBy">
      <summary v="1UGtpz" i="0">
列のグループ化関数を指定します。
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Grouping">
      <summary v="2rN9Yn" i="0">
列がグループ化に使用されているかどうか
</summary>
    </member>
    <member name="P:AntDesign.Column`1.OnCell">
      <summary v="3FLeni" i="0">
セル属性の設定
</summary>
    </member>
    <member name="P:AntDesign.Column`1.OnFilter">
      <summary v="4e8Sfq" i="0">
フィルタリング時に行が表示されるかどうかを判断する関数
<para>
パラメータ1: フィルタアイテムの値
</para><para>
パラメータ2: 列の値
</para></summary>
    </member>
    <member name="P:AntDesign.Column`1.OnHeaderCell">
      <summary v="319MF3" i="0">
ヘッダーセル属性の設定
</summary>
    </member>
    <member name="P:AntDesign.Column`1.ShowSorterTooltip">
      <summary v="xignj" i="0">
ソートボタンの上をホバリングするときにツールチップを表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Column`1.Sortable">
      <summary v="Bafnq" i="0">
ソートを許可するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Column`1.SortDirections">
      <summary v="2yMDpG" i="0">
許可されているソート方向
</summary>
    </member>
    <member name="P:AntDesign.Column`1.SorterCompare">
      <summary v="3e3LpK" i="0">
カスタムソートの比較関数
</summary>
    </member>
    <member name="P:AntDesign.Column`1.SorterMultiple">
      <summary v="2jzGcm" i="0">
許可されている類似の種類の数
</summary>
    </member>
    <member name="P:AntDesign.Column`1.SortModel">
      <summary v="sbr4L" i="0">
列のソートモデル
</summary>
    </member>
    <member name="P:AntDesign.Column`1.Title">
      <summary v="1T93cy" i="0">
列のタイトル。 次の優先順位を使用します。<see cref="P:AntDesign.ColumnBase.Title" /><see cref="P:AntDesign.Column`1.DisplayName" />、次に<see cref="P:AntDesign.Column`1.FieldName" /></summary>
    </member>
    <member name="P:AntDesign.ColumnBase.Align">
      <summary v="3qKVHu" i="0">
列の内容の配置
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.ChildContent">
      <summary v="1zSdTY" i="0">
列の内容
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.ColIndex">
      <summary v="3Bxg9L" i="0">
テーブル内のこの列のインデックス
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.ColSpan">
      <summary v="nFw52" i="0">
列スパン
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.ColumnBase.Ellipsis">
      <summary v="2Smf7V" i="0">
Trueに設定したときに省略記号でヘッダーのタイトルを切り取ります
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.ColumnBase.Fixed">
      <summary v="1vnqDP" i="0">
列を修正する
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.HeaderColSpan">
      <summary v="1ZuDrp" i="0">
ヘッダー列スパン
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.ColumnBase.HeaderStyle">
      <summary v="3tyoc5" i="0">
ヘッダーセルのスタイル
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.Hidden">
      <summary v="2LdRgQ" i="0">
列が隠されているかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.ColumnBase.RowSpan">
      <summary v="126EPD" i="0">
行スパン
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.ColumnBase.Title">
      <summary v="1BpkSN" i="0">
列ヘッダーのタイトル
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.TitleTemplate">
      <summary v="ZZ5wk" i="0">
列ヘッダーのタイトルコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.ColumnBase.Width">
      <summary v="iOWZU" i="0">
コラムのための幅
</summary>
    </member>
    <member name="P:AntDesign.Comment.Actions">
      <summary v="4a6qvY" i="0">
コメントの底に表示するアクションのリスト
</summary>
    </member>
    <member name="P:AntDesign.Comment.Author">
      <summary v="3HjLwg" i="0">
著者文字列
</summary>
    </member>
    <member name="P:AntDesign.Comment.AuthorTemplate">
      <summary v="349wA1" i="0">
著者のコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Comment.Author" /></summary>
    </member>
    <member name="P:AntDesign.Comment.Avatar">
      <summary v="3djsh0" i="0">
アバター文字列。 として渡されます。<see cref="P:AntDesign.Avatar.Src" />に<see cref="T:AntDesign.Avatar" />コンポーネントを使用します。
</summary>
    </member>
    <member name="P:AntDesign.Comment.AvatarTemplate">
      <summary v="HBxMO" i="0">
アバターのコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Comment.Avatar" /></summary>
    </member>
    <member name="P:AntDesign.Comment.ChildContent">
      <summary v="2tiMBd" i="0">
主に返信などの機能のコメントをネストするために使用されます
</summary>
    </member>
    <member name="P:AntDesign.Comment.Content">
      <summary v="122OFo" i="0">
コメントのコンテンツ文字列
</summary>
    </member>
    <member name="P:AntDesign.Comment.ContentTemplate">
      <summary v="15BBP2" i="0">
コメントの内容。 優先順位を引き継ぐ<see cref="P:AntDesign.Comment.Content" /></summary>
    </member>
    <member name="P:AntDesign.Comment.Datetime">
      <summary v="OnKv9" i="0">
コメントの日付文字列
</summary>
    </member>
    <member name="P:AntDesign.Comment.DatetimeTemplate">
      <summary v="3PUAVO" i="0">
コメントの日付コンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Comment.Datetime" /></summary>
    </member>
    <member name="P:AntDesign.Comment.Placement">
      <summary v="1Fenhd" i="0">
コメントの方向を設定します。<c>左</c>または<c>右</c>を参照してください。
</summary>
      <default value="left" />
    </member>
    <member name="P:AntDesign.Confirm.Config">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Confirm.ConfirmRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Confirm.OnRemove">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button1Props">
      <summary v="3uYyxi" i="0">
LTRレイアウトの左端ボタンのプロパティ
</summary>
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button2Props">
      <summary v="22oJ1V" i="0">
LTRレイアウトのセカンダリボタンのプロパティ
</summary>
    </member>
    <member name="P:AntDesign.ConfirmButtonOptions.Button3Props">
      <summary v="4QlFFO" i="0">
LTRレイアウトの3番目のボタンのプロパティ
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.AbortText">
      <summary v="4dymfT" i="0">
中止ボタンテキスト
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.CancelText">
      <summary v="3YxACC" i="0">
ボタンテキストをキャンセル
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.IgnoreText">
      <summary v="4CzbV2" i="0">
ボタンテキストを無視する
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.NoText">
      <summary v="1MTUhf" i="0">
ボタンテキストなし
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.OkText">
      <summary v="1kbJyX" i="0">
OKボタンテキスト
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.RetryText">
      <summary v="3UaGPH" i="0">
再試行ボタンのテキスト
</summary>
    </member>
    <member name="P:AntDesign.ConfirmLocale.YesText">
      <summary v="eXHQf" i="0">
[はい] ボタンのテキスト
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.AutoFocusButton">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button1Props">
      <summary v="3zpJsY" i="0">
LTRレイアウトの左端のボタン
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button1Text">
      <summary v="QZq7a" i="0">
LTRレイアウトの左端のボタンは、ConfirmLocaleをオーバーライドします
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button2Props">
      <summary v="2XllId" i="0">
左側の2番目のボタンはLTRレイアウトにあります
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button2Text">
      <summary v="2jO8Xs" i="0">
左側の2番目のボタンはLTRレイアウトにあり、ConfirmLocaleをオーバーライドします
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button3Props">
      <summary v="twE2H" i="0">
LTRレイアウトの右端のボタン
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Button3Text">
      <summary v="Y306A" i="0">
LTRレイアウトの右端のボタンは、ConfirmLocaleをオーバーライドします
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.CancelButtonProps">
      <summary v="3bEw4J" i="0">
OK-[確認] ダイアログのキャンセルボタンの小道具をキャンセルします。 Button2Propsに相当します。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.CancelText">
      <summary v="1TKAGv" i="0">
左ボタンの2番目の [キャンセル] ボタンの内容を設定する: [キャンセル] または [いいえ] ボタンをクリックすると、ConfirmLocaleがオーバーライドされます。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.ClassName">
      <summary v="4ZPZXD" i="0">
".Ant-modal" の要素のクラス名
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Content">
      <summary v="LVRKT" i="0">
チャイルドコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn1Text">
      <summary v="q3Wg3" i="0">
わかった
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn2Text">
      <summary v="1G3tB3" i="0">
キャンセル
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.DefaultBtn3Text">
      <summary v="3tdu1K" i="0">
無視する
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Icon">
      <summary v="34Ek9o" i="0">
左上のアイコンを確認
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Locale">
      <summary v="4ZCiPk" i="0">
ロケールの確認
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkButtonProps">
      <summary v="4fyyWA" i="0">
OK-[確認] ダイアログの [OK] ボタンの小道具をキャンセルします。 Button1Propsに相当します。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkCancel">
      <summary v="3FnioJ" i="0">
OKの [キャンセル] ボタンを表示-[確認をキャンセル] ダイアログを表示する
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkText">
      <summary v="1UJ85J" i="0">
左側のボタンの [OK] ボタンの内容を設定します。[OK] または [はい] ボタンで、ConfirmLocaleをオーバーライドします。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OkType">
      <summary v="hftSf" i="0">
左ボタンのOKボタンタイプを設定します: OKまたははいボタン
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OnCancel">
      <summary v="297oJB" i="0">
[OK-Cancel Confirm] ダイアログの場合、 [キャンセル] ボタンをクリックしたコールバック。
ModalServiceモードで作成されたConfirmでのみトリガーされます。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.OnOk">
      <summary v="WcOPM" i="0">
[OK-キャンセル] [確認] ダイアログの場合、 [OK] ボタンでコールバックをクリックします。
ModalServiceモードで作成されたConfirmでのみトリガーされます。
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Style">
      <summary v="4Bzv48" i="0">
を参照してください。 Ant-modal要素のスタイル
</summary>
    </member>
    <member name="P:AntDesign.ConfirmOptions.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ConfirmRef.Config">
      <summary v="1kUbEo" i="0">
ダイアログオプションの確認
</summary>
    </member>
    <member name="P:AntDesign.ConfirmRef.Service">
      <summary v="33W2aX" i="0">
ModalService
</summary>
    </member>
    <member name="P:AntDesign.ConfirmRef`1.OnCancel">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.ConfirmRef`1.OnOk">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.Content.ChildContent">
      <summary v="4bqEO7" i="0">
内部コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.CountDown.Format">
      <summary v="1rMSLZ" i="0">
時刻の形式
</summary>
      <default value="hh:mm:ss" />
    </member>
    <member name="P:AntDesign.CountDown.OnFinish">
      <summary v="2FpaDF" i="0">
カウントダウンがなくなったときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.CountDown.RefreshInterval">
      <summary v="2HMj6L" i="0">
間隔 (ミリ秒) でUIを更新します。
</summary>
      <default value="100ms" />
    </member>
    <member name="P:AntDesign.CountDown.Value">
      <summary v="2aJ36L" i="0">
カウントダウンの値
</summary>
    </member>
    <member name="P:AntDesign.DatePicker`1.OnChange">
      <summary v="47ZR4f" i="0">
選択した値が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.AllowClear">
      <summary v="35o7iv" i="0">
選択した値のクリアを許可するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.AntDesign#IDatePicker#CurrentDate">
      <summary v="4esopE" i="0">
「今日」に使用される日付
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.AutoFocus">
      <summary v="eEdOD" i="0">
入力のオートフォーカスかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Bordered">
      <summary v="3srvvf" i="0">
境界線を表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
オーバーレイ調整戦略 (たとえば、ブラウザのサイズ変更が行われている場合)
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ChangeOnClose">
      <summary v="2QN4Qc" i="0">
ぼかし後の入力値の保存
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ClassName">
      <summary v="4AYvSS" i="0">
ピッカークラス名
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.CultureInfo">
      <summary v="AMJyd" i="0">
ローカリゼーションに使用するCultureInfo
</summary>
      <default value="CultureInfo for Locale" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DateRender">
      <summary v="lRPhf" i="0">
日付セルのカスタムレンダリング
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DefaultPickerValue">
      <summary v="2v0EN3" i="0">
ピッカーのデフォルト値
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DefaultValue">
      <summary v="41kuBJ" i="0">
デフォルト値
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Disabled">
      <summary v="Ld5cR" i="0">
日付ピッカーを無効にします。
単一のブール値が与えられると、すべてが無効になります。
ブールの配列が与えられたとき、それは範囲の開始/終了を無効にすることを表します: [start, end]
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledDate">
      <summary v="3iakAW" i="0">
提供された日付を無効にするかどうかを判断する関数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledHours">
      <summary v="2RZLOY" i="0">
日付の時間を無効にする必要があるかどうかを判断する関数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledMinutes">
      <summary v="2oS2cc" i="0">
日付の分を無効にする必要があるかどうかを判断する関数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledSeconds">
      <summary v="1gPOvx" i="0">
日付の秒を無効にする必要があるかどうかを判断する関数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DisabledTime">
      <summary v="tU0BC" i="0">
日付で無効にする時間を決定する関数
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.DropdownClassName">
      <summary v="1hhCai" i="0">
Popoverドロップダウンのクラス名
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Format">
      <summary v="2Ezd1I" i="0">
DateTimeディスプレイのフォーマット
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.InputReadOnly">
      <summary v="2hqfhc" i="0">
ピッカーが読み取り専用かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsNullable">
      <summary v="1y4yhm" i="0">
TValueがnullable型の場合、情報を格納します。
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsRange">
      <summary v="alXa4" i="0">
ピッカーがレンジピッカーであるかどうか
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.IsShowTime">
      <summary v="3zr0ni" i="0">
時間が表示されるかどうか。 設定から行われたブール決定が含まれています<see cref="P:AntDesign.DatePickerBase`1.ShowTime" /></summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Mask">
      <summary v="2xkbae" i="0">
UI文字列をローカライズするためのロケール
</summary>
      <default value="LocaleProvider.CurrentLocale.DatePicker" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.MonthCellRender">
      <summary v="39CEYm" i="0">
月のセルのカスタムレンダリング
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnClear">
      <summary v="2COoYI" i="0">
クリアボタンをクリックしたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnClearClick">
      <summary v="1IKomZ" i="0">
クリアがクリックされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnOk">
      <summary v="1xEqlw" i="0">
OKがクリックされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnOpenChange">
      <summary v="2jMIqP" i="0">
Popoverカレンダーが開いたり閉じたりしたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.OnPanelChange">
      <summary v="3m6HC" i="0">
表示されるパネルのタイプが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Open">
      <summary v="2zKzDl" i="0">
ピッカーが開いているかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Picker">
      <summary v="2JrnWU" i="0">
ピッカータイプの設定
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Placeholder">
      <summary v="4SL0ph" i="0">
入力用プレースホルダー
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Placement">
      <summary v="12BNeH" i="0">
選択ボックスがポップアップする位置
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.PopupContainerSelector">
      <summary v="3lnb6a" i="0">
ポップアップのコンテナをに配置するためのセレクター
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.PopupStyle">
      <summary v="2U9lig" i="0">
Popupに适用されるスタイル
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Ranges">
      <summary v="3r80FK" i="0">
ボタンを1回クリックするだけで範囲を選択できる範囲選択プリセット
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.RenderExtraFooter">
      <summary v="4R91El" i="0">
ピッカーのフッターに表示する余分なコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ShowTime">
      <summary v="3Blbxy" i="0">
時間を表示するかどうか。
<para>Booleanの場合、ShowTimeをbooleanに設定します。</para><para>Stringの場合、ShowTimeをtrueに設定し、文字列値を時間形式として使用します。</para></summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ShowTimeFormat">
      <summary v="2apdU1" i="0">
時間を表示するときの時間形式。 設定からの文字列形式が含まれます<see cref="P:AntDesign.DatePickerBase`1.ShowTime" />文字列付き
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.ShowToday">
      <summary v="2yFnRT" i="0">
任意の日付から今日を選択する今日ボタンを表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DatePickerBase`1.SuffixIcon">
      <summary v="4WGBgC" i="0">
カスタム接尾辞アイコン
</summary>
    </member>
    <member name="P:AntDesign.DatePickerBase`1.Use12Hours">
      <summary v="4evlFx" i="0">
Trueの場合、12時間を使用します。 Falseが24時間を使用するとき
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.CalendarDateRender">
      <summary v="3GeJLc" i="0">
カレンダー用。DateCellRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.CalendarMonthCellRender">
      <summary v="1b4EGp" i="0">
カレンダー用MonthCellRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.DateRender">
      <summary v="1faJpx" i="0">
カレンダー用。DateFullCellRender、DatePicker.DateRender
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.IsShowTime">
      <summary v="3q0ltB" i="0">
DatePickerWithTimePanelでのみ使用
</summary>
    </member>
    <member name="P:AntDesign.DatePickerPanelBase`1.MonthCellRender">
      <summary v="1rnJ5M" i="0">
カレンダー用。MonthFullCellRender、DatePicker。MonthCellRender
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Bordered">
      <summary v="OHtzf" i="0">
境界線を表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Descriptions.ChildContent">
      <summary v="15TjF0" i="0">
要素のコンテンツ。 通常は含まれます<see cref="T:AntDesign.DescriptionsItem" />要素
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Colon">
      <summary v="3nj37O" i="0">
デフォルトの小道具を変更する<c>コロン</c>の値<see cref="T:AntDesign.DescriptionsItem" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Column">
      <summary v="3yrPT6" i="0">
の数は、<see cref="T:AntDesign.DescriptionsItem" />行の要素。 {Xs: 8、sm: 16、md: 24} のような数字またはオブジェクトである可能性があります
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Layout">
      <summary v="3C9H5N" i="0">
レイアウト-水平または垂直
</summary>
      <default value="DescriptionsLayout.Horizontal" />
    </member>
    <member name="P:AntDesign.Descriptions.Size">
      <summary v="1RqWZH" i="0">
リストのサイズ
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.Title">
      <summary v="2iDc5H" i="0">
要素の上部に表示されるタイトル
</summary>
    </member>
    <member name="P:AntDesign.Descriptions.TitleTemplate">
      <summary v="38RU3L" i="0">
要素の上部に表示されるタイトルコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Descriptions.Title" /></summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.ChildContent">
      <summary v="2IbjLv" i="0">
アイテムのコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.ContentStyle">
      <summary v="1Uuc59" i="0">
コンテンツのスタイルをカスタマイズする
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.LabelStyle">
      <summary v="3SxOsd" i="0">
ラベルのスタイルをカスタマイズする
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.Span">
      <summary v="1O3pHg" i="0">
アイテムのスパン
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.DescriptionsItem.Title">
      <summary v="46HUDe" i="0">
アイテムのタイトル
</summary>
    </member>
    <member name="P:AntDesign.DescriptionsItem.TitleTemplate">
      <summary v="4TzYyb" i="0">
アイテムのタイトルコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.DescriptionsItem.Title" /></summary>
    </member>
    <member name="P:AntDesign.Dialog.SentinelStart">
      <summary v="1bBGgs" i="0">
タブスタートコントロールID
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.BodyStyle">
      <summary v="Bh4MH" i="0">
Ant-モーダル-ボディスタイル
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ChildContent">
      <summary v="LVRKT" i="0">
チャイルドコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ClassName">
      <summary v="4ZPZXD" i="0">
".Ant-modal" の要素のクラス名
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Closable">
      <summary v="122WS7" i="0">
Show ant-modal-closer
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.CloseIcon">
      <summary v="1Bc5mm" i="0">
より近いアイコンRenderFragment、デフォルトは "X" です
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ConfirmLoading">
      <summary v="3IUGTG" i="0">
OKボタンの読み込み視覚効果を適用するかどうか
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DefaultMaximized">
      <summary v="3BcFs7" i="0">
コンポーネントの初期化中にダイアログを最大化すると、最大値は無視されます。
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DestroyOnClose">
      <summary v="45nYFl" i="0">
モーダルが閉じた後にDOMからモーダルを削除するかどうか
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Draggable">
      <summary v="3zmBrO" i="0">
ドラガブルモーダル
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.DragInViewport">
      <summary v="4eoCF0" i="0">
ビューポート内でのみドラッグアンドドロップ
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Footer">
      <summary v="3C0yk" i="0">
モーダルフッター
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.ForceRender">
      <summary v="KgRwM" i="0">
開く前にモーダルドームを強制的にレンダリングするかどうか。
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Header">
      <summary v="2e3Pxq" i="0">
モーダルヘッダー
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.MaxBodyHeight">
      <summary v="2FuBJq" i="0">
最大モーダルボディコンテンツの高さ
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Maximizable">
      <summary v="4CJFl8" i="0">
ショーモーダル最大化ボタン
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
モーダルが通常の状態にあるときの最大化ボタンのアイコン
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnCancel">
      <summary v="297oJB" i="0">
[OK-Cancel Confirm] ダイアログの場合、 [キャンセル] ボタンをクリックしたコールバック。
ModalServiceモードで作成されたConfirmでのみトリガーされます。
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnClosed">
      <summary v="2jjyi0" i="0">
ダイアログが閉じた後のトリガー
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.OnOk">
      <summary v="WcOPM" i="0">
[OK-キャンセル] [確認] ダイアログの場合、 [OK] ボタンでコールバックをクリックします。
ModalServiceモードで作成されたConfirmでのみトリガーされます。
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.Resizable">
      <summary v="1COtwc" i="0">
Resizable (水平方向のみ)
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
モーダルが最大化されたときの最大化ボタンのアイコン
</summary>
    </member>
    <member name="P:AntDesign.DialogOptions.WrapClassName">
      <summary v="3xRJ9X" i="0">
モーダルダイアログのコンテナのクラス名
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.CancelButtonProps">
      <summary v="2Vf3Gr" i="0">
ボタンの小道具をキャンセル
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.CancelText">
      <summary v="3qDtWd" i="0">
モーダルデフォルトのフッターキャンセルテキスト
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Centered">
      <summary v="1nfblX" i="0">
センター表示かどうか
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.GetContainer">
      <summary v="1e0xvG" i="0">
モーダル親DOMを取得または設定する
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Keyboard">
      <summary v="4DS9c2" i="0">
サポートプレスescを閉じるかどうか
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Mask">
      <summary v="4N1u35" i="0">
ショーマスクかどうか
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.MaskClosable">
      <summary v="1DBAFK" i="0">
マスク (モーダルの外側の領域) をクリックしたときにモーダルダイアログを閉じるかどうか
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.MaskStyle">
      <summary v="vgNzt" i="0">
ダイアログのマスク要素のスタイル
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkButtonProps">
      <summary v="3Ndw8d" i="0">
OKボタンの小道具
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkText">
      <summary v="2IMgZI" i="0">
[OK] ボタンのテキスト
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.OkType">
      <summary v="1XT62s" i="0">
OKボタンのボタンタイプ
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.PrefixCls">
      <summary v="3GXzUH" i="0">
クラス名のプレフィックス
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Rtl">
      <summary v="MHb3Z" i="0">
はRTL
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Title">
      <summary v="1gdKE7" i="0">
文字列のモーダルダイアログのタイトル
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.TitleTemplate">
      <summary v="3OT4NB" i="0">
RenderFragmentのモーダルダイアログのタイトル
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.Width">
      <summary v="7XF2B" i="0">
モーダルダイアログの幅
</summary>
    </member>
    <member name="P:AntDesign.DialogOptionsBase.ZIndex">
      <summary v="10GCuH" i="0">
モーダルのzインデックス
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.ChildContent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.Config">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.Dialog">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.DialogWrapper.OnAfterHide">
      <summary v="a7xve" i="0">
OnAfterRenderAsyncメソッドで表示されている場合のトリガー
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.OnAfterShow">
      <summary v="1VqOVh" i="0">
OnAfterRenderAsyncメソッドで表示がtrueの場合にトリガーされます
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.OnBeforeDestroy">
      <summary v="1w3viE" i="0">
DOMツリーからコンポーネントを破壊する前に。 そして、あなたはセットCancelEventArgsによって破壊をキャンセルすることができます。Cancel = true
</summary>
    </member>
    <member name="P:AntDesign.DialogWrapper.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.Divider.ChildContent">
      <summary v="1H4ejN" i="0">
仕切りの中に表示するコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Divider.Dashed">
      <summary v="2gF7AJ" i="0">
ラインをダッシュとしてスタイリングするかどうか。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Divider.Orientation">
      <summary v="4I3ZJM" i="0">
コンテンツ/テキストの向き-'left' | 'right' | 'center'。 「Text」または「ChildContent」を使用していない場合は無視されます
</summary>
      <default value="center" />
    </member>
    <member name="P:AntDesign.Divider.Plain">
      <summary v="4Fjgcc" i="0">
Falseの場合、テキストはヘッダースタイルになりません。 Trueのときはヘッダースタイルになります。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Divider.Text">
      <summary v="2Sjfl0" i="0">
仕切りの中に表示するテキスト
</summary>
    </member>
    <member name="P:AntDesign.Divider.Type">
      <summary v="1mXxDF" i="0">
仕切りのタイプ-「水平」 | 「垂直」
</summary>
      <default value="DirectionVHType.Horizontal" />
    </member>
    <member name="P:AntDesign.DownloadButton.FileName">
      <summary v="392ubQ" i="0">
ファイルの名前
</summary>
    </member>
    <member name="P:AntDesign.DownloadButton.Url">
      <summary v="zywYv" i="0">
ファイルのダウンロードURL
</summary>
    </member>
    <member name="P:AntDesign.Drawer.BodyStyle">
      <summary v="u6xjR" i="0">
モーダルボディ要素のボディスタイル。 高さ、パディングなど。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.ChildContent">
      <summary v="1iuu2Y" i="0">
引き出しの内容。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Closable">
      <summary v="40sJ3M" i="0">
[引き出し] ダイアログの右上に閉じる (x) ボタンが表示されているかどうか。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.Content">
      <summary v="1Ckdp9" i="0">
引き出しの内容。<para><see cref="P:AntDesign.Drawer.Content" />は文字列であるため、HTMLとしてレンダリングされます。</para></summary>
    </member>
    <member name="P:AntDesign.Drawer.HeaderStyle">
      <summary v="3ZaZX1" i="0">
モーダルヘッダー要素のヘッダースタイル。 高さ、パディングなど。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Height">
      <summary v="IBctt" i="0">
配置が「上」または「下」の場合のみ、引き出しダイアログの高さ。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.Drawer.Keyboard">
      <summary v="3Xg479" i="0">
キーボードescオフをサポートするかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.Mask">
      <summary v="X5rmp" i="0">
マスクを表示するかどうか。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.MaskClosable">
      <summary v="2E3M99" i="0">
マスク (引き出しの外側の領域) をクリックして、引き出しを閉じるかどうか。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Drawer.MaskStyle">
      <summary v="4LPjkp" i="0">
引き出しのマスク要素のスタイル。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetTransform">
      <summary v="1ovClK" i="0">
设置引き出し式 (引出し式) 、后后期式 (オフセット)
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OffsetX">
      <summary v="26Ulx0" i="0">
配置が「左」または「右」の場合のみ、X座標オフセット (px) です。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Drawer.OffsetY">
      <summary v="hguA9" i="0">
配置が「トップ」または「ボトム」の場合のみ、Y座標オフセット (px) です。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Drawer.OnClose">
      <summary v="1ojkm0" i="0">
ユーザーがマスク、閉じるボタン、またはキャンセルボタンをクリックしたときに呼び出されるコールバックを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.OnOpen">
      <summary v="rwHRP" i="0">
引き出しが表示される前に呼び出されるコールバックを指定する
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Placement">
      <summary v="QCGNR" i="0">
引き出しの配置、オプションは、左、上、右、下にすることができます
</summary>
      <default value="right" />
    </member>
    <member name="P:AntDesign.Drawer.Title">
      <summary v="fjARs" i="0">
引き出しのタイトル。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Transform">
      <summary v="oxkit" i="0">
设置引き出し式 (引出し式) オフセット (引出し式)
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Visible">
      <summary v="yyFAv" i="0">
引き出しダイアログが表示されるかどうか。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Drawer.VisibleChanged">
      <summary v="Fls9t" i="0">
VisibleのEventCallbackトリガーが変更されました。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.Width">
      <summary v="3bRCW2" i="0">
配置が「左」または「右」の場合のみ、引き出しダイアログの幅。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.Drawer.WrapClassName">
      <summary v="4S5JP6" i="0">
Drawerダイアログのコンテナのクラス名。
</summary>
    </member>
    <member name="P:AntDesign.Drawer.ZIndex">
      <summary v="4fn8QA" i="0">
引き出しのzインデックス。
</summary>
      <default value="1000" />
    </member>
    <member name="P:AntDesign.DrawerOpenEventArgs.Cancel">
      <summary v="3EbA1B" i="0">
「」をご利用ください。
結果: trueになりました。
イベントをキャンセルするかどうかを示す値を取得または設定します。
戻り値: イベントをキャンセルする場合はtrue、それ以外の場合はfalseです。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.BodyStyle">
      <summary v="27nFs3" i="0">
引き出しボディ要素のボディスタイル。 高さ、パディングなど。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Closable">
      <summary v="40sJ3M" i="0">
[引き出し] ダイアログの右上に閉じる (x) ボタンが表示されているかどうか。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Content">
      <summary v="1xv37D" i="0">
引き出し本体の内容。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.HeaderStyle">
      <summary v="3jKYHs" i="0">
Drawerヘッダー要素のヘッダースタイル。 高さ、パディングなど。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Height">
      <summary v="IBctt" i="0">
配置が「上」または「下」の場合のみ、引き出しダイアログの高さ。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Keyboard">
      <summary v="3Xg479" i="0">
キーボードescオフをサポートするかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Mask">
      <summary v="X5rmp" i="0">
マスクを表示するかどうか。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.MaskClosable">
      <summary v="2E3M99" i="0">
マスク (引き出しの外側の領域) をクリックして、引き出しを閉じるかどうか。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.DrawerOptions.MaskStyle">
      <summary v="4LPjkp" i="0">
引き出しのマスク要素のスタイル。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.OffsetX">
      <summary v="26Ulx0" i="0">
配置が「左」または「右」の場合のみ、X座標オフセット (px) です。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.DrawerOptions.OffsetY">
      <summary v="hguA9" i="0">
配置が「トップ」または「ボトム」の場合のみ、Y座標オフセット (px) です。
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Placement">
      <summary v="Si3W4" i="0">
引き出しの配置-可能な値: "left" 、 "right" 、 "top" 、 "bottom"
</summary>
      <default value="right" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Title">
      <summary v="fjARs" i="0">
引き出しのタイトル。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.Visible">
      <summary v="3ewQSK" i="0">
引き出しが見えるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DrawerOptions.Width">
      <summary v="1yZAO4" i="0">
引き出しダイアログの幅。
</summary>
      <default value="256" />
    </member>
    <member name="P:AntDesign.DrawerOptions.WrapClassName">
      <summary v="4S5JP6" i="0">
Drawerダイアログのコンテナのクラス名。
</summary>
    </member>
    <member name="P:AntDesign.DrawerOptions.ZIndex">
      <summary v="4fn8QA" i="0">
引き出しのzインデックス。
</summary>
      <default value="1000" />
    </member>
    <member name="P:AntDesign.Dropdown.Arrow">
      <summary v="2noVuk" i="0">
ドロップダウン矢印を表示するかどうか。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Dropdown.ArrowPointAtCenter">
      <summary v="eD92u" i="0">
ドロップダウン矢印が中心を指すかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Block">
      <summary v="4dlKNJ" i="0">
ボタンの幅を親の幅に合わせるオプション
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsClass">
      <summary v="2JSYNV" i="0">
各ボタンのcssクラスを同じ文字列に設定できます
または別に。
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsRender">
      <summary v="2CfA26" i="0">
完全にカスタマイズ可能なボタン。
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.ButtonsStyle">
      <summary v="3pYu7U" i="0">
各ボタンのスタイルを同じ文字列に設定できます
または別に。
</summary>
    </member>
    <member name="P:AntDesign.DropdownButton.Danger">
      <summary v="EU9VT" i="0">
ボタンの危険状態を設定する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Ghost">
      <summary v="x4g06" i="0">
複雑な背景、通常はホームページのある状況で使用されます。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Icon">
      <summary v="3hn7FB" i="0">
右にレンダリングされるアイコン
をクリックします。
</summary>
      <default value="ellipsis" />
    </member>
    <member name="P:AntDesign.DropdownButton.Loading">
      <summary v="3zCufH" i="0">
読み込みアイコンが含まれるかどうかを示します。
Trueに設定すると、ドロップダウンはアクティブになりません。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.DropdownButton.Size">
      <summary v="qmBSM" i="0">
ボタンのサイズ。
</summary>
      <default value="AntSizeLDSType.Default" />
    </member>
    <member name="P:AntDesign.DropdownButton.Type">
      <summary v="485Sk2" i="0">
各ボタンのタイプを同じ文字列に設定できます
または別に。 AntDesign.ButtonTypeヘルパークラスを使用します。
</summary>
      <default value="ButtonType.Default" />
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Offset">
      <summary v="4dZsm6" i="0">
左からColをオフセットするColsの数
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Order">
      <summary v="3kPKoz" i="0">
屈曲モードで使用されるColの順序
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Pull">
      <summary v="21ldwV" i="0">
コルを左に引っ張るためのコルの数
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Push">
      <summary v="3dUgdy" i="0">
コルを右に押すためのコルの数
</summary>
    </member>
    <member name="P:AntDesign.EmbeddedProperty.Span">
      <summary v="3mX4Ek" i="0">
コルの幅
</summary>
    </member>
    <member name="P:AntDesign.Empty.ChildContent">
      <summary v="1zrqzC" i="0">
空のビューの後に表示されるコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Empty.Description">
      <summary v="2hbqKL" i="0">
空のビューのロケール設定
</summary>
      <default value="No Data (in current locale)" />
    </member>
    <member name="P:AntDesign.Empty.DescriptionTemplate">
      <summary v="2Cig2u" i="0">
ビューの内容を説明します。 優先順位を引き継ぐ<see cref="P:AntDesign.Empty.Description" /></summary>
    </member>
    <member name="P:AntDesign.Empty.Image">
      <summary v="33Dae7" i="0">
ビューの画像URL。 優先順位を引き継ぐ<see cref="P:AntDesign.Empty.Simple" /></summary>
    </member>
    <member name="P:AntDesign.Empty.ImageStyle">
      <summary v="2iPvvx" i="0">
画像のラッパーのスタイル。 イメージタイプに関系なく常に使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Empty.ImageTemplate">
      <summary v="4C9DfU" i="0">
空のビューの画像コンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Empty.Image" />と<see cref="P:AntDesign.Empty.Simple" /></summary>
    </member>
    <member name="P:AntDesign.Empty.Simple">
      <summary v="2yIGKQ" i="0">
Emptyの単純なバリアントを使用します。 画像も変更します。
</summary>
    </member>
    <member name="P:AntDesign.Empty.Small">
      <summary v="1fuld7" i="0">
Emptyの小さなバリアントを使用する
</summary>
    </member>
    <member name="P:AntDesign.FeedbackComponent`1.FeedbackRef">
      <summary v="11Cl1m" i="0">
外部からテンプレートを渡すことができるオプション
</summary>
    </member>
    <member name="P:AntDesign.FeedbackComponent`1.OkCancelRef">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackComponent`2.OkCancelRefWithResult">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.AntDesign#IFeedbackRef#ModalTemplate">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.OnClose">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.FeedbackRefBase.OnOpen">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.FeedbackRefWithOkCancelBase.OnCancel">
      <summary v="uSJz1" i="0">
キャンセルボタンまたはより近いクリック時に呼び出す
</summary>
    </member>
    <member name="P:AntDesign.FeedbackRefWithOkCancelBase.OnOk">
      <summary v="xi0GX" i="0">
[OK] ボタンをクリックしたときに呼び出す
</summary>
    </member>
    <member name="P:AntDesign.Flex.Align">
      <summary v="2At4GH" i="0">
横軸の方向に要素の位置合わせを設定します
参照align-アイテム https://developer.mozilla.org/en-US/docs/Web/CSS/align-items
</summary>
    </member>
    <member name="P:AntDesign.Flex.ChildContent">
      <summary v="3j5b8f" i="0">
子要素の設定
</summary>
    </member>
    <member name="P:AntDesign.Flex.Component">
      <summary v="243oNo" i="0">
カスタム要素タイプ
</summary>
    </member>
    <member name="P:AntDesign.Flex.FlexCss">
      <summary v="F363V" i="0">
Flex CSSの速記プロパティ
参照フレックス https://developer.mozilla.org/en-US/docs/Web/CSS/flex
</summary>
    </member>
    <member name="P:AntDesign.Flex.Gap">
      <summary v="Uut0G" i="0">
グリッド間のギャップを設定する
小さい | 中 | 大きい | 文字列 | 数
</summary>
    </member>
    <member name="P:AntDesign.Flex.Justify">
      <summary v="3zFpKI" i="0">
主轴の方向の要素の位置合わせを设定します
参照正当化-コンテンツ https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content
</summary>
    </member>
    <member name="P:AntDesign.Flex.Vertical">
      <summary v="rxl5t" i="0">
フレックスの垂直方向は、flex-direction: columnを使用します。
</summary>
    </member>
    <member name="P:AntDesign.Flex.Wrap">
      <summary v="rE4AA" i="0">
要素を1行に表示するか、複数行に表示するかを設定する
参照フレックスラップ: https://developer.mozilla.org/en-US/docs/Web/CSS/flex-wrap
</summary>
    </member>
    <member name="P:AntDesign.Footer.ChildContent">
      <summary v="4bqEO7" i="0">
内部コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Autocomplete">
      <summary v="2cp7Sy" i="0">
入力要素がデフォルトでブラウザによって自動的に値を完了できるかどうか
</summary>
    </member>
    <member name="P:AntDesign.Form`1.ChildContent">
      <summary v="47H0xI" i="0">
フォームの内容。 通常、異なるフォーム入力とレイアウト要素が含まれています。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.EditContext">
      <summary v="1Tm5U3" i="0">
を取得します。<see cref="P:AntDesign.Form`1.EditContext" />フォーム内のインスタンス
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Enhance">
      <summary v="vrllB" i="0">
有効にすると、ページを完全にリロードせずにフォーム送信が実行されます。 これは、フォームにデータエンハンスを追加することと同じです。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.IsModified">
      <summary v="1vMqSK" i="0">
フォームが変更されたかどうかを示すフラグ
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelAlign">
      <summary v="3OS80Q" i="0">
ラベルを左または右に揃えます
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelCol">
      <summary v="3LC4ty" i="0">
ラベルのレイアウトを制御します。 さまざまな画面サイズの幅を設定するためによく使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelColOffset">
      <summary v="43cRlv" i="0">
取得/設定<c>オフセット</c>上のプロパティ<see cref="P:AntDesign.Form`1.LabelCol" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.LabelColSpan">
      <summary v="2WF29N" i="0">
取得/設定<c>スパン</c>上のプロパティ<see cref="P:AntDesign.Form`1.LabelCol" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Layout">
      <summary v="3orA1g" i="0">
フォーム内のフォームアイテムのレイアウト
</summary>
      <default value="FormLayout.Horizontal" />
    </member>
    <member name="P:AntDesign.Form`1.Loading">
      <summary v="bimjG" i="0">
フォームがロード中かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Form`1.Locale">
      <summary v="2XNC8o" i="0">
ローカリゼーションのオプション
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Method">
      <summary v="36C0mf" i="0">
フォームの送信に使用されるHttpメソッド
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Model">
      <summary v="22oHnU" i="0">
フォーム入力をバインドするモデル
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Name">
      <summary v="1i6Jp4" i="0">
フォームハンドラー名を取得または設定します。 これは、サーバー側のエンドポイントに投稿するために必要です。
または、フォームインスタンスの取得に使用します。<see cref="T:AntDesign.FormProviderFinishEventArgs" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnFieldChanged">
      <summary v="3NRd9O" i="0">
フォーム内のフィールドが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnFinish">
      <summary v="1aIq2R" i="0">
フォームの送信時にコールバックが実行され、パスが検証されます。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnFinishFailed">
      <summary v="1OPHMT" i="0">
フォームの送信時にコールバックが実行され、検証が失敗します。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnValidationRequested">
      <summary v="14Qb8V" i="0">
検証が要求されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Form`1.OnValidationStateChanged">
      <summary v="1beYKx" i="0">
検証が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Form`1.RequiredMark">
      <summary v="0PrxO" i="0">
フォームに必要な/オプションのフィールドラベルが表示される方法を変更します。
<list type="bullet"><item>必須-必須フィールドをマークします</item><item>オプション-オプションフィールドをマークします</item><item>なし-必須/オプションに関係なく、フィールドをマークしません</item></list></summary>
    </member>
    <member name="P:AntDesign.Form`1.Size">
      <summary v="4Pqlio" i="0">
フォーム内のantコンポーネントのサイズ
</summary>
    </member>
    <member name="P:AntDesign.Form`1.ValidateMode">
      <summary v="1liC5Z" i="0">
フォームが使用する検証のモード
</summary>
      <default value="FormValidateMode.Default" />
    </member>
    <member name="P:AntDesign.Form`1.ValidateOnChange">
      <summary v="4Lbt9x" i="0">
コンポーネントの値が変更されたときに検証を有効にする
</summary>
    </member>
    <member name="P:AntDesign.Form`1.Validator">
      <summary v="1i9ziH" i="0">
フォームで使用するValidator。 ときに使用される<see cref="P:AntDesign.Form`1.ValidateMode" />は、<c>FormValidateMode.デフォルト</c>または<c>FormValidateMode.Complex</c></summary>
    </member>
    <member name="P:AntDesign.Form`1.WrapperCol">
      <summary v="3JEIvN" i="0">
入力要素のラッパーのレイアウトを制御します。 さまざまな画面サイズの幅を設定するためによく使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.WrapperColOffset">
      <summary v="2Wjjm6" i="0">
取得/設定<c>オフセット</c>上のプロパティ<see cref="P:AntDesign.Form`1.WrapperColOffset" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Form`1.WrapperColSpan">
      <summary v="3Gjelz" i="0">
取得/設定<c>スパン</c>上のプロパティ<see cref="P:AntDesign.Form`1.WrapperCol" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.ChildContent">
      <summary v="3igBxk" i="0">
フォームアイテムのコンテンツ。 通常、入力要素の1つが含まれます
</summary>
    </member>
    <member name="P:AntDesign.FormItem.HasFeedback">
      <summary v="353jAg" i="0">
と組み合わせて使用される<see cref="P:AntDesign.FormItem.ValidateStatus" />確認ステータスアイコンを表示します。 入力コンポーネントでのみ使用することをお勧めします
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Help">
      <summary v="MO3O4" i="0">
プロンプト情報
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Label">
      <summary v="X4UOj" i="0">
アイテムのカスタムラベル。 どちらでもない場合<see cref="P:AntDesign.FormItem.Label" />または<see cref="P:AntDesign.FormItem.LabelTemplate" />が提供されている場合、DisplayName属性値またはフィールド名が (この順序で) 使用されます。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelAlign">
      <summary v="3OS80Q" i="0">
ラベルを左または右に揃えます
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelCol">
      <summary v="3LC4ty" i="0">
ラベルのレイアウトを制御します。 さまざまな画面サイズの幅を設定するためによく使用されます。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelColOffset">
      <summary v="2F97VI" i="0">
取得/設定<c>オフセット</c>上のプロパティ<see cref="P:AntDesign.FormItem.LabelCol" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelColSpan">
      <summary v="3vd2QC" i="0">
取得/設定<c>スパン</c>上のプロパティ<see cref="P:AntDesign.FormItem.LabelCol" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelStyle">
      <summary v="3B7Wrm" i="0">
ラベル要素にのみ適用されるスタイル。
LabelTemplateが設定されている場合は適用されません。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.LabelTemplate">
      <summary v="PZaAg" i="0">
アイテムのカスタムラベルコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.FormItem.Label" />を参照してください。 どちらでもない場合<see cref="P:AntDesign.FormItem.Label" />または<see cref="P:AntDesign.FormItem.LabelTemplate" />が提供されている場合、DisplayName属性値またはフィールド名が (この順序で) 使用されます。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Name">
      <summary v="3QBgnF" i="0">
フォームアイテムの名前を特定します。 また、モデルのプロパティをバインドするためのメンバーパスとしても使用できます。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.NoStyle">
      <summary v="3IR3M8" i="0">
Trueのときにスタイルがない、純粋なフィールドコントロールとして使用されます
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Required">
      <summary v="2ciJHa" i="0">
検証の目的で必要に応じてこのアイテムをマークする
</summary>
    </member>
    <member name="P:AntDesign.FormItem.Rules">
      <summary v="3ypAhl" i="0">
このアイテムに適用する検証ルール
</summary>
    </member>
    <member name="P:AntDesign.FormItem.ShowFeedbackOnError">
      <summary v="O1HvB" i="0">
エラーにフィードバックアイコンを表示するかどうか。 Falseに設定すると、フィールドがエラー状態であってもアイコンは表示されません。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.ValidateStatus">
      <summary v="1lJV5K" i="0">
検証ステータスが設定されていない場合、検証ルールに従って自動的に生成されます
</summary>
    </member>
    <member name="P:AntDesign.FormItem.WrapperCol">
      <summary v="3JEIvN" i="0">
入力要素のラッパーのレイアウトを制御します。 さまざまな画面サイズの幅を設定するためによく使用されます。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.WrapperColOffset">
      <summary v="11w8hO" i="0">
取得/設定<c>オフセット</c>上のプロパティ<see cref="P:AntDesign.FormItem.WrapperColOffset" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.FormItem.WrapperColSpan">
      <summary v="3JCOYd" i="0">
取得/設定<c>スパン</c>上のプロパティ<see cref="P:AntDesign.FormItem.WrapperCol" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Array">
      <summary v="26nM3x" i="0">
配列型のメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Date">
      <summary v="2r4JC7" i="0">
日付タイプのメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Default">
      <summary v="4SZJly" i="0">
デフォルトのジェネリック検証エラーメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Enum">
      <summary v="t7fMZ" i="0">
Enumルールのデフォルトの検証メッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Number">
      <summary v="3nwDNJ" i="0">
文字列型のメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Pattern">
      <summary v="2kaoLJ" i="0">
パターン検証ルールのメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Required">
      <summary v="3MctTm" i="0">
必須ルールのデフォルト検証メッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.String">
      <summary v="3nwDNJ" i="0">
文字列型のメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Types">
      <summary v="12Pz3l" i="0">
フィールドのタイプが期待されるタイプと一致しない場合のメッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidateErrorMessages.Whitespace">
      <summary v="2OACdj" i="0">
Whitespaceルールのデフォルトの検証メッセージ
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.DefaultField">
      <summary v="4YhX7o" i="0">
すべての配列要素のルールを検証します。 有効<see cref="P:AntDesign.FormValidationRule.Type" />S: 配列。(<c>フォームアイテム</c>現在サポートされていません)
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Enum">
      <summary v="hOZvb" i="0">
値が指定されたenum型であることを確認します。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Fields">
      <summary v="1B6BNd" i="0">
子要素のルールを検証します。 有効<see cref="P:AntDesign.FormValidationRule.Type" />S: 配列、オブジェクト (<c>フォームアイテム</c>現在サポートされていません)
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Len">
      <summary v="157HF9" i="0">
長さを確認します。 有効<see cref="P:AntDesign.FormValidationRule.Type" />S: String、Number、またはArray。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Max">
      <summary v="kqvo8" i="0">
長さの確認はこの数以下です。 有効<see cref="P:AntDesign.FormValidationRule.Type" />S: String、Number、またはArray。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Message">
      <summary v="yBQIK" i="0">
カスタムエラーメッセージ。 提供されない場合は自動生成されます。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Min">
      <summary v="3WGoC4" i="0">
長さを確認するには、この数以上です。 有効<see cref="P:AntDesign.FormValidationRule.Type" />S: String、Number、またはArray。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.OneOf">
      <summary v="1EC7Yk" i="0">
値が指定された値にあるかどうか
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Pattern">
      <summary v="2rANEb" i="0">
値を検証すると、正規表現のパターンが渡されます。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Range">
      <summary v="YR1aY" i="0">
値が指定された範囲内にあることを確認します
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Required">
      <summary v="2voiGS" i="0">
フィールドを必要とする
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Transform">
      <summary v="xW7gK" i="0">
検証を実行する前に呼び出される変換関数。 戻り値は検証を実行します。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Type">
      <summary v="2vA6P4" i="0">
フォームフィールドのタイプ。 「」をご参照ください。<see cref="T:AntDesign.FormFieldType" />すべての可能な値に対して
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.ValidationAttribute">
      <summary v="1YIhEY" i="0">
指定された属性を使用して値を検証します。
</summary>
    </member>
    <member name="P:AntDesign.FormValidationRule.Validator">
      <summary v="3a51oY" i="0">
カスタム検証機能
</summary>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.Definitions">
      <summary v="1ORrMe" i="0">
各列を定义するアクション
</summary>
      <param name="propertyName" v="3HDKAv" i="0">列をバインドするプロパティの名前。</param>
      <param name="column" v="3n42MC" i="0">列インスタンスは、具体的な列型に明示的にキャストする必要があります。</param>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.HideColumnsByName">
      <summary v="Ree44" i="0">
プロパティ名で列を非表示にします。
</summary>
    </member>
    <member name="P:AntDesign.GenerateColumns`1.Range">
      <summary v="3qtd4o" i="0">
表示する必要がある列の範囲を特定します。
</summary>
    </member>
    <member name="P:AntDesign.Header.ChildContent">
      <summary v="4bqEO7" i="0">
内部コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Icon.Alt">
      <summary v="10HuhZ" i="0">
アイコンの代替テキスト
</summary>
    </member>
    <member name="P:AntDesign.Icon.AriaLabel">
      <summary v="3lc7zV" i="0">
Aria-label属性の値を設定します。
</summary>
    </member>
    <member name="P:AntDesign.Icon.Component">
      <summary v="4fknUN" i="0">
カスタムアイコンとしてレンダリングするコンポーネント
</summary>
    </member>
    <member name="P:AntDesign.Icon.Fill">
      <summary v="2koOx6" i="0">
アイコンのSVGの値を埋める
</summary>
      <default value="currentColor" />
    </member>
    <member name="P:AntDesign.Icon.Height">
      <summary v="1jEJav" i="0">
アイコンの高さ
</summary>
      <default value="1em" />
    </member>
    <member name="P:AntDesign.Icon.IconFont">
      <summary v="2Vr5Nx" i="0">
のタイプは、<see cref="T:AntDesign.IconFont" /></summary>
    </member>
    <member name="P:AntDesign.Icon.OnClick">
      <summary v="4QoFth" i="0">
アイコンのOnClickイベント
</summary>
    </member>
    <member name="P:AntDesign.Icon.Role">
      <summary v="25YJGp" i="0">
アニメーションでアイコンを回転させる
</summary>
      <default value="img" />
    </member>
    <member name="P:AntDesign.Icon.Rotate">
      <summary v="4eYRAl" i="0">
N度回転-IE9では動作しません
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Icon.Spin">
      <summary v="25YJGp" i="0">
アニメーションでアイコンを回転させる
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Icon.StopPropagation">
      <summary v="21omOB" i="0">
アイコンのクリックイベントの伝播を停止する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Icon.TabIndex">
      <summary v="2V9EpG" i="0">
ラップスパンのためのTabindex
</summary>
    </member>
    <member name="P:AntDesign.Icon.Theme">
      <summary v="2xXhYa" i="0">
アイコンのテーマ-「fill」 | 「アウトライン」 | 「2つ」;
</summary>
      <default value="IconThemeType.Outline" />
    </member>
    <member name="P:AntDesign.Icon.TwotoneColor">
      <summary v="3O0TYt" i="0">
TwoToneテーマを使用するときは、原色を指定します。 他のテーマはこのパラメータを無視します。
</summary>
    </member>
    <member name="P:AntDesign.Icon.Type">
      <summary v="4ey7Ul" i="0">
表示するアイコン名
</summary>
    </member>
    <member name="P:AntDesign.Icon.Width">
      <summary v="2qUkbY" i="0">
アイコンの幅
</summary>
      <default value="1em" />
    </member>
    <member name="P:AntDesign.IFeedbackRef.ModalTemplate">
      <summary v="BHg9M" i="0">
フィードバック内部コンポーネントのイベントを取得する
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.OnClose">
      <summary v="2JaQDk" i="0">
フィードバック終了
</summary>
    </member>
    <member name="P:AntDesign.IFeedbackRef.OnOpen">
      <summary v="49INqh" i="0">
フィードバックオープン
</summary>
    </member>
    <member name="P:AntDesign.IForm.EditContext">
      <summary v="z1gfH" i="0">
フォームから現在のEditContextを取得します。
</summary>
    </member>
    <member name="P:AntDesign.IForm.IsModified">
      <summary v="4RJ8hI" i="0">
フォームが変更されているかどうか。
</summary>
    </member>
    <member name="P:AntDesign.IForm.Model">
      <summary v="kFSC0" i="0">
フォームがバインドされているデータオブジェクト。
</summary>
    </member>
    <member name="P:AntDesign.IForm.Name">
      <summary v="zR1Ov" i="0">
フォームの名前。
</summary>
    </member>
    <member name="P:AntDesign.Image.Alt">
      <summary v="1BWz2X" i="0">
画像の代替テキスト
</summary>
    </member>
    <member name="P:AntDesign.Image.Fallback">
      <summary v="4JfU9S" i="0">
イメージの読み込みに失敗した場合のフォールバック
</summary>
    </member>
    <member name="P:AntDesign.Image.Height">
      <summary v="4GSy3p" i="0">
画像の高さ
</summary>
    </member>
    <member name="P:AntDesign.Image.Locale">
      <summary v="kEbhD" i="0">
コンポーネントのロケールデータ
</summary>
    </member>
    <member name="P:AntDesign.Image.OnClick">
      <summary v="32SRkB" i="0">
画像クリックで実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Image.Placeholder">
      <summary v="1ljUwD" i="0">
プレースホルダーの読み込み
</summary>
    </member>
    <member name="P:AntDesign.Image.Preview">
      <summary v="Jxhp6" i="0">
プレビュー機能の有効化または無効化
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Image.PreviewSrc">
      <summary v="49DMHG" i="0">
プレビュー画像ソース
</summary>
    </member>
    <member name="P:AntDesign.Image.PreviewVisible">
      <summary v="272j96" i="0">
プレビューが表示されているかどうか
</summary>
    </member>
    <member name="P:AntDesign.Image.PreviewVisibleChanged">
      <summary v="2MBaTP" i="0">
コールバックが実行されるとき<see cref="P:AntDesign.Image.PreviewVisible" />変更
</summary>
    </member>
    <member name="P:AntDesign.Image.Src">
      <summary v="2MruVO" i="0">
画像ソース
</summary>
    </member>
    <member name="P:AntDesign.Image.Width">
      <summary v="3FH5eE" i="0">
画像の幅
</summary>
    </member>
    <member name="P:AntDesign.ImagePreviewGroup.ChildContent">
      <summary v="yr7kY" i="0">
グループのコンテンツ。 通常は含まれます<see cref="T:AntDesign.Image" />要素を使用します。
</summary>
    </member>
    <member name="P:AntDesign.ImagePreviewGroup.PreviewVisible">
      <summary v="4ebIx2" i="0">
プレビュー画像を開くかどうか。 双方向バインディング。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.ImagePreviewGroup.PreviewVisibleChanged">
      <summary v="3YqJna" i="0">
コールバックが実行されるとき<see cref="P:AntDesign.ImagePreviewGroup.PreviewVisible" />変更
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AddOnAfter">
      <summary v="8vf60" i="0">
入力フィールドの後 (右側) に表示されるラベルテキスト。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AddOnBefore">
      <summary v="36H0rJ" i="0">
入力フィールドの前 (左側) に表示されるラベルテキスト。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AllowClear">
      <summary v="gEOSA" i="0">
クリアなアイコンで入力コンテンツを削除できるようにする
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AutoComplete">
      <summary v="1aFWnI" i="0">
入力HTML要素のオートコンプリート属性を制御します。
デフォルト = true
</summary>
    </member>
    <member name="P:AntDesign.Input`1.AutoFocus">
      <summary v="eEdOD" i="0">
入力のオートフォーカスかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Input`1.BindOnInput">
      <summary v="2efoKI" i="0">
入力時に値を変更するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Bordered">
      <summary v="2zghRL" i="0">
ボーダースタイルがあるかどうか
</summary>
    </member>
    <member name="P:AntDesign.Input`1.DebounceMilliseconds">
      <summary v="3QPF7H" i="0">
ユーザーが停止するまでKeyUpイベントの処理を遅らせる
所定の時間のタイピング。 デフォルトは250 msです。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.DefaultValue">
      <summary v="1t7Dcf" i="0">
初期入力コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Disabled">
      <summary v="2pb5l" i="0">
入力が無効かどうか。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.InputElementSuffixClass">
      <summary v="2XanWf" i="0">
入力要素クラスに追加されるCssクラス
最後のクラスエントリとして
</summary>
    </member>
    <member name="P:AntDesign.Input`1.MaxLength">
      <summary v="lftDP" i="0">
最大の長さ
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnBlur">
      <summary v="ZLSVg" i="0">
入力がフォーカスを失うときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnChange">
      <summary v="ptUEL" i="0">
コンテンツが変更されたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnClear">
      <summary v="3PGUwN" i="0">
「ClearIcon」をクリックしてコンテンツがクリアされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnFocus">
      <summary v="44qPny" i="0">
入力がフォーカスを受け取ったときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnInput">
      <summary v="2OIWbo" i="0">
値が入力されたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnkeyDown">
      <summary v="3ksyLG" i="0">
キーが押されたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnkeyUp">
      <summary v="2t1JgE" i="0">
キーがリリースされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnMouseUp">
      <summary v="1ZcYJf" i="0">
マウスボタンが解放されたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Input`1.OnPressEnter">
      <summary v="1KYPr0" i="0">
Enterキーが押されたときにトリガーされるコールバック関数
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Placeholder">
      <summary v="4Bbqr0" i="0">
入力フィールドの期待値を説明するプロンプト情報を提供する
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Prefix">
      <summary v="1gKiV2" i="0">
入力のプレフィックスアイコン。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.ReadOnly">
      <summary v="5klsi" i="0">
存在する場合、入力フィールドが読み取り専用であることを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.ShowCount">
      <summary v="AEzFb" i="0">
入力の文字数を表示する
</summary>
    </member>
    <member name="P:AntDesign.Input`1.StopPropagation">
      <summary v="35yoCv" i="0">
Onclickおよびblurイベントの伝播を制御します。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Suffix">
      <summary v="e99Ci" i="0">
入力のサフィックスアイコン。
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Type">
      <summary v="31w74n" i="0">
入力のタイプは以下を参照してください。MDN (type = 'textarea' の代わりに 'Input.TextArea' を使用)
</summary>
    </member>
    <member name="P:AntDesign.Input`1.Width">
      <summary v="1RMHwt" i="0">
入力の幅
</summary>
    </member>
    <member name="P:AntDesign.Input`1.WrapperStyle">
      <summary v="2dMr07" i="0">
ラッパーのCSSスタイルを設定します。 コンポーネントが表示されている場合に使用されます: プレフィックス/接尾辞
またはparamterセットがあります<seealso cref="P:AntDesign.Input`1.AllowClear" />またはコンポーネント用:<see cref="T:AntDesign.InputPassword" />
と<see cref="T:AntDesign.Search" />を参照してください。 これらの場合、html span要素が使用されます
HTML入力要素をラップします。
<seealso cref="P:AntDesign.Input`1.WrapperStyle" />はスパン要素で使用されます。
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.ChildContent">
      <summary v="42rJBC" i="0">
InputGroupによってラップされたコンテンツ。
</summary>
    </member>
    <member name="P:AntDesign.InputGroup.Compact">
      <summary v="RmJZU" i="0">
コンパクトスタイルを使用するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.InputGroup.Size">
      <summary v="46I7pX" i="0">
InputGroupのサイズは、含まれる入力フィールドのサイズを指定する。
利用可能: 大きいデフォルト小さい
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Bordered">
      <summary v="2piZbF" i="0">
ボーダーを表示するかどうか
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.DefaultValue">
      <summary v="42sCPk" i="0">
初期値
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Disabled">
      <summary v="3akgvh" i="0">
入力を無効にするかどうか
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Format">
      <summary v="4XJP71" i="0">
フォーマッターから数値を抽出するパーサー
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Formatter">
      <summary v="3TwQpv" i="0">
表示するための数値から文字列までの要素
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Max">
      <summary v="1612iu" i="0">
最大のアロアブルナンバー
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.MaxLength">
      <summary v="Jsrs4" i="0">
入力の最大長
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.InputNumber`1.Min">
      <summary v="1BMdya" i="0">
最小許容数
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.OnChange">
      <summary v="3R1heX" i="0">
入力値が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.OnFocus">
      <summary v="4LPnxj" i="0">
入力がフォーカスを獲得したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Parser">
      <summary v="2ScB9J" i="0">
フォーマッターから抽出された値を指定します。
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.PlaceHolder">
      <summary v="1Wpyiz" i="0">
プレースホルダーの値
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Precision">
      <summary v="34OkP8" i="0">
数と表示に使用する小数点以下の桁数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.InputNumber`1.Prefix">
      <summary v="1KhT15" i="0">
入力へのプレフィックスの内容の設定
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Step">
      <summary v="1Qk5vQ" i="0">
現在の値が入力矢印で増加または減少する数。 整数または小数にすることができます。
</summary>
    </member>
    <member name="P:AntDesign.InputNumber`1.Width">
      <summary v="1RMHwt" i="0">
入力の幅
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.IconRender">
      <summary v="4TMYeJ" i="0">
カスタムアイコンのレンダリング
</summary>
    </member>
    <member name="P:AntDesign.InputPassword.ShowPassword">
      <summary v="39Vatj" i="0">
パスワードを表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.InputPassword.VisibilityToggle">
      <summary v="10ZHRq" i="0">
パスワード表示の切り替えボタンを表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Internal.Overlay.HiddenMode">
      <summary v="3QUJQe" i="0">
デフォルトでは、オーバーレイがない場合、オーバーレイはコンテンツをレンダリングしません
活性化 (少なくとも1回表示)。 HiddenMode = trueの設定
レンダリングプロセスを通过します。
ユースケース: コンポーネントを選択します。<see cref="T:AntDesign.SimpleSelectOption" />または<see cref="T:AntDesign.SelectOption`2" />
HiddenMode = trueが必要なため、選択オプションが初期化され、
潜在的なデフォルトは適切にレンダリングできます。
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.HorizontalOffset">
      <summary v="3vWYjR" i="0">
トリガーとオーバーレイ間の水平オフセット、デフォルトは4
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.ParentTrigger">
      <summary v="48SclE" i="0">
ネストされたオーバーレイ (たとえば、メニュー-&gt; サブメニュー) で使用されます。
トリガーは別のオーバーレイです。
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.Trigger">
      <summary v="4bvUky" i="0">
オーバーレイをトリガーするコンポーネントを表示します。
</summary>
    </member>
    <member name="P:AntDesign.Internal.Overlay.VerticalOffset">
      <summary v="1HnpzC" i="0">
トリガーとオーバーレイ間の垂直オフセット、デフォルトは4
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.BoundaryAdjustMode">
      <summary v="KChSv" i="0">
オーバーレイ調整戦略 (たとえば、ブラウザのサイズ変更が行われている場合)。 チェック
詳細はenum。
</summary>
      <default value="TriggerBoundaryAdjustMode.InView" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.ChildContent">
      <summary v="1gMxc" i="0">
トリガー (リンク、ボタンなど)
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.ComplexAutoCloseAndVisible">
      <summary v="2fDqL" i="0">
オートオフとVisibleコントロールの両方を閉じる必要があるかどうか。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Disabled">
      <summary v="2QRQsZ" i="0">
トリガーが無効かどうか。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.HiddenMode">
      <summary v="wznUH" i="0">
オーバーレイコンポーネントに転送されるプロパティ。 オーバーレイに相談する
より詳細な説明のためのプロパティ。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.InlineFlexMode">
      <summary v="1XN23m" i="0">
(Unboundでは使用されません) ラッピングdivスタイルを 'display: inline-flex;'に設定します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.IsButton">
      <summary v="25Xeqt" i="0">
ボタンのように行動する: クリックしたときにOnClickを呼び出す
(OnClickDivがオーバーライドされ、baseを呼び出さない場合を除きます)。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnClick">
      <summary v="3d74MK" i="0">
Triggerがクリックされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMaskClick">
      <summary v="ikdSq" i="0">
コールバック-トリガートリガーのOnMouseUpイベントに相当します。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMouseEnter">
      <summary v="35YiFL" i="0">
マウスがトリガー境界に入ったときのコールバック。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnMouseLeave">
      <summary v="1VUc5I" i="0">
マウスがトリガー境界を離れるときのコールバック。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnOverlayHiding">
      <summary v="24gkPj" i="0">
オーバーレイが隠れているときのコールバック。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OnVisibleChange">
      <summary v="3buQek" i="0">
オーバーレイの可視性が変化しているときのコールバック。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Overlay">
      <summary v="2RFxLE" i="0">
オーバーレイコンテンツ (トリガーが有効になった後にレンダリングされるもの)
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayClassName">
      <summary v="3QEUgi" i="0">
Overlayコンテナカスタムcssクラス。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayEnterCls">
      <summary v="2LgbEv" i="0">
オーバーレイが表示されたときにオーバーレイに追加されたCssクラス。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayHiddenCls">
      <summary v="12iLR6" i="0">
オーバーレイが非表示のときにオーバーレイに追加されるCssクラス。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayLeaveCls">
      <summary v="1PwGmh" i="0">
オーバーレイが非表示のときにオーバーレイに追加されたCssクラス。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.OverlayStyle">
      <summary v="2XefjF" i="0">
オーバーレイdivに追加されるCssスタイル。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Placement">
      <summary v="GYoId" i="0">
ターゲットに対するドロップダウンオーバーレイの位置。
することができます: トップ、左、右、下、トップ左、トップ右、BottomLeft、BottomRight、LeftBottom、RightTop、RightBottom
</summary>
      <default value="PlacementType.BottomLeft" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.PlacementCls">
      <summary v="WTn3s" i="0">
「Placement」パラメーターに基づくデフォルトの配置クラスをオーバーライドします。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.PopupContainerSelector">
      <summary v="2eHWNH" i="0">
オーバーレイのコンテナになるものを定義します。
使用例: オーバーレイを
スクロール可能なエリア。
</summary>
      <default value="body" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Trigger">
      <summary v="40VgVu" i="0">
トリガーモード。 配列を渡すことで複数にすることができます。
</summary>
      <default value="TriggerType.Hover" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.TriggerCls">
      <summary v="3T7wiN" i="0">
トリガー要素CSSクラス。
</summary>
      <default value="ant-dropdown-trigger" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.TriggerReference">
      <summary v="1DTqfD" i="0">
トリガー要素への参照を手動で設定します。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Unbound">
      <summary v="2o8VWA" i="0">
ChildElement with ElementReferenceは、divのラッピングを回避するために設定されています。
</summary>
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.Visible">
      <summary v="18BKHv" i="0">
オーバーレイの実行可能性を切り替えます。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Internal.OverlayTrigger.VisibleChanged">
      <summary v="1mRbGW" i="0">
可視性が変更されたときのコールバック。
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef.OnCancel">
      <summary v="3A1HW6" i="0">
キャンセルボタンまたはより近いクリック時に呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef.OnOk">
      <summary v="pmyYN" i="0">
[OK] ボタンをクリックしたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef`1.OnCancel">
      <summary v="uSJz1" i="0">
キャンセルボタンまたはより近いクリック時に呼び出す
</summary>
    </member>
    <member name="P:AntDesign.IOkCancelRef`1.OnOk">
      <summary v="xi0GX" i="0">
[OK] ボタンをクリックしたときに呼び出す
</summary>
    </member>
    <member name="P:AntDesign.Layout.ChildContent">
      <summary v="4bqEO7" i="0">
内部コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Column">
      <summary v="2yHOkI" i="0">
グリッドの列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Gutter">
      <summary v="lrZLp" i="0">
グリッド間の間隔
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Lg">
      <summary v="1cG3ru" i="0">
グリッドの &ge; 992px列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Md">
      <summary v="2JROGw" i="0">
グリッドの &ge; 768px列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Sm">
      <summary v="eWhMM" i="0">
グリッドの &ge; 576px列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Xl">
      <summary v="xG0Zl" i="0">
グリッドの &ge; 1200px列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Xs">
      <summary v="4AyrfH" i="0">
グリッドの &lt;576px列
</summary>
    </member>
    <member name="P:AntDesign.ListGridType.Xxl">
      <summary v="20jLOR" i="0">
グリッドの &ge; 1600px列
</summary>
    </member>
    <member name="P:AntDesign.ListItem.Actions">
      <summary v="3Rv1Eg" i="0">
リストアイテムのアクションの内容。 ItemLayoutが垂直の場合、下部にコンテンツが表示され、それ以外の場合は右端にコンテンツが表示されます。
</summary>
    </member>
    <member name="P:AntDesign.ListItem.ChildContent">
      <summary v="cIZCH" i="0">
アイテムの主なコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.ListItem.Extra">
      <summary v="EjRd1" i="0">
リストアイテムの追加コンテンツ。 ItemLayoutが垂直の場合、右側にコンテンツが表示され、それ以外の場合は右端にコンテンツが表示されます。
</summary>
    </member>
    <member name="P:AntDesign.ListItem.NoFlex">
      <summary v="2aIBXK" i="0">
アイテムにflexを使用するかどうか。 Trueの場合、flexは使用しません。
</summary>
    </member>
    <member name="P:AntDesign.ListItem.OnClick">
      <summary v="4ZeOz1" i="0">
アイテムがクリックされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.Avatar">
      <summary v="1V3DSW" i="0">
リストアイテムのアバター
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.AvatarTemplate">
      <summary v="3g8dON" i="0">
リストアイテムのアバターの内容。 優先順位を引き継ぐ<see cref="P:AntDesign.ListItemMeta.Avatar" /></summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.Description">
      <summary v="3W6x2d" i="0">
The description ofリストアイテム
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.DescriptionTemplate">
      <summary v="3M9tM9" i="0">
リストアイテムの説明内容。 優先順位を引き継ぐ<see cref="P:AntDesign.ListItemMeta.Description" /></summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.Title">
      <summary v="76EDB" i="0">
リストアイテムのタイトル
</summary>
    </member>
    <member name="P:AntDesign.ListItemMeta.TitleTemplate">
      <summary v="2LZGTk" i="0">
リストアイテムのタイトルコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.ListItemMeta.Title" /></summary>
    </member>
    <member name="P:AntDesign.Mentions.LoadOptions">
      <summary v="27wMxz" i="0">
ユーザーが @ シンボルの後に値を入力したときに表示するための言及オプションを動的にロードする
</summary>
    </member>
    <member name="P:AntDesign.Menu.Accordion">
      <summary v="f14MC" i="0">
アコーディオンモード。 Trueの場合、一度に開くことができるサブメニューは1つだけです。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Menu.Animation">
      <summary v="1N1gTG" i="0">
アニメーションの有効化または無効化
</summary>
    </member>
    <member name="P:AntDesign.Menu.AutoCloseDropdown">
      <summary v="2UhE9I" i="0">
アイテムをクリックしたときにドロップダウンを閉じる
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Menu.ChildContent">
      <summary v="4SpSZe" i="0">
メニューの内容。 MenuItem要素を含む必要があります。
</summary>
    </member>
    <member name="P:AntDesign.Menu.DefaultOpenKeys">
      <summary v="2lxAur" i="0">
デフォルトで開かれたサブメニューのキーを持つ配列
</summary>
    </member>
    <member name="P:AntDesign.Menu.DefaultSelectedKeys">
      <summary v="36MfIM" i="0">
デフォルトで選択されたメニュー項目のキーを持つ配列
</summary>
    </member>
    <member name="P:AntDesign.Menu.InlineCollapsed">
      <summary v="2JiYRd" i="0">
メニューがインラインモードのときに折りたたまれたステータスを指定します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Menu.InlineIndent">
      <summary v="46JFye" i="0">
各レベルのインラインメニュー项目のインデント (ピクセル単位)
</summary>
      <default value="24" />
    </member>
    <member name="P:AntDesign.Menu.Mode">
      <summary v="2dRL9C" i="0">
メニューのタイプ
</summary>
      <default value="MenuMode.Vertical" />
    </member>
    <member name="P:AntDesign.Menu.Multiple">
      <summary v="3ZzXs2" i="0">
複数のアイテムの選択を可能にします
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Menu.OnMenuItemClicked">
      <summary v="1eFRz7" i="0">
メインメニュー项目がクリックされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Menu.OnOpenChange">
      <summary v="3A0FP7" i="0">
開いているサブメニューが変更されたときのコールバック。 開いているキーの配列を渡しました。
</summary>
    </member>
    <member name="P:AntDesign.Menu.OnSubmenuClicked">
      <summary v="3n2qYO" i="0">
サブメニューがクリックされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Menu.OpenKeys">
      <summary v="44j6TW" i="0">
現在開いているサブメニューのキーを持つ配列
</summary>
    </member>
    <member name="P:AntDesign.Menu.OpenKeysChanged">
      <summary v="3A0FP7" i="0">
開いているサブメニューが変更されたときのコールバック。 開いているキーの配列を渡しました。
</summary>
    </member>
    <member name="P:AntDesign.Menu.Selectable">
      <summary v="3Or9Bv" i="0">
メニュー項目を選択できます。 偽の場合、OnClickの後にメニュー項目が選択されません。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Menu.SelectedKeys">
      <summary v="1FFvn6" i="0">
現在選択されているメニュー項目のキーを持つ配列
</summary>
    </member>
    <member name="P:AntDesign.Menu.SelectedKeysChanged">
      <summary v="qYNe9" i="0">
選択したアイテムが変更されたときのコールバック。 開いているキーの配列を渡しました。
</summary>
    </member>
    <member name="P:AntDesign.Menu.ShowCollapsedTooltip">
      <summary v="3Kif8z" i="0">
折りたたまれたメニューにツールチップを表示する
</summary>
    </member>
    <member name="P:AntDesign.Menu.Theme">
      <summary v="ShPcT" i="0">
メニューのカラーテーマ
</summary>
      <default value="MenuTheme.Light" />
    </member>
    <member name="P:AntDesign.Menu.TriggerSubMenuAction">
      <summary v="2Cdqoh" i="0">
サブメニューのオープン/クローズをトリガーできるアクション
</summary>
      <default value="Trigger.Hover" />
    </member>
    <member name="P:AntDesign.MenuItem.ChildContent">
      <summary v="1mo04R" i="0">
表示タイトル
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.Disabled">
      <summary v="33jili" i="0">
メニューアイテムが無効かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.MenuItem.Icon">
      <summary v="1RX7Qj" i="0">
メニュー项目のアイコン
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.IconTemplate">
      <summary v="3qw2if" i="0">
IconとIconTemplateが同時に設定されている場合は、IconTemplateが優先されます。
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.Key">
      <summary v="1EY7q0" i="0">
メニュー项目のユニークなID
</summary>
      <default value="Uniquely Generated ID" />
    </member>
    <member name="P:AntDesign.MenuItem.OnClick">
      <summary v="9EfIX" i="0">
アイテムがクリックされたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.RouterLink">
      <summary v="eb4ZX" i="0">
Hrefルート
</summary>
    </member>
    <member name="P:AntDesign.MenuItem.RouterMatch">
      <summary v="17cbW4" i="0">
NavLinkのURLマッチング動作を変更します。
</summary>
      <default value="NavLinkMatch.All" />
    </member>
    <member name="P:AntDesign.MenuItem.Title">
      <summary v="BxZlz" i="0">
メニュー项目のタイトル
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.ChildContent">
      <summary v="2Gnqmp" i="0">
SubMenusまたはメニューアイテム
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.Key">
      <summary v="4ET1jk" i="0">
一意のID
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.Title">
      <summary v="1mCFtT" i="0">
グループのタイトル
</summary>
    </member>
    <member name="P:AntDesign.MenuItemGroup.TitleTemplate">
      <summary v="1mCFtT" i="0">
グループのタイトル
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.ActiveClass">
      <summary v="2vOtf4" i="0">
NavLinkに適用されるCSSクラス名を取得または設定します。
現在のルートはNavLink hrefと一致します。
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.ChildContent">
      <summary v="23NMCf" i="0">
コンポーネントの子コンテンツを取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.MenuLink.Match">
      <summary v="3aS9Lu" i="0">
URL一致の動作を表す値を取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Content">
      <summary v="2DU392" i="0">
メッセージの内容
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Duration">
      <summary v="2VrphD" i="0">
自動却下までの時間 (秒単位)
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Icon">
      <summary v="2waSLe" i="0">
メッセージのアイコン
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Key">
      <summary v="2AqDBg" i="0">
コンポーネントの一意の識別子
</summary>
    </member>
    <member name="P:AntDesign.MessageConfig.Type">
      <summary v="4EOGvC" i="0">
メッセージのスタイル
</summary>
    </member>
    <member name="P:AntDesign.MessageItem.Config">
      <summary v="3zhdBm" i="0">
メッセージ設定
</summary>
    </member>
    <member name="P:AntDesign.Modal.AfterClose">
      <summary v="22x97b" i="0">
モーダルが閉じたときに呼び出される関数を指定する
</summary>
    </member>
    <member name="P:AntDesign.Modal.BodyStyle">
      <summary v="20QVv7" i="0">
モーダルボディ要素のボディスタイル。 高さ、パディングなど
</summary>
    </member>
    <member name="P:AntDesign.Modal.CancelButtonProps">
      <summary v="43SP5U" i="0">
キャンセルボタンの小道具
</summary>
    </member>
    <member name="P:AntDesign.Modal.CancelText">
      <summary v="36siBe" i="0">
キャンセルボタンのテキストまたはRenderFragment、それはModalLocaleをオーバーライドします
</summary>
    </member>
    <member name="P:AntDesign.Modal.Centered">
      <summary v="4ae1Lx" i="0">
中央
</summary>
    </member>
    <member name="P:AntDesign.Modal.ChildContent">
      <summary v="2GRB5G" i="0">
子コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Modal.Closable">
      <summary v="6Ku7u" i="0">
モーダルダイアログの右上に閉じる (x) ボタンが表示されているかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.CloseIcon">
      <summary v="1Bc5mm" i="0">
より近いアイコンRenderFragment、デフォルトは "X" です
</summary>
      <default value="close-outline" />
    </member>
    <member name="P:AntDesign.Modal.ConfirmLoading">
      <summary v="3IUGTG" i="0">
OKボタンの読み込み視覚効果を適用するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Modal.DefaultMaximized">
      <summary v="iMY02" i="0">
コンポーネントの初期化中にモーダルを最大化すると、最大値は無視されます。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Modal.DestroyOnClose">
      <summary v="3L0ice" i="0">
OnCloseで子コンポーネントをマウント解除するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Modal.Draggable">
      <summary v="2CuRqx" i="0">
モーダルダイアログボックスをドラッグするかどうか
</summary>
    </member>
    <member name="P:AntDesign.Modal.DragInViewport">
      <summary v="4eoCF0" i="0">
ビューポート内でのみドラッグアンドドロップ
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.Footer">
      <summary v="geWVh" i="0">
フッターのコンテンツ、デフォルトのボタンが不要な場合はフッター = nullとして設定
</summary>
    </member>
    <member name="P:AntDesign.Modal.ForceRender">
      <summary v="2f0TiM" i="0">
開く前にモーダルドームを強制的にレンダリングするかどうか。
</summary>
    </member>
    <member name="P:AntDesign.Modal.GetContainer">
      <summary v="18bBhe" i="0">
モーダル親DOMを取得または設定します。デフォルトはnullです。これはdocument.bodyを指定しています。
</summary>
    </member>
    <member name="P:AntDesign.Modal.Header">
      <summary v="2AdhVw" i="0">
ヘッダーの内容
</summary>
    </member>
    <member name="P:AntDesign.Modal.Keyboard">
      <summary v="4DS9c2" i="0">
サポートプレスescを閉じるかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.Locale">
      <summary v="8rCHK" i="0">
モーダルロケール
</summary>
      <default value="LocaleProvider.CurrentLocacle.Modal" />
    </member>
    <member name="P:AntDesign.Modal.Mask">
      <summary v="4N1u35" i="0">
ショーマスクかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.MaskClosable">
      <summary v="1DBAFK" i="0">
マスク (モーダルの外側の領域) をクリックしたときにモーダルダイアログを閉じるかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Modal.MaskStyle">
      <summary v="37Y5Kb" i="0">
モーダルのマスク要素のスタイル
</summary>
    </member>
    <member name="P:AntDesign.Modal.MaxBodyHeight">
      <summary v="RA58v" i="0">
最大モーダルコンテンツの身長
</summary>
    </member>
    <member name="P:AntDesign.Modal.Maximizable">
      <summary v="4CJFl8" i="0">
ショーモーダル最大化ボタン
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Modal.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
モーダルが通常の状態にあるときの最大化ボタンのアイコン
</summary>
      <default value="fullscreen-outline" />
    </member>
    <member name="P:AntDesign.Modal.OkButtonProps">
      <summary v="y5TMV" i="0">
OKボタンの小道具
</summary>
    </member>
    <member name="P:AntDesign.Modal.OkText">
      <summary v="3XDkqM" i="0">
[OK] ボタンのRenderFragmentのテキストは、ModalLocaleをオーバーライドします
</summary>
      <default value="null" />
    </member>
    <member name="P:AntDesign.Modal.OkType">
      <summary v="1XT62s" i="0">
OKボタンのボタンタイプ
</summary>
      <default value="ButtonType.Primary" />
    </member>
    <member name="P:AntDesign.Modal.OnCancel">
      <summary v="1CxuiP" i="0">
ユーザーがマスクをクリックしたり、右上のボタンを閉じたり、 [キャンセル] ボタンをクリックしたときに呼び出される関数を指定します。
</summary>
    </member>
    <member name="P:AntDesign.Modal.OnOk">
      <summary v="1gOn2R" i="0">
ユーザーが [OK] ボタンをクリックしたときに呼び出される関数を指定する
</summary>
    </member>
    <member name="P:AntDesign.Modal.Resizable">
      <summary v="1COtwc" i="0">
Resizable (水平方向のみ)
</summary>
    </member>
    <member name="P:AntDesign.Modal.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
モーダルが最大化されたときの最大化ボタンのアイコン
</summary>
      <default value="fullscreen-exit-outline" />
    </member>
    <member name="P:AntDesign.Modal.Rtl">
      <summary v="MHb3Z" i="0">
はRTL
</summary>
    </member>
    <member name="P:AntDesign.Modal.Title">
      <summary v="3xtZMa" i="0">
モーダルダイアログのタイトル
</summary>
    </member>
    <member name="P:AntDesign.Modal.TitleTemplate">
      <summary v="4O2U5z" i="0">
モーダルダイアログのタイトル。 タイトルよりも優先されます。
</summary>
    </member>
    <member name="P:AntDesign.Modal.Visible">
      <summary v="1nqRXC" i="0">
モーダルダイアログが表示されているかどうか
</summary>
    </member>
    <member name="P:AntDesign.Modal.VisibleChanged">
      <summary v="2xcii5" i="0">
モーダルダイアログが表示されているかどうかにかかわらず、関数の呼び出しを指定する
</summary>
    </member>
    <member name="P:AntDesign.Modal.Width">
      <summary v="3Ed7Ef" i="0">
モーダルダイアログの幅、デフォルト値は520です。
</summary>
      <default value="520" />
    </member>
    <member name="P:AntDesign.Modal.WrapClassName">
      <summary v="3xRJ9X" i="0">
モーダルダイアログのコンテナのクラス名
</summary>
    </member>
    <member name="P:AntDesign.Modal.ZIndex">
      <summary v="10GCuH" i="0">
モーダルのzインデックス
</summary>
      <default value="1000" />
    </member>
    <member name="P:AntDesign.ModalCancelFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalClosingEventArgs.Cancel">
      <summary v="49f55H" i="0">
クロージングをキャンセルするかどうか。
終了をキャンセルする場合はtrueを設定します。デフォルトはfalseです。

となっています。となっています。
</summary>
    </member>
    <member name="P:AntDesign.ModalFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalLocale.CancelText">
      <summary v="3YxACC" i="0">
ボタンテキストをキャンセル
</summary>
    </member>
    <member name="P:AntDesign.ModalLocale.OkText">
      <summary v="1kbJyX" i="0">
OKボタンテキスト
</summary>
    </member>
    <member name="P:AntDesign.ModalOkFooter.ModalProps">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalOptions.AfterClose">
      <summary v="2jjyi0" i="0">
ダイアログが閉じた後のトリガー
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.BodyStyle">
      <summary v="Bh4MH" i="0">
Ant-モーダル-ボディスタイル
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Closable">
      <summary v="122WS7" i="0">
Show ant-modal-closer
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.CloseIcon">
      <summary v="1Bc5mm" i="0">
より近いアイコンRenderFragment、デフォルトは "X" です
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.ConfirmLoading">
      <summary v="3IUGTG" i="0">
OKボタンの読み込み視覚効果を適用するかどうか
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Content">
      <summary v="LVRKT" i="0">
チャイルドコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DefaultMaximized">
      <summary v="iMY02" i="0">
コンポーネントの初期化中にモーダルを最大化すると、最大値は無視されます。
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DestroyOnClose">
      <summary v="45nYFl" i="0">
モーダルが閉じた後にDOMからモーダルを削除するかどうか
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Draggable">
      <summary v="3zmBrO" i="0">
ドラガブルモーダル
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.DragInViewport">
      <summary v="4eoCF0" i="0">
ビューポート内でのみドラッグアンドドロップ
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Footer">
      <summary v="4GmrOX" i="0">
モーダルフッター。 Footer = = nullの場合、ダイアログにはフッターがありません
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Maximizable">
      <summary v="4CJFl8" i="0">
ショーモーダル最大化ボタン
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.MaximizeBtnIcon">
      <summary v="1fdJk" i="0">
モーダルが通常の状態にあるときの最大化ボタンのアイコン
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.OnCancel">
      <summary v="4XxZcU" i="0">
ユーザーがマスク、右上のボタンを閉じる、またはキャンセルボタンをクリックしたときに呼び出される関数を指定します。
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.OnOk">
      <summary v="1gOn2R" i="0">
ユーザーが [OK] ボタンをクリックしたときに呼び出される関数を指定する
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Resizable">
      <summary v="2v6bNP" i="0">
変更可能
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.RestoreBtnIcon">
      <summary v="sygjJ" i="0">
モーダルが最大化されたときの最大化ボタンのアイコン
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Style">
      <summary v="449EWV" i="0">
Ant-モーダルスタイル
</summary>
    </member>
    <member name="P:AntDesign.ModalOptions.Visible">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.ModalOptions.WrapClassName">
      <summary v="3xRJ9X" i="0">
モーダルダイアログのコンテナのクラス名
</summary>
    </member>
    <member name="P:AntDesign.ModalRef.Config">
      <summary v="tybuH" i="0">
モーダルオプション
</summary>
    </member>
    <member name="P:AntDesign.ModalRef`1.OnCancel">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.ModalRef`1.OnOk">
      <inheritdoc />
    </member>
    <member name="P:AntDesign.NotificationConfig.AnimationClass">
      <summary v="jSnlC" i="0">
実行中の実行中の実行中の表示
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Btn">
      <summary v="3rMr6n" i="0">
定自义関闭所
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.ClassName">
      <summary v="JO5pm" i="0">
定义CSSクラス
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.CloseIcon">
      <summary v="3vgdNM" i="0">
定自义関闭図标
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Description">
      <summary v="4XGzTg" i="0">
通知本内事、出选、文字列选択者RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Duration">
      <summary v="4USzIz" i="0">
自动関有有延时、自动関有无、自动関有无、自动関有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Icon">
      <summary v="4Ai0SO" i="0">
定自义図标
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Key">
      <summary v="2OV090" i="0">
当前通知一标志
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Message">
      <summary v="419bj1" i="0">
通知本の标、出选、文字列选択者RenderFragment
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.NotificationType">
      <summary v="1WRYqg" i="0">
通知点左侧的な図の种类型
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Placement">
      <summary v="1Cg6Tf" i="0">
出配置
</summary>
    </member>
    <member name="P:AntDesign.NotificationConfig.Style">
      <summary v="1EFSed" i="0">
定自义内式
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Bottom">
      <summary v="4CcfGP" i="0">
(位) 、 (位位) 、 (位位位)。
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.CloseIcon">
      <summary v="3vgdNM" i="0">
定自义関闭図标
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Duration">
      <summary v="4USzIz" i="0">
自动関有有延时、自动関有无、自动関有无、自动関有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有有
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Placement">
      <summary v="1Cg6Tf" i="0">
出配置
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Rtl">
      <summary v="1mUF1k" i="0">
明明 [RTL]
</summary>
    </member>
    <member name="P:AntDesign.NotificationGlobalConfig.Top">
      <summary v="PvlTX" i="0">
(位位位位) 、 (位位位位位) 、 (位位位位)。
</summary>
    </member>
    <member name="P:AntDesign.NotificationRef.Config">
      <summary v="1axnfs" i="0">
通知ボックスの設定
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.BackIcon">
      <summary v="4F836i" i="0">
戻るボタンのアイコン
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.BackIconTemplate">
      <summary v="iOsTP" i="0">
戻るボタンRenderFragment
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.Ghost">
      <summary v="1YTvWo" i="0">
背景を透明にする
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.PageHeader.OnBack">
      <summary v="terW1" i="0">
クリックしたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderAvatar">
      <summary v="3uTINn" i="0">
アバターセクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderBreadcrumb">
      <summary v="4409WA" i="0">
パン粉セクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderContent">
      <summary v="4eWvLL" i="0">
コンテンツセクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderExtra">
      <summary v="3ceD31" i="0">
タイトルラインの行の終わりにある操作エリア
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderFooter">
      <summary v="1FBfWP" i="0">
フッターセクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderSubtitle">
      <summary v="17U1OJ" i="0">
サブタイトルセクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderTags">
      <summary v="IZ4xN" i="0">
タイトルの後のタグセクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.PageHeaderTitle">
      <summary v="1kTnKr" i="0">
タイトルセクション
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.Subtitle">
      <summary v="1mCGmU" i="0">
サブタイトル
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.SubtitleTemplate">
      <summary v="1mCGmU" i="0">
サブタイトル
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.Title">
      <summary v="22Q5W6" i="0">
タイトル
</summary>
    </member>
    <member name="P:AntDesign.PageHeader.TitleTemplate">
      <summary v="22Q5W6" i="0">
タイトル
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Current">
      <summary v="3Wc86f" i="0">
現在のページ番号
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Pagination.DefaultCurrent">
      <summary v="YzgoJ" i="0">
デフォルトの初期ページ番号
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Pagination.DefaultPageSize">
      <summary v="v8TqS" i="0">
ページあたりのデータ项目のデフォルト数
</summary>
      <default value="10" />
    </member>
    <member name="P:AntDesign.Pagination.Direction">
      <summary v="2HhBb8" i="0">
言語の方向
</summary>
      <default value="ltr" />
    </member>
    <member name="P:AntDesign.Pagination.Disabled">
      <summary v="2oikWA" i="0">
ページ分割を無効にする
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.GoButton">
      <summary v="C0jWQ" i="0">
クイックジャンパー確認ボタンのレンダリングフラグメント
</summary>
    </member>
    <member name="P:AntDesign.Pagination.HideOnSinglePage">
      <summary v="iqAev" i="0">
単一のページにポケットベルを隠すかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.ItemRender">
      <summary v="3mISLh" i="0">
ページアイテムのカスタムレンダリング
</summary>
    </member>
    <member name="P:AntDesign.Pagination.JumpNextIcon">
      <summary v="1Qy79w" i="0">
ジャンプ次のアイコン
</summary>
    </member>
    <member name="P:AntDesign.Pagination.JumpPrevIcon">
      <summary v="lvbR8" i="0">
前のボタンをジャンプ
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Locale">
      <summary v="1w1TMr" i="0">
ローカリゼーションオプション
</summary>
      <default value="LocaleProvider.CurrentLocale.Pagination" />
    </member>
    <member name="P:AntDesign.Pagination.NextIcon">
      <summary v="2idV0x" i="0">
次のボタン
</summary>
    </member>
    <member name="P:AntDesign.Pagination.OnChange">
      <summary v="18LSAy" i="0">
ページ番号が変更されたときに呼び出され、結果のページ番号とpageSizeを引数として受け取ります。
</summary>
    </member>
    <member name="P:AntDesign.Pagination.OnShowSizeChange">
      <summary v="3q2Ck1" i="0">
PageSizeが変更されたときに呼び出される
</summary>
    </member>
    <member name="P:AntDesign.Pagination.PageSize">
      <summary v="1YbZ2v" i="0">
1ページあたりのデータ数
</summary>
      <default value="10" />
    </member>
    <member name="P:AntDesign.Pagination.PageSizeOptions">
      <summary v="1tiULv" i="0">
SizeChangerオプションを指定する
</summary>
      <default value="10, 20, 50, 100" />
    </member>
    <member name="P:AntDesign.Pagination.PrevIcon">
      <summary v="3n5isH" i="0">
前のボタン
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Responsive">
      <summary v="16r8QA" i="0">
(実装されていない) サイズが指定されていない場合、ウィンドウの幅に応じてページのサイズが変更されます。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Pagination.ShowLessItems">
      <summary v="2i2MLu" i="0">
より少ないページアイテムを表示する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.ShowPrevNextJumpers">
      <summary v="2paCrv" i="0">
次/前のボタンを表示または非表示にする
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Pagination.ShowQuickJumper">
      <summary v="289rdc" i="0">
直接ページにジャンプできるかどうかを判断する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.ShowSizeChanger">
      <summary v="16wrN4" i="0">
PageSize selectを表示するかどうかを決定する
</summary>
      <default value="true when Total &gt;= TotalBoundaryShowSizeChanger" />
    </member>
    <member name="P:AntDesign.Pagination.ShowTitle">
      <summary v="3I65nw" i="0">
ページアイテムのタイトルを表示する
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Pagination.ShowTotal">
      <summary v="28nNfR" i="0">
総数と範囲を表示するには
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Simple">
      <summary v="3FjsK6" i="0">
シンプルモードを使用するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Pagination.Size">
      <summary v="1tTwV6" i="0">
Paginationのサイズを指定します。小さく設定できます。
</summary>
    </member>
    <member name="P:AntDesign.Pagination.Total">
      <summary v="2iIimT" i="0">
データ项目の総数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Pagination.TotalBoundaryShowSizeChanger">
      <summary v="3MqTSs" i="0">
デフォルトロジックを使用してサイズ変更器を表示するかどうかを判断するために使用します。 ShowSizeChangerが提供したかどうかは無視されます。
</summary>
      <default value="50" />
    </member>
    <member name="P:AntDesign.Pagination.UnmatchedAttributes">
      <summary v="1NPCAo" i="0">
渡されたその他のパラメーターは、コンテナー要素にsplatstedされます。
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.ChangeSize">
      <summary v="3E28V2" i="0">
ページサイズが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.Current">
      <summary v="2wAuaG" i="0">
現在のページ
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.Disabled">
      <summary v="13w0uu" i="0">
ページ分割が無効かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.PaginationOptions.GoButton">
      <summary v="4bLRcd" i="0">
クイックジャンパー確認ボタン、これは反応バージョン用です<c>ShowQuickJumper: { goButton: ReactNode}</c></summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.IsSmall">
      <summary v="EvxPJ" i="0">
ページ分割が小さいかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.PaginationOptions.Locale">
      <summary v="3J87cK" i="0">
コンポーネントのローカリゼーションに使用されるロケール
</summary>
      <default value="LocaleProvider.CurrentLocale.Pagination" />
    </member>
    <member name="P:AntDesign.PaginationOptions.PageSize">
      <summary v="1yY8N1" i="0">
现在のpagサイズ
</summary>
    </member>
    <member name="P:AntDesign.PaginationOptions.PageSizeOptions">
      <summary v="QQhPQ" i="0">
ページサイズ選択のオプション
</summary>
      <default value="{ 10, 20, 50, 100 }" />
    </member>
    <member name="P:AntDesign.PaginationOptions.QuickGo">
      <summary v="3uFN61" i="0">
特定のページにジャンプするときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Panel.Active">
      <summary v="2amOsH" i="0">
パネルがアクティブかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Panel.ChildContent">
      <summary v="QKn5O" i="0">
パネルのコンテンツ。
</summary>
    </member>
    <member name="P:AntDesign.Panel.Disabled">
      <summary v="1EQSBP" i="0">
Trueの場合、パネルを開いたり閉じたりすることはできません。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Panel.Extra">
      <summary v="2ekzGl" i="0">
パネルの角のための余分な文字列
</summary>
    </member>
    <member name="P:AntDesign.Panel.ExtraTemplate">
      <summary v="4IrP6r" i="0">
パネルのコーナーの追加コンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.Panel.Extra" /></summary>
    </member>
    <member name="P:AntDesign.Panel.Header">
      <summary v="fxSFy" i="0">
パネルのヘッダー文字列
</summary>
    </member>
    <member name="P:AntDesign.Panel.HeaderTemplate">
      <summary v="TXEyH" i="0">
パネルのヘッダーの内容。 優先順位を引き継ぐ<see cref="P:AntDesign.Panel.Header" /></summary>
    </member>
    <member name="P:AntDesign.Panel.Key">
      <summary v="18WOVn" i="0">
パネルの一意の识别子
</summary>
    </member>
    <member name="P:AntDesign.Panel.OnActiveChange">
      <summary v="BCIxD" i="0">
このパネルのアクティブステータスが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Panel.ShowArrow">
      <summary v="1CrqfF" i="0">
パネルの矢印を表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Popconfirm.ArrowPointAtCenter">
      <summary v="wzAnt" i="0">
ツールチップの矢印を中央に向ける
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Popconfirm.CancelButtonProps">
      <summary v="23m1vg" i="0">
キャンセルボタンに渡すプロパティ
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.CancelText">
      <summary v="3YxACC" i="0">
ボタンテキストをキャンセル
</summary>
      <default value="Cancel" />
    </member>
    <member name="P:AntDesign.Popconfirm.Icon">
      <summary v="4Ep0jC" i="0">
テキストで表示されるアイコン
</summary>
      <default value="exclamation-circle" />
    </member>
    <member name="P:AntDesign.Popconfirm.IconTemplate">
      <summary v="3IZ5x9" i="0">
テキストで表示されるアイコン。 アイコンよりも優先されます。
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.Locale">
      <summary v="3xYBvu" i="0">
OKボタンに渡すプロパティ
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.MouseEnterDelay">
      <summary v="2Ffm0m" i="0">
トリガーがホバーでマウスが入ったときにpopconfirmを表示する前の遅延 (秒単位)
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popconfirm.MouseLeaveDelay">
      <summary v="40jyxC" i="0">
トリガーがホバーとマウスの葉である場合、popconfirmを非表示にする前の遅延 (秒単位)
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popconfirm.OkButtonProps">
      <summary v="3xYBvu" i="0">
OKボタンに渡すプロパティ
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.OkText">
      <summary v="oc4KL" i="0">
[OK] ボタンテキスト
</summary>
      <default value="OK" />
    </member>
    <member name="P:AntDesign.Popconfirm.OkType">
      <summary v="3Yi8aY" i="0">
OKボタンタイプ
</summary>
      <default value="primary" />
    </member>
    <member name="P:AntDesign.Popconfirm.OnCancel">
      <summary v="2OQchn" i="0">
キャンセルボタンをクリックしたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.OnConfirm">
      <summary v="oUEEu" i="0">
[OK] ボタンをクリックするとコールバックが実行されます
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.Title">
      <summary v="22Q5W6" i="0">
タイトル
</summary>
    </member>
    <member name="P:AntDesign.Popconfirm.TitleTemplate">
      <summary v="3jNoHo" i="0">
タイトル。 タイトルよりも優先されます。
</summary>
    </member>
    <member name="P:AntDesign.Popover.ArrowPointAtCenter">
      <summary v="4ZyO5q" i="0">
ラップされた要素の中心に矢印を向けるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Popover.Content">
      <summary v="14N6If" i="0">
カードのコンテンツ文字列
</summary>
    </member>
    <member name="P:AntDesign.Popover.ContentTemplate">
      <summary v="4DfGdN" i="0">
カードの内容。 優先順位を引き継ぐ<see cref="P:AntDesign.Popover.Content" /></summary>
    </member>
    <member name="P:AntDesign.Popover.MouseEnterDelay">
      <summary v="3jSDeO" i="0">
ツールチップがマウスに表示される前の秒単位の遅延
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popover.MouseLeaveDelay">
      <summary v="2crCrt" i="0">
ツールチップがマウスに隠される前に、秒単位で遅延を残す
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Popover.Title">
      <summary v="2aanMX" i="0">
カードのタイトル文字列
</summary>
    </member>
    <member name="P:AntDesign.Popover.TitleTemplate">
      <summary v="4XkKDk" i="0">
カードのタイトル内容。 優先順位を引き継ぐ<see cref="P:AntDesign.Popover.Title" /></summary>
    </member>
    <member name="P:AntDesign.Progress.Format">
      <summary v="4Lqn3Z" i="0">
コンテンツのテンプレート関数
</summary>
      <default value="i%" />
    </member>
    <member name="P:AntDesign.Progress.GapDegree">
      <summary v="12RNGJ" i="0">
半円のギャップの程度、0 ~ 295
</summary>
      <default value="75" />
    </member>
    <member name="P:AntDesign.Progress.GapPosition">
      <summary v="21CHJQ" i="0">
ギャップ位置、オプション: 左下右上
</summary>
      <default value="ProgressGapPosition.Bottom" />
    </member>
    <member name="P:AntDesign.Progress.Percent">
      <summary v="3NOeu0" i="0">
完了率を設定する
</summary>
    </member>
    <member name="P:AntDesign.Progress.ShowInfo">
      <summary v="LnI2g" i="0">
進捗値とステータスアイコンを表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Progress.Size">
      <summary v="3T93xE" i="0">
進捗サイズ
</summary>
      <default value="ProgressSize.Default" />
    </member>
    <member name="P:AntDesign.Progress.Status">
      <summary v="1r9Emr" i="0">
Progress、options: success exceptionのステータスを設定するには、通常のアクティブ (行のみ)
</summary>
      <default value="ProgressStatus.Normal" />
    </member>
    <member name="P:AntDesign.Progress.Steps">
      <summary v="42cdeR" i="0">
総ステップ数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Progress.StrokeColor">
      <summary v="4XWxFu" i="0">
プログレスバーの色、オブジェクトを渡すときの線形グラデーションのレンダリング
円形の進行状況の色、オブジェクトを通過するときの線形勾配のレンダリング
</summary>
    </member>
    <member name="P:AntDesign.Progress.StrokeLinecap">
      <summary v="3jsLOz" i="0">
Progress linecapのスタイルを設定する
</summary>
      <default value="ProgressStrokeLinecap.Round" />
    </member>
    <member name="P:AntDesign.Progress.StrokeWidth">
      <summary v="4JZZdB" i="0">
プログレスバーの幅を設定します。単位: px
円形の進行状況の幅を設定するには、単位: キャンバス幅のパーセンテージ
ダッシュボードの進行状況の幅を設定します。単位: キャンバスの幅のパーセンテージ
</summary>
      <default value="Type = line: 10, Type = circle or dashboard: 6" />
    </member>
    <member name="P:AntDesign.Progress.SuccessPercent">
      <summary v="196roM" i="0">
セグメント化された成功率
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Progress.TrailColor">
      <summary v="zWVJN" i="0">
未充填部分の色
</summary>
    </member>
    <member name="P:AntDesign.Progress.Type">
      <summary v="3E83zd" i="0">
型を設定するには、オプション: line circle dashboard
</summary>
      <default value="ProgressType.Line" />
    </member>
    <member name="P:AntDesign.Progress.Width">
      <summary v="1IrjNn" i="0">
円形の進行状況のキャンバス幅を設定するには、単位: px
ダッシュボードの進行状況のキャンバス幅を設定するには、単位: px
</summary>
      <default value="120" />
    </member>
    <member name="P:AntDesign.PropertyColumn`2.Property">
      <summary v="24tPyG" i="0">
この列のセルに表示される値を定義します。
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.AutoFocus">
      <summary v="1HCy19" i="0">
オートフォーカスかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Radio`1.Checked">
      <summary v="ocZri" i="0">
ラジオが選択されているかどうかを指定します
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.CheckedChange">
      <summary v="Zx50T" i="0">
チェックされた状態が変化したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.CheckedChanged">
      <summary v="Zx50T" i="0">
チェックされた状態が変化したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.ChildContent">
      <summary v="1Uw6Ur" i="0">
ラジオのラベルコンテンツを表示する
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.DefaultChecked">
      <summary v="4DHC1F" i="0">
ラジオボタンが最初にチェックされるかどうかを指定する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Radio`1.Disabled">
      <summary v="OMN4Y" i="0">
ラジオbutonを無効にする
</summary>
    </member>
    <member name="P:AntDesign.Radio`1.RadioButton">
      <summary v="2motyg" i="0">
に設定<c>True</c>ボタングループとしてラジオをスタイルします。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Radio`1.Value">
      <summary v="2zndEn" i="0">
選択した値
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.ButtonStyle">
      <summary v="4ZvOUP" i="0">
グループのボタンスタイル。
</summary>
      <default value="RadioButtonStyle.Outline" />
    </member>
    <member name="P:AntDesign.RadioGroup`1.ChildContent">
      <summary v="2tXoH4" i="0">
グループのラジオ要素。 これまたは<see cref="P:AntDesign.RadioGroup`1.Options" /></summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.DefaultValue">
      <summary v="3ecaL6" i="0">
グループのデフォルトで選択された値
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.Disabled">
      <summary v="4M7mxL" i="0">
グループが無効かどうか
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.Name">
      <summary v="3d51I4" i="0">
グループ内のすべてのラジオの入力名
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.OnChange">
      <summary v="47ZR4f" i="0">
選択した値が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.RadioGroup`1.Options">
      <summary v="0Yvct" i="0">
グループ内のラジオを表示するオプション。 これまたは<see cref="P:AntDesign.RadioGroup`1.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.RangePicker`1.OnChange">
      <summary v="48PQMr" i="0">
選択した範囲の変更時に実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.RangePicker`1.Value">
      <summary v="yoUC3" i="0">
入力の値を取得または設定します。 これは双方向バインディングで使用する必要があります。
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.Rate.AllowClear">
      <summary v="CcqNu" i="0">
もう一度クリックしたときにクリアを許可するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Rate.AllowHalf">
      <summary v="28MDVC" i="0">
半分の選択を許可するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Rate.AutoFocus">
      <summary v="1zMhyj" i="0">
レンダリングに集中するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Rate.Character">
      <summary v="2fMPKJ" i="0">
各レートのカスタムキャラクター
</summary>
    </member>
    <member name="P:AntDesign.Rate.Count">
      <summary v="zRaE1" i="0">
評価のために表示するアイコンの数
</summary>
      <default value="5" />
    </member>
    <member name="P:AntDesign.Rate.DefaultValue">
      <summary v="M1qrc" i="0">
レーティングがレンダリングされるときのデフォルト値
</summary>
    </member>
    <member name="P:AntDesign.Rate.Disabled">
      <summary v="wt6DV" i="0">
選択を無効にするかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Rate.OnBlur">
      <summary v="1sCaDf" i="0">
レートがフォーカスを失うときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Rate.OnFocus">
      <summary v="366fno" i="0">
レートがフォーカスを獲得したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Rate.Tooltips">
      <summary v="298Zgu" i="0">
レーティングの各増分に対して、レーティング0-nのインデックスの順に表示するツールチップ
</summary>
    </member>
    <member name="P:AntDesign.Rate.Value">
      <summary v="1tpDGz" i="0">
評価の現在の値
</summary>
    </member>
    <member name="P:AntDesign.Rate.ValueChanged">
      <summary v="2nCCVt" i="0">
レーティングが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.RateItemRenderContext.Type">
      <summary v="34NDQy" i="0">
'AntIcon' | 'Text'
</summary>
    </member>
    <member name="P:AntDesign.Result.ChildContent">
      <summary v="v6uJE" i="0">
子コンテンツ。 タイトル/サブタイトルとエクストラの間に表示されます。
</summary>
    </member>
    <member name="P:AntDesign.Result.Extra">
      <summary v="2fQpfl" i="0">
他のすべてのコンテンツの下に表示される余分なコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Result.Icon">
      <summary v="RF40T" i="0">
カスタムアイコン。 形式: "{type}-{theme}"
</summary>
    </member>
    <member name="P:AntDesign.Result.IsShowIcon">
      <summary v="2YKqbg" i="0">
アイコンを表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Result.Status">
      <summary v="382blm" i="0">
結果のタイプ。 スタイルとデフォルトの画像/アイコンに影響を与えます。 可能な値: 成功、エラー、情報、警告、404、403、500
</summary>
      <default value="info" />
    </member>
    <member name="P:AntDesign.Result.SubTitle">
      <summary v="1mCGmU" i="0">
サブタイトル
</summary>
    </member>
    <member name="P:AntDesign.Result.SubTitleTemplate">
      <summary v="3a97oJ" i="0">
サブタイトル。 SubTitleよりも優先されます。
</summary>
    </member>
    <member name="P:AntDesign.Result.Title">
      <summary v="22Q5W6" i="0">
タイトル
</summary>
    </member>
    <member name="P:AntDesign.Result.TitleTemplate">
      <summary v="3jNoHo" i="0">
タイトル。 タイトルよりも優先されます。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Body">
      <summary v="151KL0" i="0">
ページコンテンツをカスタマイズするためのテンプレート。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Draggable">
      <summary v="3ONg1t" i="0">
タブをドラッグおよびドロップできるかどうか。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.HidePages">
      <summary v="2DzMAJ" i="0">
ページ表示を非表示にし、タイトルタブのみを保持するかどうか。 次に使用できます<see cref="T:AntDesign.ReusePages" />ページconentを表示します。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Locale">
      <summary v="2Y3MCv" i="0">
ローカライズ設定。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.ReuseTabsRouteData">
      <summary v="2MfoI1" i="0">
現在のページのルーティング情報。<see cref="T:Microsoft.AspNetCore.Components.RouteData" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.Size">
      <summary v="2haZnj" i="0">
タブのサイズ。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabs.TabPaneClass">
      <summary v="1gD4lo" i="0">
内側のタブペインのクラス名。
</summary>
    </member>
    <member name="P:AntDesign.ReuseTabsService.Pages">
      <summary v="1FZzbS" i="0">
現在開いているページのページ情報リスト。キャッシュとリカバリに使用できます。
</summary>
    </member>
    <member name="P:AntDesign.Row.Align">
      <summary v="oevfR" i="0">
フレックスレイアウトの垂直方向の配置: 'top' | 'middle' | 'bottom'
</summary>
    </member>
    <member name="P:AntDesign.Row.ChildContent">
      <summary v="vVL0U" i="0">
行の内容は、一般的に含まれています<see cref="T:AntDesign.Col" />要素を使用します。
</summary>
    </member>
    <member name="P:AntDesign.Row.DefaultBreakpoint">
      <summary v="3n5DQ7" i="0">
デフォルトの画面サイズのブレークポイント。 事前レンダリング中に溝を設定するために使用
</summary>
    </member>
    <member name="P:AntDesign.Row.Gutter">
      <summary v="35Yklo" i="0">
グリッド間の間隔は、数字または辞書のようなものです。
<c>{Xs: 8、sm: 16、md: 24}</c>、水平および垂直の间隔を同时に働かせる配列<c>[水平、垂直]</c></summary>
    </member>
    <member name="P:AntDesign.Row.Justify">
      <summary v="O14rv" i="0">
フレックスレイアウトのHotizontalignment: 'start' | 'end' | 'center' | 'space-around '| 'space-between'
</summary>
    </member>
    <member name="P:AntDesign.Row.OnBreakpoint">
      <summary v="KVmKm" i="0">
画面サイズのブレークポイントがトリガーされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Row.Type">
      <summary v="1XuNXN" i="0">
現在未使用
</summary>
    </member>
    <member name="P:AntDesign.Row.Wrap">
      <summary v="37MaKM" i="0">
行のコンテンツをラップするかどうかを許可する
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Search.ClassicSearchIcon">
      <summary v="2T9jbs" i="0">
検索入力は、ボタンとしてではなく、サフィックス検索アイコンでレンダリングされます。
ときに無視されます<see cref="P:AntDesign.Search.EnterButton" />!= False
</summary>
    </member>
    <member name="P:AntDesign.Search.EnterButton">
      <summary v="nrhIW" i="0">
入力後に入力ボタンを表示するかどうか。 このプロパティは、<see cref="P:AntDesign.Input`1.AddOnAfter" /></summary>
    </member>
    <member name="P:AntDesign.Search.Loading">
      <summary v="4HPN9Y" i="0">
ローディング付きの検索ボックス
</summary>
    </member>
    <member name="P:AntDesign.Search.OnSearch">
      <summary v="4QsosL" i="0">
検索アイコン、クリアアイコンをクリックするか、Enterキーを押すと、コールバックが実行されます
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Block">
      <summary v="RHatn" i="0">
コンポーネントを親の幅にする
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.ChildContent">
      <summary v="jo4Z6" i="0">
セグメント。 優先順位を引き継ぐ<see cref="P:AntDesign.Segmented`1.Labels" />と<see cref="P:AntDesign.Segmented`1.Options" /></summary>
    </member>
    <member name="P:AntDesign.Segmented`1.DefaultValue">
      <summary v="3ijebS" i="0">
デフォルトの選択値
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Disabled">
      <summary v="2hf0ml" i="0">
すべてのセグメントを無効にする
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Segmented`1.Labels">
      <summary v="4ZBE1A" i="0">
セグメントのラベル
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.OnChange">
      <summary v="MKRop" i="0">
状態が変化したときにトリガーされるコールバック関数
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Options">
      <summary v="1Nta55" i="0">
セグメントのオプション。 優先順位を引き継ぐ<see cref="P:AntDesign.Segmented`1.Labels" /></summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Size">
      <summary v="2geSzV" i="0">
UI要素のサイズ
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.Value">
      <summary v="1AeloX" i="0">
現在選択されている値
</summary>
    </member>
    <member name="P:AntDesign.Segmented`1.ValueChanged">
      <summary v="2HiGd1" i="0">
選択したセグメントが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.ChildContent">
      <summary v="42554R" i="0">
セグメントに表示するUIコンテンツ。 優先順位を引き継ぐ<see cref="P:AntDesign.SegmentedItem`1.Label" />と<see cref="P:AntDesign.SegmentedItem`1.Icon" /></summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Disabled">
      <summary v="aX1BE" i="0">
セグメントが無効になっている場合
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Icon">
      <summary v="2p0kbD" i="0">
セグメントのラベルの横に表示するアイコン。 ときにのみ使用されます。<see cref="P:AntDesign.SegmentedItem`1.ChildContent" />は提供されません。
</summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Label">
      <summary v="OeF48" i="0">
セグメントアイテムのUIのラベル
</summary>
    </member>
    <member name="P:AntDesign.SegmentedItem`1.Value">
      <summary v="20JvA1" i="0">
セグメントアイテムの値
</summary>
    </member>
    <member name="P:AntDesign.Select.Internal.SelectOptionItem`2.SelectedTagRef">
      <summary v="r6r8j" i="0">
によって使用されるElementRef<see cref="T:AntDesign.Select.Internal.SelectContent`2" />のみ
選択されたモード = 複数およびMaxTagCount = 応答
</summary>
    </member>
    <member name="P:AntDesign.Select.Internal.SelectSuffixIcon`2.ShowSearchIcon">
      <summary v="1mzP4W" i="0">
シングルモードで検索入力を表示するかどうか。
</summary>
    </member>
    <member name="P:AntDesign.Select.LabelTemplateItem`2.Ref">
      <summary v="3v0RLn" i="0">
DOM要素に対して返されたElementRef参照。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.Bordered">
      <summary v="3MXGxp" i="0">
ボーダースタイルを切り替えます。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.DataSource">
      <summary v="3vflFW" i="0">
このコンポーネントのデータソース。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DataSourceEqualityComparer">
      <summary v="2AEbcd" i="0">
DataSourceの変更中に使用されるEqualityComparer
検出します。 Comparerが設定されていない場合、デフォルト。 ネットは
使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DefaultActiveFirstOption">
      <summary v="gQ3Lr" i="0">
無効化されていない最初のアイテムを有効にします。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DefaultValue">
      <summary v="f4vCE" i="0">
Mode = default-この値は、初期化中およびフォーム内のリセットボタンを押すときに使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DisabledName">
      <summary v="4Y7Gl5" i="0">
無効なインジケーターとして使用されるプロパティの名前。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DisabledPredicate">
      <summary v="ksaX5" i="0">
無効オプションの述語を指定します
</summary>
    </member>
    <member name="P:AntDesign.Select`2.DropdownMatchSelectWidth">
      <summary v="3eKhdS" i="0">
ドロップダウン幅と一致します。 <c>True</c>、ドロップダウン内の最も幅の広いアイテムの幅に一致します。 <c>文字列</c>、文字列の値の幅に一致します (ex: 250px)
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.DropdownMaxWidth">
      <summary v="1LaV7G" i="0">
ドロップダウン幅がここの値に記載されている以上に拡大することはできません (例: "768px")
</summary>
      <default value="auto" />
    </member>
    <member name="P:AntDesign.Select`2.EnableVirtualization">
      <summary v="39WGkE" i="0">
仮想化機能を有効にするかどうかは、のためにのみ機能します。 NET 5以上
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Select`2.GroupName">
      <summary v="V3xJV" i="0">
グループインジケータとして使用するプロパティの名前。
値が設定されている場合、エントリはグループで表示されます。
追加の使用<see cref="P:AntDesign.SelectBase`2.SortByGroup" />と<see cref="P:AntDesign.SelectBase`2.SortByLabel" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.IgnoreItemChanges">
      <summary v="419yAi" i="0">
速度を上げるために使用されます。 ラベル名の変更が予想される場合は、
グループ名または無効のインジケーター、このプロパティを無効にします。
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.IsGroupingEnabled">
      <summary v="23rvdX" i="0">
GroupNameが使用されているかどうかを示します。 この値がTrueの場合、SelectOptionsはグループモードでレンダリングされます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ItemTemplate">
      <summary v="3q66H2" i="0">
アイテムスタイルをカスタマイズするために使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.LabelProperty">
      <summary v="3Tbo9L" i="0">
オプションオブジェクトのラベルプロパティを指定します。 このプロパティを使用する場合は、<see cref="!:LabelName" /></summary>
    </member>
    <member name="P:AntDesign.Select`2.NotFoundContent">
      <summary v="3ITps3" i="0">
結果が一致しないときに表示するコンテンツを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnBlur">
      <summary v="3D7tWb" i="0">
Blurのときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnCreateCustomTag">
      <summary v="3KnduO" i="0">
カスタムタグが作成されたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnDataSourceChanged">
      <summary v="IHVwI" i="0">
Datasourceオブジェクト/参照が変更されたときに呼び出されます。
データソース内の値が変更されてもトリガーされません。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnDropdownVisibleChange">
      <summary v="QTkZe" i="0">
ドロップダウンの可視性が変更されたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.OnSearch">
      <summary v="1JqXvj" i="0">
入力が変更されたときに起動されるコールバック関数。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ShowArrowIcon">
      <summary v="3T7UEw" i="0">
ドロップダウン矢印を表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Select`2.TokenSeparators">
      <summary v="2uDnIP" i="0">
新しく作成されたタグのトークン区切り文字として扱われる文字を定義します。
キーボードのみを使用して新しいタグを作成するときに便利です。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.Value">
      <summary v="4UcFXa" i="0">
選択した値を取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ValueChanged">
      <summary v="1koZkv" i="0">
双方向バインディングに使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Select`2.ValueProperty">
      <summary v="2FBrf9" i="0">
オプションオブジェクトのvalueプロパティを指定します。 このプロパティを使用する場合は、<see cref="!:ValueName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AccessKey">
      <summary v="290XqI" i="0">
Accesskeyグローバル属性。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ActiveOption">
      <summary v="3ReKb8" i="0">
現在アクティブ (ハイライト) オプション。
選択したオプションと等しくする必要はありません。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AllowClear">
      <summary v="4g3Xf1" i="0">
クリアボタンを表示します。 場合は効果がありません<see cref="P:AntDesign.AntInputComponentBase`1.Value" />タイプデフォルト
のリストにもあります。<see cref="T:AntDesign.SelectOption`2" />
使用しない限り<see cref="P:AntDesign.SelectBase`2.ValueOnClear" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AutoClearSearchValue">
      <summary v="4LMxuO" i="0">
アイテムの選択時に現在の検索がクリアされるかどうか。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.AutoFocus">
      <summary v="14xblZ" i="0">
オートフォーカス。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.BoundaryAdjustMode">
      <summary v="4FBjW3" i="0">
オーバーレイ調整戦略 (たとえば、ブラウザのサイズ変更が行われている場合)
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.CustomTagLabelToValue">
      <summary v="3EMaK3" i="0">
カスタムタグ (文字列) をTItemValue型に変換します。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.DefaultValues">
      <summary v="2J5DPu" i="0">
Mode = multiple | tags-値は初期化中およびフォーム内のリセットボタンを押すときに使用されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Disabled">
      <summary v="2bl4pp" i="0">
Selectコンポーネントが無効かどうか。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.DropdownRender">
      <summary v="4Zzqb3" i="0">
ドロップダウンコンテンツをカスタマイズします。 コンテキストは元のコンテンツです。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.EnableSearch">
      <summary v="2naqqM" i="0">
検索機能がアクティブかどうかを示します。 モードタグの場合は常にtrueです。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.HasValue">
      <summary v="4VVb1k" i="0">
SelectOptionsに選択したアイテムがあるかどうかを判断します
</summary>
      <returns v="2R5twB" i="0">SelectOptionsに選択されたアイテムがある場合はtrue、そうでない場合はfalse</returns>
    </member>
    <member name="P:AntDesign.SelectBase`2.HideSelected">
      <summary v="4AwoTD" i="0">
選択したアイテムを非表示にします。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.IsSearchEnabled">
      <summary v="2ABzzv" i="0">
ユーザーが一致したアイテムを検索するパターンを入力できるかどうかを返します
</summary>
      <returns v="3ORAAp" i="0">検索が有効な場合はtrue</returns>
    </member>
    <member name="P:AntDesign.SelectBase`2.ItemLabel">
      <summary v="4Yg7SF" i="0">
オプションオブジェクトのラベルプロパティを指定します。 このプロパティを使用する場合は、<see cref="P:AntDesign.SelectBase`2.LabelName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ItemValue">
      <summary v="1CAphC" i="0">
オプションオブジェクトのvalueプロパティを指定します。 このプロパティを使用する場合は、<see cref="P:AntDesign.SelectBase`2.ValueName" /></summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelInValue">
      <summary v="1U3ymK" i="0">
ラベルを値に埋め込むかどうか、値の形式をTitemValueから文字列 (JSON) に変換します。
例えば、 {"value": TitemValue,"label": "Label value"}
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelName">
      <summary v="3AwSrr" i="0">
ラベルに使用するプロパティの名前。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LabelTemplate">
      <summary v="hwEOh" i="0">
ラベルスタイルをカスタマイズするために使用されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.LastValueBeforeReset">
      <summary v="44YdO2" i="0">
SelectOptionItemsで新しく設定された値が見つからない場合は、
デフォルトです。 このプロパティはリセット前の値を保持します。 それは必要かもしれません
(たとえば、新しい値が同時に設定されている場合など)
新しいSelectOptionが追加されると、コンポーネントの値が設定されます。
新しいSelectOptionItemが作成される前に)。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Loading">
      <summary v="3cOuxj" i="0">
ローディングインジケータを表示します。 ロードロジックを自分で書く必要があります。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagCount">
      <summary v="3GSRJr" i="0">
最大タグ数を表示します。 レスポンシブはパフォーマンスをレンダリングします。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagPlaceholder">
      <summary v="3mQAeT" i="0">
隠しタグ用のプレースホルダー。 ResponsiveTag.Responsiveで使用する場合は、独自の処理ロジックを実装します。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.MaxTagTextLength">
      <summary v="3C8N89" i="0">
タグの長さ (文字数)。
モード = "multiple" またはモード = "tags" のみ
</summary>
      <value>
            The maximum length of the tag text.
            </value>
    </member>
    <member name="P:AntDesign.SelectBase`2.Mode">
      <summary v="3S2B5T" i="0">
Select - default | multiple | tagsの設定モード
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnClearSelected">
      <summary v="14UtFb" i="0">
ユーザーが選択をクリアしたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnFocus">
      <summary v="1ERQAl" i="0">
フォーカス時に呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnMouseEnter">
      <summary v="46zJaG" i="0">
マウスが入力したときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnMouseLeave">
      <summary v="ninB2" i="0">
マウスが去るときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnSelectedItemChanged">
      <summary v="2ittuq" i="0">
選択したアイテムが変更されたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OnSelectedItemsChanged">
      <summary v="g9Onl" i="0">
選択したアイテムが変更されたときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Open">
      <summary v="2tPov4" i="0">
ドロップダウンの制御されたオープン状態。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.OpenChanged">
      <summary v="2sxC6Q" i="0">
オープン状態が変化したときに呼び出されるコールバック関数。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Placeholder">
      <summary v="4QgNG1" i="0">
Selectのプレースホルダー。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.PopupContainerSelector">
      <summary v="2FFcRl" i="0">
これを使用してオーバーレイの問題を修正します。# area
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.PrefixIcon">
      <summary v="YZqdW" i="0">
カスタムプレフィックスアイコン。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SearchDebounceMilliseconds">
      <summary v="2lpe12" i="0">
ユーザが停止するまで検索入力イベントの処理を遅らせる
所定の時間のタイピング。 250msにデフォルト。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SelectOptions">
      <summary v="2msqsT" i="0">
選択オプションを手動でレンダリングするために使用します。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ShowSearchIcon">
      <summary v="1mzP4W" i="0">
シングルモードで検索入力を表示するかどうか。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortByGroup">
      <summary v="35WDeN" i="0">
グループインジケータとして使用するプロパティの名前。
値が設定されている場合、エントリはグループで表示されます。
追加のSortByGroupとSortByLabelを使用します。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortByLabel">
      <summary v="2TkxTE" i="0">
ラベル値でアイテムを並べ替えます。 なし | 上昇 | 下降
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SortedSelectOptionItems">
      <summary v="2ME8BB" i="0">
SelectOptionItemsの並べ替えリスト
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.SuffixIcon">
      <summary v="20vubH" i="0">
カスタム接尾辞アイコン。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueChanged">
      <summary v="1koZkv" i="0">
双方向バインディングに使用されます。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueName">
      <summary v="1eRofc" i="0">
値に使用されるプロパティの名前。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValueOnClear">
      <summary v="3t8E6Y" i="0">
クリアボタンを押すと、値は
ValueOnClearに設定されているもの
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.Values">
      <summary v="38zUL6" i="0">
選択した値を取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.SelectBase`2.ValuesChanged">
      <summary v="1koZkv" i="0">
双方向バインディングに使用されます。
</summary>
    </member>
    <member name="P:AntDesign.Selection.CellRender">
      <summary v="35Fgqe" i="0">
セルのコンテンツをカスタマイズします。
</summary>
    </member>
    <member name="P:AntDesign.Selection.CheckStrictly">
      <summary v="2Lj7pU" i="0">
テーブルの行を正確にチェックします。親の行と子の行は関連付けられていません
</summary>
    </member>
    <member name="P:AntDesign.Selection.Disabled">
      <summary v="1aaMLr" i="0">
選択列が無効かどうか。
</summary>
    </member>
    <member name="P:AntDesign.Selection.Key">
      <summary v="ieiZV" i="0">
今はダメだ
</summary>
    </member>
    <member name="P:AntDesign.Selection.Type">
      <summary v="3aIS36" i="0">
選択列、チェックボックスまたはラジオのタイプ。
</summary>
      <default value="checkbox" />
    </member>
    <member name="P:AntDesign.SelectOption`2.Disabled">
      <summary v="zh3il" i="0">
このオプションを無効にする
パラメータは、SelectOptionが直接作成された場合にのみ使用してください。
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Label">
      <summary v="44K7nB" i="0">
このオプションを選択した後の選択のラベル
パラメータは、SelectOptionが直接作成された場合にのみ使用してください。
</summary>
    </member>
    <member name="P:AntDesign.SelectOption`2.Value">
      <summary v="2QHMVs" i="0">
このオプションを選択した後のSelectの値
パラメータは、SelectOptionが直接作成された場合にのみ使用してください。
</summary>
    </member>
    <member name="P:AntDesign.Sider.Breakpoint">
      <summary v="l5AYt" i="0">
サイダーがデフォルトで崩壊するブレークポイント
</summary>
    </member>
    <member name="P:AntDesign.Sider.ChildContent">
      <summary v="2OsGMG" i="0">
サイダーの内容
</summary>
    </member>
    <member name="P:AntDesign.Sider.Collapsed">
      <summary v="1PDgJx" i="0">
サイダーが崩壊したかどうか
</summary>
    </member>
    <member name="P:AntDesign.Sider.CollapsedChanged">
      <summary v="18vYU0" i="0">
原因に関係なく、サイダーがオープンから崩壊に変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Sider.CollapsedWidth">
      <summary v="8jub4" i="0">
折りたたまれたときのサイダーの幅 (ピクセル単位)
</summary>
      <default value="80" />
    </member>
    <member name="P:AntDesign.Sider.Collapsible">
      <summary v="1GG81C" i="0">
Siderが折りたたみ可能かどうか
</summary>
    </member>
    <member name="P:AntDesign.Sider.DefaultCollapsed">
      <summary v="ypMIg" i="0">
初期ステータスを設定するには
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Sider.NoTrigger">
      <summary v="1YVJA1" i="0">
手動で折りたたむ/拡張するためのUIトリガーを削除する
</summary>
    </member>
    <member name="P:AntDesign.Sider.OnBreakpoint">
      <summary v="1Qt3os" i="0">
ウィンドウサイズがブレークポイントを変更したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Sider.OnCollapse">
      <summary v="18vYU0" i="0">
原因に関係なく、サイダーがオープンから崩壊に変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Sider.Theme">
      <summary v="2DyVtS" i="0">
カラーテーマ
</summary>
      <default value="SiderTheme.Dark" />
    </member>
    <member name="P:AntDesign.Sider.Trigger">
      <summary v="3Sa2ea" i="0">
手動で変更できるようにUI要素を折りたたむ/展開します。
</summary>
    </member>
    <member name="P:AntDesign.Sider.Width">
      <summary v="3PhOPs" i="0">
拡大したときのサイダーの幅 (ピクセル単位)
</summary>
      <default value="200" />
    </member>
    <member name="P:AntDesign.Skeleton.Active">
      <summary v="4Qco43" i="0">
アクティブなアニメーションを表示するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Avatar">
      <summary v="3bIvfu" i="0">
プレースホルダーにアバターを表示する
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.AvatarShape">
      <summary v="3djQs" i="0">
アバター形状
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.AvatarSize">
      <summary v="2D3uY4" i="0">
アバターサイズ
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.ChildContent">
      <summary v="1QbVs4" i="0">
スケルトンがアクティブでないときに表示するコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Loading">
      <summary v="2LkvDh" i="0">
Trueのときにスケルトンを表示する
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Paragraph">
      <summary v="V2eU0" i="0">
段落スケルトンを表示
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.ParagraphRows">
      <summary v="chHri" i="0">
段落スケルトンの行数
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.ParagraphWidth">
      <summary v="2Xyziw" i="0">
段落スケルトンの幅
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.Title">
      <summary v="2IHjue" i="0">
タイトルプレースホルダーを表示
</summary>
    </member>
    <member name="P:AntDesign.Skeleton.TitleWidth">
      <summary v="IsND5" i="0">
タイトルプレースホルダーの幅
</summary>
    </member>
    <member name="P:AntDesign.SkeletonElement.Active">
      <summary v="WC1lx" i="0">
スケルトンがアクティブな場合
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SkeletonElement.Shape">
      <summary v="17Pcfb" i="0">
アバターの形。 入力タイプには使用されません。
</summary>
      <default value="SkeletonButtonShape.Default" />
    </member>
    <member name="P:AntDesign.SkeletonElement.Size">
      <summary v="2iO6kz" i="0">
要素のサイズ。 可能な値: 大きい、小さい、デフォルト。 タイプがアバターである場合、整数も同様に提供することができる。
</summary>
    </member>
    <member name="P:AntDesign.SkeletonElement.Type">
      <summary v="34WUAl" i="0">
要素のタイプ。 可能な値: 入力、アバター、ボタン
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.DefaultValue">
      <summary v="3Dmrok" i="0">
スライダーのデフォルト値。 <see cref="P:AntDesign.Slider`1.Range" />はfalse、使用番号、それ以外の場合は、 [number, number] を使用します。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Disabled">
      <summary v="vRGcV" i="0">
Trueの場合、スライダーは相互作用できません
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Dots">
      <summary v="11Mxqn" i="0">
現在実装されていません。
親指がダニだけをドラッグできるかどうか
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.GetTooltipPopupContainer">
      <summary v="4GI0Ek" i="0">
現在実装されていません。 ツールチップのDOMコンテナ
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.HasTooltip">
      <summary v="2B6XSU" i="0">
マーカーにツールチップがあるべきかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Slider`1.Included">
      <summary v="2gasHt" i="0">
ときに効果を作る<see cref="P:AntDesign.Slider`1.Marks" />Nullではなく、trueは封じ込めを意味し、falseは調整を意味します
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Slider`1.Marks">
      <summary v="OkQCc" i="0">
スライダーのダニマーク
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Max">
      <summary v="4PpL6k" i="0">
スライダーがに滑ることができる最大値
</summary>
      <default value="100" />
    </member>
    <member name="P:AntDesign.Slider`1.Min">
      <summary v="4F0VRd" i="0">
スライダーがに滑ることができる最小値
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Slider`1.OnAfterChange">
      <summary v="1XSLST" i="0">
Onmouseupが起動したときにコールバックが実行されます。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.OnChange">
      <summary v="3UblL7" i="0">
ユーザーがスライダーの値を変更したときにコールバックが実行されます。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Range">
      <summary v="3geVKs" i="0">
スライダーがレンジスライダーかどうか。 タイプによって決定される<c>TValue</c></summary>
    </member>
    <member name="P:AntDesign.Slider`1.Reverse">
      <summary v="40HW7G" i="0">
数字とmin/maxの顺序と方向。
<para>Trueの場合、Maxは左側にあり、Minは右側にあります。</para><para>Falseの場合、Minは左側にあり、Maxは右側にあります。</para></summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Slider`1.Step">
      <summary v="16PNUi" i="0">
スライダーが値をステップスルーできる粒度。 0より大きくなければならず、 (<see cref="P:AntDesign.Slider`1.Max" />-<see cref="P:AntDesign.Slider`1.Min" />)。 <see cref="P:AntDesign.Slider`1.Marks" />がnullではない場合、<see cref="P:AntDesign.Slider`1.Step" />Nullにすることができます。
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.TipFormatter">
      <summary v="4XcMJw" i="0">
ツールチップの表示値を取得する方法。 スライダーの値を渡し、ディスプレイの文字列を取得します
</summary>
      <default value="(value) =&gt; value.ToString()" />
    </member>
    <member name="P:AntDesign.Slider`1.TooltipPlacement">
      <summary v="2MwlsN" i="0">
ツールチップの表示位置を設定します。 「」をご参照ください。<see cref="T:AntDesign.Tooltip" />より多くの情報のため
</summary>
      <default value="Right for vertical. Top for horizontal" />
    </member>
    <member name="P:AntDesign.Slider`1.TooltipVisible">
      <summary v="23vRSE" i="0">
真のツールチップが常に表示される場合
</summary>
    </member>
    <member name="P:AntDesign.Slider`1.Value">
      <summary v="yoUC3" i="0">
入力の値を取得または設定します。 これは双方向バインディングで使用する必要があります。
</summary>
      <example>
            @bind-Value="model.PropertyName"
            </example>
    </member>
    <member name="P:AntDesign.Slider`1.Vertical">
      <summary v="4UJ2xl" i="0">
Trueの場合、スライダーは垂直になります。 Falseの場合は水平になります。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SliderMark.Key">
      <summary v="3BuUXn" i="0">
マークがオンになるための番号。 含まれているスライダーのMinとMaxの範囲内でなければなりません
</summary>
    </member>
    <member name="P:AntDesign.SliderMark.Style">
      <summary v="48xki2" i="0">
マークのスタイル
</summary>
    </member>
    <member name="P:AntDesign.SliderMark.Value">
      <summary v="1xfGgl" i="0">
マークのコンテンツを表示する
</summary>
    </member>
    <member name="P:AntDesign.Space.Align">
      <summary v="kdFSL" i="0">
アイテムのアライメント-start | end | center | baseline
</summary>
    </member>
    <member name="P:AntDesign.Space.ChildContent">
      <summary v="49aglq" i="0">
スペースの内容-SpaceItem要素を含める必要があります
</summary>
    </member>
    <member name="P:AntDesign.Space.Direction">
      <summary v="4FrPH4" i="0">
アイテムの流れの方向
</summary>
      <default value="DirectionVHType.Horizontal" />
    </member>
    <member name="P:AntDesign.Space.Size">
      <summary v="2cU1F5" i="0">
アイテム間のスペースのサイズ
</summary>
      <default value="small" />
    </member>
    <member name="P:AntDesign.Space.Split">
      <summary v="aPaqQ" i="0">
アイテム間のスペースに表示されるコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Space.Wrap">
      <summary v="312RhJ" i="0">
アイテムを複数行にラップするかどうか。 方向が垂直のときに無視されます。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Spin.ChildContent">
      <summary v="1ejn5W" i="0">
スピンが読み込みを示すコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Spin.Delay">
      <summary v="3a3R5q" i="0">
ロード状態の遅延をミリ秒単位で指定します (フラッシュを防止)
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Spin.Indicator">
      <summary v="48dpH6" i="0">
回転インジケータのカスタム表示
</summary>
    </member>
    <member name="P:AntDesign.Spin.Size">
      <summary v="A9GA8" i="0">
スピナーのサイズ。 可能な値: 小さい、デフォルト、大きい
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Spin.Spinning">
      <summary v="1LhzXV" i="0">
スピンがアクティブかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Spin.Tip">
      <summary v="4COwEx" i="0">
Spinに子供がいるときに説明コンテンツをカスタマイズする
</summary>
    </member>
    <member name="P:AntDesign.Spin.WrapperClassName">
      <summary v="nhVgE" i="0">
ラッパーのクラス名
</summary>
    </member>
    <member name="P:AntDesign.Statistic`1.CultureInfo">
      <summary v="FOm7E" i="0">
番号のフォーマットに使用するカルチャを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Statistic`1.DecimalSeparator">
      <summary v="100raw" i="0">
数字のフォーマットのための10代の区切り文字
</summary>
      <default value="." />
    </member>
    <member name="P:AntDesign.Statistic`1.GroupSeparator">
      <summary v="3mGnx4" i="0">
番号フォーマット用のグループ区切り
</summary>
      <default value="," />
    </member>
    <member name="P:AntDesign.Statistic`1.Precision">
      <summary v="1ToWcK" i="0">
丸めの小数点以下の桁数
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Prefix">
      <summary v="QddMl" i="0">
表示される値の前のプレフィックステキスト
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.PrefixTemplate">
      <summary v="3BYIbr" i="0">
表示される値の前のプレフィックスの内容
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Suffix">
      <summary v="UEDaQ" i="0">
表示された値の後のサフィックス文字列
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.SuffixTemplate">
      <summary v="47WnBH" i="0">
表示された値の後のサフィックスコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Title">
      <summary v="hnB1O" i="0">
値のタイトル文字列
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.TitleTemplate">
      <summary v="2QutkU" i="0">
値のタイトルコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.Value">
      <summary v="4Wq3k5" i="0">
表示のための値
</summary>
    </member>
    <member name="P:AntDesign.StatisticComponentBase`1.ValueStyle">
      <summary v="1w1aS8" i="0">
値表示のスタイル
</summary>
    </member>
    <member name="P:AntDesign.Step.Description">
      <summary v="1Rr90P" i="0">
ステップの説明
</summary>
      <default value="string.Empty" />
    </member>
    <member name="P:AntDesign.Step.DescriptionTemplate">
      <summary v="1Rr90P" i="0">
ステップの説明
</summary>
    </member>
    <member name="P:AntDesign.Step.Disabled">
      <summary v="6oEBN" i="0">
クリックを無効にする
</summary>
    </member>
    <member name="P:AntDesign.Step.Icon">
      <summary v="1zzOMG" i="0">
ステップのアイコン
</summary>
    </member>
    <member name="P:AntDesign.Step.OnClick">
      <summary v="2T5djG" i="0">
ステップをクリックするときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Step.Status">
      <summary v="3LMXV0" i="0">
ステータスを指定します。 設定しないと、現在のステップで自動的に設定されます。 可能な値: 待機、プロセス、終了、エラー
</summary>
    </member>
    <member name="P:AntDesign.Step.Subtitle">
      <summary v="4gJp2b" i="0">
ステップの字幕
</summary>
    </member>
    <member name="P:AntDesign.Step.SubtitleTemplate">
      <summary v="4gJp2b" i="0">
ステップの字幕
</summary>
    </member>
    <member name="P:AntDesign.Step.Title">
      <summary v="2h3qN9" i="0">
ステップのタイトル
</summary>
    </member>
    <member name="P:AntDesign.Step.TitleTemplate">
      <summary v="2h3qN9" i="0">
ステップのタイトル
</summary>
    </member>
    <member name="P:AntDesign.Steps.ChildContent">
      <summary v="4NRpsh" i="0">
子コンテンツにはステップ要素が含まれている必要があります
</summary>
    </member>
    <member name="P:AntDesign.Steps.Current">
      <summary v="3VXwMa" i="0">
现在のステップインデックス、ゼロベース
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Steps.Direction">
      <summary v="Uid6p" i="0">
ステップバーの方向
</summary>
      <default value="horizontal" />
    </member>
    <member name="P:AntDesign.Steps.LabelPlacement">
      <summary v="2J8HO0" i="0">
タイトルと説明を水平または垂直に配置する
</summary>
      <default value="horizontal" />
    </member>
    <member name="P:AntDesign.Steps.OnChange">
      <summary v="91zLV" i="0">
ステップが変更されたときにコールバックが実行されます。 に変更するステップのインデックスを受け取りました
</summary>
    </member>
    <member name="P:AntDesign.Steps.Percent">
      <summary v="6qEoh" i="0">
現在のステップのパーセント表示
</summary>
    </member>
    <member name="P:AntDesign.Steps.ProgressDot">
      <summary v="VTRIa" i="0">
進行状況ドットのカスタムレンダリング。 また、設定されている場合はShowProgressDotをtrueに設定します。
</summary>
    </member>
    <member name="P:AntDesign.Steps.ShowProgressDot">
      <summary v="2sd3f5" i="0">
タイトル、説明、アイコンなどとは対照的に進行状況のドットを表示する
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Steps.Size">
      <summary v="2F0Jjf" i="0">
ステップのサイズ。 可能な値: デフォルト、小さい
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Steps.StartIndex">
      <summary v="SyTzo" i="0">
開始ステップインデックス
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Steps.Status">
      <summary v="4Oerp9" i="0">
現在のステップのステータス。 可能な値: 待機、プロセス、終了、エラー
</summary>
      <default value="process" />
    </member>
    <member name="P:AntDesign.Steps.Type">
      <summary v="4Rw5SS" i="0">
ステップのタイプ。 可能な値: デフォルト、ナビゲーション
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.SubMenu.ChildContent">
      <summary v="3nyrbf" i="0">
SubMenusまたはSubMenu项目
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.Disabled">
      <summary v="t289t" i="0">
SubMenuが無効かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SubMenu.IsOpen">
      <summary v="fF7BB" i="0">
サブメニューのオープン状態
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.SubMenu.Key">
      <summary v="3gCZC4" i="0">
サブメニューの一意のID
</summary>
      <default value="Uniquely Generated ID" />
    </member>
    <member name="P:AntDesign.SubMenu.OnTitleClick">
      <summary v="31eptA" i="0">
サブメニューのタイトルがクリックされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.Placement">
      <summary v="4XFNwR" i="0">
メニュー配置
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.PopupClassName">
      <summary v="40rw5P" i="0">
Popupのクラス名
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.Title">
      <summary v="22Q5W6" i="0">
タイトル
</summary>
    </member>
    <member name="P:AntDesign.SubMenu.TitleTemplate">
      <summary v="4fNdtM" i="0">
タイトルテンプレート
</summary>
    </member>
    <member name="P:AntDesign.SummaryCell.CellRender">
      <summary v="ekqlz" i="0">
セルの内容を设定します。
</summary>
    </member>
    <member name="P:AntDesign.SummaryRow.ChildContent">
      <summary v="5blj7" i="0">
サマリー行の内容。
</summary>
    </member>
    <member name="P:AntDesign.Switch.CheckedChildren">
      <summary v="1pNxlQ" i="0">
チェック時にスイッチ内に表示される文字列がtrue
</summary>
    </member>
    <member name="P:AntDesign.Switch.CheckedChildrenTemplate">
      <summary v="1vABV5" i="0">
チェック時にスイッチ内に表示されるコンテンツはtrueです。 優先順位を引き継ぐ<see cref="P:AntDesign.Switch.CheckedChildren" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Switch.Control">
      <summary v="zkBSn" i="0">
Trueの場合、スイッチのステータスはクリックイベントに基づいてデータを自動的に変更しなくなります。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Switch.Loading">
      <summary v="3n4ne7" i="0">
スイッチがロードされているかどうか。 Trueのときにハンドルにスピナーを表示します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Switch.OnClick">
      <summary v="3Ze3uW" i="0">
スイッチがクリックされたときにコールバックが実行されます。 と組み合わせて使用した場合<see cref="P:AntDesign.Switch.Control" />それはスイッチを手動で制御することを可能にします。
</summary>
    </member>
    <member name="P:AntDesign.Switch.UnCheckedChildren">
      <summary v="4MeTYV" i="0">
チェック時にスイッチ内に表示される文字列はfalseです。
</summary>
    </member>
    <member name="P:AntDesign.Switch.UnCheckedChildrenTemplate">
      <summary v="1SY6ug" i="0">
チェック時にスイッチ内に表示される内容はfalseです。 優先順位を引き継ぐ<see cref="P:AntDesign.Switch.UnCheckedChildren" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Bordered">
      <summary v="1LMUif" i="0">
ボーダーテーブルかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.ChildContent">
      <summary v="3IVwhS" i="0">
テーブルの内容。 通常は含まれます<see cref="T:AntDesign.PropertyColumn`2" />と<see cref="T:AntDesign.ActionColumn" />要素を使用します。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ColumnDefinitions">
      <summary v="3Pyc6Q" i="0">
列定义のテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DataSource">
      <summary v="CBosf" i="0">
テーブルに表示するデータ
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DefaultExpandAllRows">
      <summary v="1loluX" i="0">
最初に、すべての行を拡大するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Table`1.DefaultExpandMaxLevel">
      <summary v="1EN01t" i="0">
DefaultExpandAllRowsを使用する場合の最大拡張レベル。
この属性は、ツリーレコードに円形参照があるときに無限ループを回避するために使用されます。
デフォルト値は4です。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.EmptyTemplate">
      <summary v="o07VQ" i="0">
テーブルが空のときに空のテンプレートをカスタマイズする
</summary>
    </member>
    <member name="P:AntDesign.Table`1.EnableVirtualization">
      <summary v="39WGkE" i="0">
仮想化機能を有効にするかどうかは、のためにのみ機能します。 NET 5以上
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ExpandedRowClassName">
      <summary v="27l4ze" i="0">
展開時に特定の行のクラス名を決定する関数
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ExpandIconColumnIndex">
      <summary v="UFUZq" i="0">
カスタム展開アイコンが配置されている列のインデックス
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Table`1.ExpandTemplate">
      <summary v="3Vh1v8" i="0">
行が展開されたときに表示するテンプレートの使用
</summary>
    </member>
    <member name="P:AntDesign.Table`1.FieldFilterTypeResolver">
      <summary v="1AcXEL" i="0">
フィールドフィルタータイプのリゾルバーの設定
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Footer">
      <summary v="4UgrBC" i="0">
フッターテキスト
</summary>
    </member>
    <member name="P:AntDesign.Table`1.FooterTemplate">
      <summary v="6Si86" i="0">
フッターコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Table`1.GroupFooterTemplate">
      <summary v="25UYhp" i="0">
グループ化ブロックのフッターのテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Table`1.GroupTitleTemplate">
      <summary v="3nZ4NJ" i="0">
グループ化ブロックのヘッダーのテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Table`1.HeaderTemplate">
      <summary v="1ER2BD" i="0">
ヘッダーのテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Table`1.HidePagination">
      <summary v="G9Z3B" i="0">
ページ分割を非表示にするかどうか
</summary>
    </member>
    <member name="P:AntDesign.Table`1.IndentSize">
      <summary v="0TUTH" i="0">
ツリーデータを表示するとき、インデントの各レベルの幅 (px)
</summary>
      <default value="15" />
    </member>
    <member name="P:AntDesign.Table`1.Loading">
      <summary v="1lDJa" i="0">
テーブルの読み込みですか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.Locale">
      <summary v="3hZfyT" i="0">
現在、ソート、フィルタリング、空のデータコピーライティングを含むデフォルトのコピーライティング設定
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnChange">
      <summary v="1vFewv" i="0">
ページング、ソート、およびフィルタリングの変更時に実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnExpand">
      <summary v="1wBZhl" i="0">
行が拡大したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnHeaderRow">
      <summary v="1uX0dO" i="0">
ヘッダー行属性の設定
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnPageIndexChange">
      <inheritdoc cref="P:AntDesign.Table`1.PageIndexChanged" />
    </member>
    <member name="P:AntDesign.Table`1.OnPageSizeChange">
      <inheritdoc cref="P:AntDesign.Table`1.PageSizeChanged" />
    </member>
    <member name="P:AntDesign.Table`1.OnRow">
      <summary v="4cKEW3" i="0">
行属性の設定
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnRowClick">
      <summary v="3Eo0u2" i="0">
行がクリックされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.OnSelectAll">
      <summary v="1RBgQO" i="0">
SelectAllボタンをクリックしたときにコールバックが実行されます。<br />
これは、テーブルが仮想化されているとき、または現在のページに表示されていないときにすべての行を選択するのに役立ちます。
<para>
引数は、すべての行を選択する場合はtrue、すべての行を選択解除する場合はfalseです。
</para></summary>
    </member>
    <member name="P:AntDesign.Table`1.PageIndex">
      <summary v="4ZJTqU" i="0">
現在表示されているページ
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Table`1.PageIndexChanged">
      <summary v="9ZKHV" i="0">
現在表示されているページが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.PageSize">
      <summary v="34nae" i="0">
1ページあたりのレコード数
</summary>
      <default value="10" />
    </member>
    <member name="P:AntDesign.Table`1.PageSizeChanged">
      <summary v="19QPKZ" i="0">
ページサイズの変更時に実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.PaginationPosition">
      <summary v="7icTY" i="0">
ページ分割の位置。 有効な値: topLeft、topCenter、topRight、bottomLeft、bottomCenter、bottomRight
</summary>
      <default value="bottomRight" />
    </member>
    <member name="P:AntDesign.Table`1.PaginationTemplate">
      <summary v="23S5vB" i="0">
ページ分割用のカスタムレンダリング
</summary>
    </member>
    <member name="P:AntDesign.Table`1.RemoteDataSource">
      <summary v="2wTRYK" i="0">
より複雑なユースケースのためにデータソースがリモートであるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.RerenderStrategy">
      <summary v="ye1Q5" i="0">
テーブルのレンダモード。 「」をご参照ください。<see cref="!:AntDesign.RenderMode" />詳細についてはドキュメント。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Resizable">
      <summary v="3IDB7H" i="0">
サイズ変更可能な列の有効化
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Responsive">
      <summary v="2hAkU4" i="0">
Trueに設定し、画面幅が960px未満の場合、テーブルは小画面モードに切り替わります。
小画面モードでは、現在、特定の機能のみがサポートされており、グループ、拡張列、ツリーデータ、サマリーセルなどの一部の機能を含むテーブルでは、スタイリングの誤りが発生します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Table`1.RowClassName">
      <summary v="3pOLIx" i="0">
特定の行のクラス名を決定する関数
</summary>
    </member>
    <member name="P:AntDesign.Table`1.RowExpandable">
      <summary v="37RV6v" i="0">
特定の行が拡張可能かどうかを判断する関数
</summary>
      <default value="true for any rows" />
    </member>
    <member name="P:AntDesign.Table`1.RowKey">
      <summary v="2m2gKF" i="0">
各行の识别子を指定する
</summary>
    </member>
    <member name="P:AntDesign.Table`1.RowTemplate">
      <summary v="2o12Me" i="0">
行のテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ScrollBarWidth">
      <summary v="2IBGt2" i="0">
スクロールバーの幅
</summary>
      <default value="17px" />
    </member>
    <member name="P:AntDesign.Table`1.ScrollX">
      <summary v="bAfF5" i="0">
水平スクロールを設定し、スクロール領域の幅を指定するために使用することもでき、ピクセル値、パーセンテージとして設定することができます
</summary>
    </member>
    <member name="P:AntDesign.Table`1.ScrollY">
      <summary v="uxdHk" i="0">
垂直スクロールを設定し、スクロール領域の高さを指定するために使用することもでき、ピクセル値として設定することができます
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SelectedRows">
      <summary v="LSD8Z" i="0">
ページ間で選択された行
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SelectedRowsChanged">
      <summary v="4UwGA4" i="0">
選択した行が変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Size">
      <summary v="226VxJ" i="0">
テーブルサイズ
</summary>
    </member>
    <member name="P:AntDesign.Table`1.SortDirections">
      <summary v="3x2HG" i="0">
テーブルのsortDirectionsをカバーする、サポートされているソート方法
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TableLayout">
      <summary v="2shcM1" i="0">
Table要素のtable-layout属性が固定に設定されているということは、内容が列のレイアウトに影響を与えないことを意味します。
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Title">
      <summary v="2PNMY0" i="0">
表タイトルテキスト
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TitleTemplate">
      <summary v="1IJDZG" i="0">
テーブルタイトルの内容
</summary>
    </member>
    <member name="P:AntDesign.Table`1.Total">
      <summary v="4dTgb8" i="0">
合計レコード数
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TotalChanged">
      <summary v="1G9Vkx" i="0">
合計レコードが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Table`1.TreeChildren">
      <summary v="2Lkbct" i="0">
子供ツリーアイテム
</summary>
      <default value="Enumerable.Empty&lt;TItem&gt;()" />
    </member>
    <member name="P:AntDesign.TableFilter.FilterCompareOperator">
      <summary v="1pVhjI" i="0">
フィルターアイテムでサポートされている比較演算子
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.FilterCondition">
      <summary v="3c9EWO" i="0">
フィルターアイテムの条件
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.Selected">
      <summary v="f3fJh" i="0">
フィルターアイテムが選択されているかどうか
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.Text">
      <summary v="1bRTmA" i="0">
フィルターアイテムの表示テキスト
</summary>
    </member>
    <member name="P:AntDesign.TableFilter.Value">
      <summary v="2vfYmC" i="0">
フィルターアイテムの値
</summary>
    </member>
    <member name="P:AntDesign.TableModels.RowData`1.Children">
      <summary v="3jUogV" i="0">
子供の列の状態を保持する
</summary>
    </member>
    <member name="P:AntDesign.TabPane.Closable">
      <summary v="2MWupg" i="0">
タブが閉じることができる場合
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.TabPane.Disabled">
      <summary v="6z6hI" i="0">
タブが無効になっている場合
</summary>
    </member>
    <member name="P:AntDesign.TabPane.ForceRender">
      <summary v="2Cvjf8" i="0">
タブをクリックした後の怠惰なレンダリングではなく、タブ内のコンテンツの強制レンダリング
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TabPane.Key">
      <summary v="2YYIS2" i="0">
TabPaneのキー
</summary>
    </member>
    <member name="P:AntDesign.TabPane.Tab">
      <summary v="8N7Wf" i="0">
テキストを表示<see cref="T:AntDesign.TabPane" />の頭
</summary>
    </member>
    <member name="P:AntDesign.TabPane.TabContextMenu">
      <summary v="3rGTKq" i="0">
顧客コンテキストメニューのテンプレート
</summary>
    </member>
    <member name="P:AntDesign.TabPane.TabTemplate">
      <summary v="2CqtJc" i="0">
TabPaneの頭のテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Tabs.ActiveKey">
      <summary v="2FY5Zq" i="0">
現在<see cref="T:AntDesign.TabPane" />の<see cref="P:AntDesign.TabPane.Key" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.ActiveKeyChanged">
      <summary v="25YUE4" i="0">
アクティブなタブが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tabs.AfterTabCreated">
      <summary v="1PczkQ" i="0">
タブの作成後に実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Animated">
      <summary v="2fNQfe" i="0">
アニメーションでタブを変更するかどうか。 間だけ働く<see cref="P:AntDesign.Tabs.TabPosition" />=<see cref="F:AntDesign.TabPosition.Top" />または<see cref="F:AntDesign.TabPosition.Bottom" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.Centered">
      <summary v="2fDlGu" i="0">
タブが中央にあるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tabs.ChildContent">
      <summary v="3OcQpY" i="0">
タブのコンテンツ。 含める必要があります<c>TabPane</c>要素
</summary>
    </member>
    <member name="P:AntDesign.Tabs.DefaultActiveKey">
      <summary v="CcZho" i="0">
初期アクティブ<see cref="T:AntDesign.TabPane" />の<see cref="P:AntDesign.TabPane.Key" />の場合は、<see cref="P:AntDesign.Tabs.ActiveKey" />が設定されていません
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Draggable">
      <summary v="Xk18L" i="0">
タブをドラッグ可能にする
</summary>
    </member>
    <member name="P:AntDesign.Tabs.HideAdd">
      <summary v="3x3txU" i="0">
プラスアイコンを隠すかどうか。 間だけ働く<see cref="P:AntDesign.Tabs.Type" />=<see cref="F:AntDesign.TabType.EditableCard" /></summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tabs.InkBarAnimated">
      <summary v="3Ld9Bx" i="0">
インクバーがアニメーション化されているかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Tabs.OnAddClick">
      <summary v="2TbA35" i="0">
追加ボタンをクリックしたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnChange">
      <summary v="ozKGD" i="0">
アクティブなタブが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnClose">
      <summary v="24p9uY" i="0">
タブが閉じたときのコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tabs.OnEdit">
      <summary v="2pplmx" i="0">
タブが追加または削除されたときにコールバックが実行されます。 間だけ働く<see cref="P:AntDesign.Tabs.Type" />=<see cref="F:AntDesign.TabType.EditableCard" /></summary>
    </member>
    <member name="P:AntDesign.Tabs.OnTabClick">
      <summary v="nzs2r" i="0">
タブがクリックされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tabs.RenderTabBar">
      <summary v="4bb92P" i="0">
TabBarを交換する
</summary>
    </member>
    <member name="P:AntDesign.Tabs.Size">
      <summary v="2uRSg3" i="0">
プリセットタブバーのサイズ
</summary>
      <default value="TabSize.Default" />
    </member>
    <member name="P:AntDesign.Tabs.TabBarClass">
      <summary v="3e35Zi" i="0">
タブバーCSSクラス
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContent">
      <summary v="3x7TO1" i="0">
タブバーの追加コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContentLeft">
      <summary v="hMPJ4" i="0">
タブバーの左にある余分なコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarExtraContentRight">
      <summary v="31ffT1" i="0">
タブバーの右側にある追加コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabBarGutter">
      <summary v="2R1oV0" i="0">
タブ间のギャップ
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Tabs.TabBarStyle">
      <summary v="3aIVwY" i="0">
タブバースタイルオブジェクト
</summary>
    </member>
    <member name="P:AntDesign.Tabs.TabPosition">
      <summary v="4ceKgX" i="0">
タブの位置
</summary>
      <default value="TabPosition.Top" />
    </member>
    <member name="P:AntDesign.Tabs.Type">
      <summary v="sK3mA" i="0">
タブの基本スタイル
</summary>
      <default value="TabType.Line" />
    </member>
    <member name="P:AntDesign.Tag.Checkable">
      <summary v="4SrypX" i="0">
タグをチェックできるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tag.Checked">
      <summary v="420tmQ" i="0">
タグのチェックステータス
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tag.CheckedChanged">
      <summary v="1VfqF2" i="0">
タグがチェック/チェック解除されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tag.ChildContent">
      <summary v="4FUS9X" i="0">
タグの内容
</summary>
    </member>
    <member name="P:AntDesign.Tag.Closable">
      <summary v="E9gms" i="0">
タグを閉じることができるかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tag.Color">
      <summary v="2JUVUq" i="0">
タグの色。 定義済みの色 (文字列) のいずれかになります
またはhex色。
</summary>
      <default value="default" />
    </member>
    <member name="P:AntDesign.Tag.Icon">
      <summary v="21J6lk" i="0">
タグのアイコンを設定する
</summary>
    </member>
    <member name="P:AntDesign.Tag.IconTheme">
      <summary v="3RjsZn" i="0">
'Fill' | 'outline' | 'twotone';
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClick">
      <summary v="3I8uAB" i="0">
タグがクリックされたときに実行されるコールバック (呼び出されない)
アイコンを閉じるときにクリックされます)。
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClose">
      <summary v="2cb9Pq" i="0">
タグが閉じられたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tag.OnClosing">
      <summary v="3vb75u" i="0">
真の閉鎖の前にトリガーされ、閉鎖を防ぐことができます
</summary>
    </member>
    <member name="P:AntDesign.Tag.PresetColor">
      <summary v="4NrD3Z" i="0">
PresetColorリストからのタグカラー
</summary>
    </member>
    <member name="P:AntDesign.Tag.Visible">
      <summary v="1Wdmg" i="0">
タグが閉じているかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.TemplateComponentBase`1.Options">
      <summary v="11Cl1m" i="0">
外部からテンプレートを渡すことができるオプション
</summary>
    </member>
    <member name="P:AntDesign.Text.Keyboard">
      <summary v="1MGNYT" i="0">
キーボードスタイル
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TextArea.AutoSize">
      <summary v="SoSx4" i="0">
調整 (成長または縮小) します<c>テキストエリア</c>内容に従って。
と関連して働くことができます<see cref="P:AntDesign.TextArea.MaxRows" />と<see cref="P:AntDesign.TextArea.MinRows" />を参照してください。
Textarea HTML要素のサイズ変更属性をnoneに設定します。
</summary>
    </member>
    <member name="P:AntDesign.TextArea.DefaultToEmptyString">
      <summary v="41YTmi" i="0">
Trueの場合、値は空の文字列に設定されます。
Falseの場合、値は<c>Null</c>コンテンツが空または空白の場合。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TextArea.MaxRows">
      <summary v="nIkK8" i="0">
成長を許可しますが、表示されている行 = MaxRows (それ以上成長しない) の場合は停止します。
</summary>
      <default value="uint.MaxValue" />
    </member>
    <member name="P:AntDesign.TextArea.MinRows">
      <summary v="46kMS2" i="0">
縮小を許可しますが、表示されている行 = MinRows (それ以上縮小しない) の場合は停止します。
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.TextArea.OnResize">
      <summary v="1hVama" i="0">
サイズが変更されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.TextArea.Rows">
      <summary v="2RTodR" i="0">
行数で表されるTextAreaの高さを設定します。
</summary>
      <default value="3" />
    </member>
    <member name="P:AntDesign.TextArea.Value">
      <summary v="OQGwK" i="0">
TextAreaの値を取得または設定します。
</summary>
    </member>
    <member name="P:AntDesign.Timeline.ChildContent">
      <summary v="2DJvVC" i="0">
タイムラインの内容。 含める必要があります<c>TimelineItem</c>要素
</summary>
    </member>
    <member name="P:AntDesign.Timeline.Mode">
      <summary v="1jQQCt" i="0">
行がアイテムに関連する場所-左、右、または代替
</summary>
      <default value="left" />
    </member>
    <member name="P:AntDesign.Timeline.Pending">
      <summary v="1QyZP8" i="0">
最後のゴーストノードの存在またはその内容を設定する
</summary>
    </member>
    <member name="P:AntDesign.Timeline.PendingDot">
      <summary v="KQV85" i="0">
Pendingがtrueのときに最後のゴーストノードのドットを設定する
</summary>
    </member>
    <member name="P:AntDesign.Timeline.Reverse">
      <summary v="2F3fW1" i="0">
逆ノードかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TimelineItem.ChildContent">
      <summary v="Txx6j" i="0">
タイムライン项目の内容。
</summary>
    </member>
    <member name="P:AntDesign.TimelineItem.Color">
      <summary v="4M2ncs" i="0">
タイムラインアイテムの色。
</summary>
    </member>
    <member name="P:AntDesign.TimelineItem.Dot">
      <summary v="3oXArg" i="0">
タイムラインアイテムのドット。
</summary>
    </member>
    <member name="P:AntDesign.TimelineItem.Label">
      <summary v="1gWNcK" i="0">
タイムラインアイテムのラベル。
</summary>
    </member>
    <member name="P:AntDesign.Title.Level">
      <summary v="4M61RR" i="0">
ヘディングのレベル (ex: h1は1である)。 包括的に1〜4でなければなりません。 その範囲外の場合は、デフォルトで1に戻ります。
</summary>
      <default value="1" />
    </member>
    <member name="P:AntDesign.Tooltip.ArrowPointAtCenter">
      <summary v="7mOUS" i="0">
矢印がターゲットの中心に向けられているかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tooltip.MouseEnterDelay">
      <summary v="3jSDeO" i="0">
ツールチップがマウスに表示される前の秒単位の遅延
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Tooltip.MouseLeaveDelay">
      <summary v="2crCrt" i="0">
ツールチップがマウスに隠される前に、秒単位で遅延を残す
</summary>
      <default value="0.1" />
    </member>
    <member name="P:AntDesign.Tooltip.TabIndex">
      <summary v="385qzI" i="0">
ツールチップのタブインデックス
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.Tooltip.Title">
      <summary v="2L6F1p" i="0">
ツールチップに表示されるテキスト
</summary>
    </member>
    <member name="P:AntDesign.Tooltip.TitleTemplate">
      <summary v="3k54tB" i="0">
ツールチップに表示されるコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ChildContent">
      <summary v="2GRB5G" i="0">
子コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Transfer.DataSource">
      <summary v="7aVbP" i="0">
ソースデータの設定に使用されます。
この配列の一部である要素は、キーがに含まれる要素を除いて、左の列に存在します。<see cref="P:AntDesign.Transfer.TargetKeys" />を参照してください。
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Disabled">
      <summary v="A8fMN" i="0">
コンポーネントが無効かどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Transfer.Footer">
      <summary v="2iraGj" i="0">
各列のフッターに表示されるフッター文字列
</summary>
    </member>
    <member name="P:AntDesign.Transfer.FooterTemplate">
      <summary v="mUMhG" i="0">
各列のフッターに表示されるフッターの内容
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ListStyle">
      <summary v="Hovrn" i="0">
転送列のレンダリングに使用されるカスタムCSSスタイル
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Locale">
      <summary v="267djz" i="0">
テキストのローカリゼーションに使用されるLocacle
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnChange">
      <summary v="3WP5Tt" i="0">
アイテムが列を移動するときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnScroll">
      <summary v="2LBcow" i="0">
列がスクロールされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnSearch">
      <summary v="3gilvT" i="0">
列が検索されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.Transfer.OnSelectChange">
      <summary v="2jujnr" i="0">
選択したアイテムがいずれかの列で変更されたときに実行されるCallbac
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Operations">
      <summary v="3jNeD4" i="0">
操作のアイコンの横に、上から下に表示するラベル。 2要素の配列でなければなりません。
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Render">
      <summary v="3x7ERo" i="0">
列内のアイテムのカスタムレンダリング
</summary>
    </member>
    <member name="P:AntDesign.Transfer.SelectedKeys">
      <summary v="1HpVjB" i="0">
現在選択中のアイテム
</summary>
    </member>
    <member name="P:AntDesign.Transfer.ShowSearch">
      <summary v="2FWr8b" i="0">
列に検索バーを表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Transfer.ShowSelectAll">
      <summary v="HvY1e" i="0">
列内のすべてのボタンを選択表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Transfer.TargetKeys">
      <summary v="696A3" i="0">
右の列にリストされている要素のキー
</summary>
    </member>
    <member name="P:AntDesign.Transfer.Titles">
      <summary v="2Jma60" i="0">
左から右への列のタイトル。 2要素の配列でなければなりません。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.BlockNode">
      <summary v="1C1tz" i="0">
TreeNodeが残りの水平スペースを埋めるかどうか
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Checkable">
      <summary v="2AZD7w" i="0">
ノードの前にチェックボックスを追加する
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckableExpression">
      <summary v="rEuK6" i="0">
チェック可能なノードを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckedKeys">
      <summary v="2X1ZjM" i="0">
チェックされたキー
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckedKeysChanged">
      <summary v="14s0ey" i="0">
@ Bind-CheckedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckOnClickNode">
      <summary v="1ewR9Z" i="0">
チェック可能な場合は、 [TreeNodeTitle] をクリックしてノードをチェックまたはチェック解除します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.CheckStrictly">
      <summary v="42UEkh" i="0">
TreeNodeを正確にチェックします。親treeNodeと子treeNodeは関連付けられていません
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildContent">
      <summary v="2jczzo" i="0">
ツリーのノード。 これを使用して、<see cref="P:AntDesign.Tree`1.DataSource" />、または<see cref="P:AntDesign.Tree`1.Nodes" /></summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildNodes">
      <summary v="1SoIAs" i="0">
ツリーchildnodes
ノードが初期化されたときに値を追加する
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ChildrenExpression">
      <summary v="3TPg7j" i="0">
ノードの子を返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DataSource">
      <summary v="1OoQzZ" i="0">
ツリーのデータソース。 子供、葉、タイトルなどを取得するための式を提供することにより、任意のカスタムオブジェクトタイプのリストにすることができます。これまたは<see cref="P:AntDesign.Tree`1.ChildContent" />
これを使用して、<see cref="P:AntDesign.Tree`1.Nodes" />、または<see cref="P:AntDesign.Tree`1.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultCheckedKeys">
      <summary v="18LgiI" i="0">
デフォルトチェックされたtreeNodesのキーを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandAll">
      <summary v="3JETK1" i="0">
拡張されたすべてのノードにデフォルトするかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandedKeys">
      <summary v="2sJkXY" i="0">
指定されたツリーノードをデフォルトで展開します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DefaultExpandParent">
      <summary v="lOqhO" i="0">
親ノードはデフォルトで展開されます
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DisableCheckKeys">
      <summary v="1cxA3L" i="0">
ノードチェックボックスの無効化
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Disabled">
      <summary v="1QaL60" i="0">
ツリーは無効です
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DisabledExpression">
      <summary v="4QpUNh" i="0">
無効なノードを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Draggable">
      <summary v="1IFV7v" i="0">
ノードがドラッグ &amp; ドロップを許可するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.DragItem">
      <summary v="2APWtc" i="0">
当前子の项
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ExpandedKeys">
      <summary v="4d5ThB" i="0">
(制御) 指定されたツリーノードを拡張します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ExpandOnClickNode">
      <summary v="1DJafz" i="0">
[TreeNodeTitle] をクリックしてノードを展開または折りたたむ
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IconExpression">
      <summary v="37B3eq" i="0">
ノードアイコンを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IndentTemplate">
      <summary v="3FAxcU" i="0">
インデントテンプレート
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.IsLeafExpression">
      <summary v="3OYLNx" i="0">
式がリーフノードであるかどうかを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.KeyExpression">
      <summary v="3F1pUh" i="0">
ノードのキーを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.MatchedClass">
      <summary v="1w8FmP" i="0">
検索に一致するノードの部分のクラス名
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.MatchedStyle">
      <summary v="1fhXCx" i="0">
検索に一致するノードの一部のスタイル
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Multiple">
      <summary v="2dQlNQ" i="0">
複数のtreeNodesを選択できます
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Nodes">
      <summary v="3dAAVf" i="0">
ツリーのノード。 これを使用して、<see cref="P:AntDesign.Tree`1.DataSource" />、または<see cref="P:AntDesign.Tree`1.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnCheck">
      <summary v="8TDXd" i="0">
ツリーノードのコールバックを確認しました
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnClick">
      <summary v="3qs9fw" i="0">
ツリーノードのコールバックをクリックします。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnContextMenu">
      <summary v="27GI7h" i="0">
ツリーノードの右クリックコールバック
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDblClick">
      <summary v="uIvkf" i="0">
ノードのコールバックをダブルクリックします。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragEnd">
      <summary v="1L8CiD" i="0">
ドラッグアンドドロップ終了コールバック
</summary>
      <remarks>this callback method must be set</remarks>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragEnter">
      <summary v="2O4Pxh" i="0">
リリース可能なターゲットにドラッグアンドドロップするときに呼び出される
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragLeave">
      <summary v="1dobxG" i="0">
リリース可能なターゲットからドラッグアンドドロップするときに呼び出される
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDragStart">
      <summary v="31ndc9" i="0">
ドラッグ &amp; ドロップが始まると呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnDrop">
      <summary v="1yoUYO" i="0">
ドラッグアンドドロップドロップが成功したときにトリガーされます
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnExpandChanged">
      <summary v="2pqvwr" i="0">
拡張ツリーノードアイコンをクリックしてコールバックします
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.OnNodeLoadDelayAsync">
      <summary v="3A2c9f" i="0">
怠惰なロードコールバック
</summary>
      <remarks>You must use async and the return type is Task, otherwise you may experience load lag and display problems</remarks>
    </member>
    <member name="P:AntDesign.Tree`1.SearchExpression">
      <summary v="2HkAJ4" i="0">
ノードが検索に一致するかどうかを示すために使用される関数
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SearchValue">
      <summary v="3gNRzP" i="0">
検索値
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.Selectable">
      <summary v="1x7lyW" i="0">
選択できるかどうか
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedData">
      <summary v="2vGOEn" i="0">
@ Bing-SelectedData
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDataChanged">
      <summary v="1Fm7kf" i="0">
@ Bind-SelectedData
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDatas">
      <summary v="M11OA" i="0">
選択したデータセット
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedDatasChanged">
      <summary v="2eAck" i="0">
@ Bind-SelectedDatas
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKey">
      <summary v="3KNPSJ" i="0">
@ Bind-SelectedKey
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeyChanged">
      <summary v="3ijVsO" i="0">
@ Bind-SelectedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeys">
      <summary v="4JgjlP" i="0">
選択されたキー
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedKeysChanged">
      <summary v="3ijVsO" i="0">
@ Bind-SelectedKeys
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNode">
      <summary v="1nxXOb" i="0">
@ Bind-SelectedNode
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodeChanged">
      <summary v="1nxXOb" i="0">
@ Bind-SelectedNode
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodes">
      <summary v="23S8go" i="0">
選択したノードのコレクション
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SelectedNodesChanged">
      <summary v="4BHVVI" i="0">
@ Bind-SelectedNodes
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowExpand">
      <summary v="T2Gv1" i="0">
ノードの前に拡張アイコンを表示します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowIcon">
      <summary v="33jgCa" i="0">
Show treeNodeアイコン
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowLeafIcon">
      <summary v="32TlPX" i="0">
Cotyledonのアイコンを表示します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.ShowLine">
      <summary v="2Gh5TZ" i="0">
接続ラインを表示します
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SwitcherIcon">
      <summary v="3bRdwq" i="0">
スイッチャーのアイコンタイプの特定
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.SwitcherIconTemplate">
      <summary v="4OLQVz" i="0">
トグルアイコンテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleExpression">
      <summary v="17Cqdr" i="0">
ノードのテキストを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleIconTemplate">
      <summary v="2cC9bk" i="0">
アイコンテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.Tree`1.TitleTemplate">
      <summary v="a0sZ5" i="0">
ヘッダーテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.DropBelow">
      <summary v="34DM5g" i="0">
ドラッグノードを兄弟 (下) またはターゲットノードの子としてドロップするかどうか。
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.OriginalEvent">
      <summary v="15L2Au" i="0">
原生事
</summary>
    </member>
    <member name="P:AntDesign.TreeEventArgs`1.TargetNode">
      <summary v="1F0Y2X" i="0">
目标の节约
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.SelfNode">
      <summary v="4bZ677" i="0">
現在のノード
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.TreeComponent">
      <summary v="1uvHBZ" i="0">
ルートツリー
</summary>
    </member>
    <member name="P:AntDesign.TreeIndent`1.TreeLevel">
      <summary v="3REszw" i="0">
現在のノードの左インデントレベル
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Checked">
      <summary v="1ZPUcx" i="0">
TreeNodeをチェックするかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DataItem">
      <summary v="1tusi2" i="0">
ノードのデータです。データソースのデータアイテムです。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DisableCheckbox">
      <summary v="2pFfjr" i="0">
チェックボックスを無効にする
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Disabled">
      <summary v="2mtrZP" i="0">
無効状態は親ノードの対象となります。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Draggable">
      <summary v="Kzcj4" i="0">
ノードがドラッグ可能かどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DragTarget">
      <summary v="2I6Teb" i="0">
ターゲットを解放するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.DragTargetBottom">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.Expanded">
      <summary v="1dJKzH" i="0">
ノードを展開するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.HasChildMatched">
      <summary v="2XEPG2" i="0">
子节なりに存在する足なりにします。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.HasChildNodes">
      <summary v="4es4zi" i="0">
子ノードが存在するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Icon">
      <summary v="f80m3" i="0">
ノードの前のアイコン
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IconTemplate">
      <summary v="SBfDQ" i="0">
アイコンテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IsLastNode">
      <summary v="4cJ424" i="0">
同じレベルのノードの最後のノードかどうかを判断します。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.IsLeaf">
      <summary v="3cKGhc" i="0">
リーフノードかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Key">
      <summary v="25YQXT" i="0">
現在のノードの一意の識別子名を指定します。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Loading">
      <summary v="3cafGE" i="0">
ロード状態が非同期かどうか (拡張アイコンの表示に影響します)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Matched">
      <summary v="sRjSt" i="0">
Title SearchValue (searchValue)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.NodeIndex">
      <summary v="40g1H9" i="0">
親ノードの子ノードリストにインデックスを記録します。
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Nodes">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.ParentNode">
      <summary v="3xV3Wk" i="0">
一级の节约
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.RealDisplay">
      <summary v="1jnI3j" i="0">
実際の拡張状態は、パス上に拡張されたノードがある限り、下のすべての折り目
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.Selected">
      <summary v="3XEjb8" i="0">
選択したかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SelectedChanged">
      <summary v="8GEL1" i="0">
選択した状態が変化したときにトリガーされる
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherClose">
      <summary v="iICRj" i="0">
スイッチャーが近い
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherIcon">
      <summary v="3kskFT" i="0">
スイッチャーのアイコンを特定する
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherIconTemplate">
      <summary v="4d4cOy" i="0">
Switcherアイコンテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.SwitcherOpen">
      <summary v="TpcNo" i="0">
スイッチャーが開かれる
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TargetContainer">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNode`1.Title">
      <summary v="2oiYJI" i="0">
ノードのタイトル
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TitleTemplate">
      <summary v="cUoGl" i="0">
タイトルテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TreeComponent">
      <summary v="4SG0pP" i="0">
树本 (树本)
</summary>
    </member>
    <member name="P:AntDesign.TreeNode`1.TreeLevel">
      <summary v="1c26WG" i="0">
現在のノードレベル
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.OnCheckBoxClick">
      <summary v="4YDLmu" i="0">
チェックボックスをクリックしてトリガー
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.SelfNode">
      <summary v="4bZ677" i="0">
現在のノード
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeCheckbox`1.TreeComponent">
      <summary v="1uvHBZ" i="0">
ルートツリー
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.IsSwitcherClose">
      <summary v="3ur2B7" i="0">
节関闭形态
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.IsSwitcherOpen">
      <summary v="2iaKt5" i="0">
节形
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.OnSwitcherClick">
      <summary v="42SvOx" i="0">
スイッチャーがクリックされたときのトリガー
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.SelfNode">
      <summary v="zQzEv" i="0">
节约点
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeSwitcher`1.TreeComponent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeNodeTitle`1.SelfNode">
      <summary v="zQzEv" i="0">
节约点
</summary>
    </member>
    <member name="P:AntDesign.TreeNodeTitle`1.TreeComponent">
      <summary v="4SG0pP" i="0">
树本 (树本)
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.CheckableExpression">
      <summary v="rEuK6" i="0">
チェック可能なノードを返すメソッドを指定します。
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.CheckOnClickNode">
      <summary v="3Xihj4" i="0">
ユーザーがツリーノードをクリックしたときにチェックボックスをオンにするかどうか。
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ChildContent">
      <summary v="WHEWV" i="0">
これを使用して、ツリーのコンテンツを設定します。 これまたは<see cref="P:AntDesign.TreeSelect`2.DataSource" /></summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ChildrenExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.ChildrenExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.DataSource">
      <summary v="4O57kk" i="0">
ツリーのデータソース。 子供、葉、タイトルなどを取得するための式を提供することにより、任意のカスタムオブジェクトタイプのリストにすることができます。これまたは<see cref="P:AntDesign.TreeSelect`2.ChildContent" /></summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.DisabledExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.DisabledExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.DropdownMatchSelectWidth">
      <summary v="4OMcg4" i="0">
ドロップダウンメニューと選択入力が同じ幅かどうかを判断します。 デフォルトセットmin-widthは入力と同じです。 値がselect width未満の場合は無視されます。 Falseは仮想スクロールを無効にします
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.DropdownMaxWidth">
      <summary v="17lNaV" i="0">
ドロップダウンの最大幅
</summary>
      <default value="auto" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.DropdownStyle">
      <summary v="4Y9qn5" i="0">
ドロップダウンメニューのスタイルを設定する
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ExpandedKeys">
      <summary v="4d5ThB" i="0">
(制御) 指定されたツリーノードを拡張します。
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ExpandOnClickNode">
      <summary v="3iTArp" i="0">
ツリーノードをクリックしたときに親ノードを展開するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.IconExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.IconExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.IsLeafExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.IsLeafExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.KeyExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.KeyExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.MatchedClass">
      <summary v="4Wo8ua" i="0">
一致したテキストのクラスを設定する
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.MatchedStyle">
      <summary v="1g7wFc" i="0">
一致したテキストのスタイルを設定する
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.Multiple">
      <summary v="29cUY1" i="0">
複数の選択を許可するかどうか
</summary>
      <default value="false unless TreeCheckable is true" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.Nodes">
      <summary v="4d9JEX" i="0">
ツリーにレンダリングするノード。 これまたは<see cref="P:AntDesign.TreeSelect`2.DataSource" /></summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnBlur">
      <summary v="3bGGfe" i="0">
コンポーネントがフォーカスを失うときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnNodeLoadDelayAsync">
      <summary v="KvSIU" i="0">
ツリーノードがロードされたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnSearch">
      <summary v="JFgop" i="0">
ユーザーが値を検索したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.OnTreeNodeSelect">
      <summary v="2VJvZ2" i="0">
ツリーノードが選択されたときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.PopupContainerMaxHeight">
      <summary v="3sfG9X" i="0">
ドロップダウンの最大高さ
</summary>
      <default value="256px" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.RootValue">
      <summary v="3MRNKN" i="0">
ルートノードの値
</summary>
      <default value="0" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.SearchExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.SearchExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowCheckedStrategy">
      <summary v="3JoB00" i="0">
TreeCheckableがtrue、TreeCheckStrictlyがfalseの場合、チェックされた値を表示する方法を指定します。
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowIcon">
      <summary v="33jgCa" i="0">
Show treeNodeアイコン
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowLeafIcon">
      <summary v="2eEX0s" i="0">
葉のアイコンを表示するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.ShowTreeLine">
      <summary v="1Tdbf6" i="0">
ツリーに線を表示するかどうか
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleExpression">
      <inheritdoc cref="P:AntDesign.Tree`1.TitleExpression" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleIconTemplate">
      <summary v="2cC9bk" i="0">
アイコンテンプレートのカスタマイズ
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TitleTemplate">
      <summary v="SeZoa" i="0">
ツリーノードのタイトルをレンダリングするテンプレートを取得または設定する
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeAttributes">
      <summary v="SUnIA" i="0">
ツリーの属性を设定する
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeCheckable">
      <summary v="4FImRg" i="0">
ツリーノードを選択できるかどうかにかかわらず、そのノードの下にあるすべてのリーフを選択します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeCheckStrictly">
      <summary v="42UEkh" i="0">
TreeNodeを正確にチェックします。親treeNodeと子treeNodeは関連付けられていません
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeComponent">
      <summary v="0000" i="0" />
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeDefaultExpandAll">
      <summary v="4NU2Ff" i="0">
デフォルトですべてのノードを拡張するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeDefaultExpandedKeys">
      <summary v="1uUN1I" i="0">
デフォルトの拡張ツリーノードのキーを設定する
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.TreeDefaultExpandParent">
      <summary v="1Akg7l" i="0">
デフォルトで親ノードを拡張するかどうか
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.Value">
      <summary v="JBtJr" i="0">
選択した値
</summary>
    </member>
    <member name="P:AntDesign.TreeSelect`2.Values">
      <summary v="2VVlhe" i="0">
選択された値
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.ChildContent">
      <summary v="XrT0s" i="0">
ラップするコンテンツ
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Code">
      <summary v="48jYss" i="0">
コードスタイル
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.Copyable">
      <summary v="3JnO3B" i="0">
テキストをコピーできるかどうか。 Trueの場合、テキストの最後にコピーアイコンを追加します。
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.CopyConfig">
      <summary v="dPQTu" i="0">
コピー時に何が起こるかを設定する
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Delete">
      <summary v="3mriDF" i="0">
Strikethroughスタイル
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.Disabled">
      <summary v="4Rlmsi" i="0">
無効なスタイル
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.Editable">
      <summary v="15h9CA" i="0">
編集可能かどうかの制御
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.EditConfig">
      <summary v="1rQiRV" i="0">
編集の設定
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Ellipsis">
      <summary v="cKw1w" i="0">
テキストがオーバーフローしたときに省略記号を表示します。 省略記号が必要なときに幅を設定する必要があります
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.TypographyBase.EllipsisConfig">
      <summary v="lQCLK" i="0">
省略記号の設定
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Mark">
      <summary v="3IJ74g" i="0">
テキストをハイライトする
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.OnChange">
      <summary v="Qti1p" i="0">
ユーザーがコンテンツを編集したときに実行されるコールバック
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Strong">
      <summary v="2hvhDX" i="0">
テキストを太字にする
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Type">
      <summary v="1xNhe1" i="0">
コンテンツタイプ-スタイルテキスト。 可能な値: セカンダリ、警告、危険
</summary>
    </member>
    <member name="P:AntDesign.TypographyBase.Underline">
      <summary v="2NXSND" i="0">
テキストの下線
</summary>
    </member>
    <member name="P:AntDesign.Upload.Accept">
      <summary v="4U1iyO" i="0">
受け入れることができるファイルタイプ。
「」をご参照ください。<see href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/file#accept">入力の受け入れる属性</see></summary>
    </member>
    <member name="P:AntDesign.Upload.Action">
      <summary v="4ZQ1hI" i="0">
URLのアップロード
</summary>
    </member>
    <member name="P:AntDesign.Upload.BeforeAllUpload">
      <summary v="3n9ogc" i="0">
全体的なアップロードを開始する前に実行されるフック機能。
Falseが返された場合、アップロードは停止されます。
警告: この機能はIE9ではサポートされていません。
</summary>
    </member>
    <member name="P:AntDesign.Upload.BeforeAllUploadAsync">
      <summary v="3n9ogc" i="0">
全体的なアップロードを開始する前に実行されるフック機能。
Falseが返された場合、アップロードは停止されます。
警告: この機能はIE9ではサポートされていません。
</summary>
    </member>
    <member name="P:AntDesign.Upload.BeforeUpload">
      <summary v="4MR3Id" i="0">
各ファイルをアップロードする前に実行される関数。
Falseが返された場合、アップロードは停止されます。
警告: この機能はIE9ではサポートされていません。
</summary>
    </member>
    <member name="P:AntDesign.Upload.ChildContent">
      <summary v="4Mu2Kf" i="0">
アップロードボタンの内容
</summary>
    </member>
    <member name="P:AntDesign.Upload.Data">
      <summary v="4FPCOF" i="0">
ファイルと共にアップロードされる追加データ
</summary>
    </member>
    <member name="P:AntDesign.Upload.DefaultFileList">
      <summary v="jWgSS" i="0">
アップロードされたファイルのデフォルトリスト。
</summary>
    </member>
    <member name="P:AntDesign.Upload.Directory">
      <summary v="2feHVC" i="0">
ディレクトリ全体のアップロードをサポートします。
「」をご参照ください。<see href="https://caniuse.com/input-file-directory">使用できますか</see>ブラウザのサポート
</summary>
    </member>
    <member name="P:AntDesign.Upload.Disabled">
      <summary v="4V454e" i="0">
アップロードの無効化ボタン
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Upload.Drag">
      <summary v="YNUzo" i="0">
ファイルのドラッグアンドドロップを許可するかどうか。
</summary>
    </member>
    <member name="P:AntDesign.Upload.FileList">
      <summary v="4HrkGy" i="0">
アップロードされたファイルのリストを取得または設定する
</summary>
    </member>
    <member name="P:AntDesign.Upload.FileListChanged">
      <summary v="wU4fP" i="0">
ファイルリストが変更されたときに実行されるイベントコールバック
</summary>
    </member>
    <member name="P:AntDesign.Upload.Headers">
      <summary v="Mg2sA" i="0">
IE10より上で有効なリクエストヘッダーを設定します。
</summary>
    </member>
    <member name="P:AntDesign.Upload.ListType">
      <summary v="2k0mCy" i="0">
内蔵のスタイルシート、3つのタイプのサポート:<c>テキスト</c><c>画像</c>または<c>写真カード</c></summary>
      <default value="text" />
    </member>
    <member name="P:AntDesign.Upload.Locale">
      <summary v="41gqfH" i="0">
UIテキスト用ロケール
</summary>
    </member>
    <member name="P:AntDesign.Upload.Method">
      <summary v="3MYft8" i="0">
アップロード要求のHTTPメソッド
</summary>
      <default value="post" />
    </member>
    <member name="P:AntDesign.Upload.Multiple">
      <summary v="2Ow28w" i="0">
選択した複数のファイルをサポートするかどうか。 サポートされるIE10。
Trueに設定すると、Ctrlキーを押しながら複数のファイルを選択できます。
</summary>
    </member>
    <member name="P:AntDesign.Upload.Name">
      <summary v="4DT0JZ" i="0">
アップロードファイルの名前
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnChange">
      <summary v="44m7YP" i="0">
コールバック関数は、アップロード状態が何らかの理由で変更されたときに実行できます。
この関数は、アップロードが進行中、完了、または失敗したときに呼び出されます。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnCompleted">
      <summary v="22eQdJ" i="0">
コールバック関数は、すべてのアップロードが成功または失敗したときに実行されます。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnDownload">
      <summary v="cJbNX" i="0">
アップロードリストでファイル名リンクがクリックされたときにコールバックが実行されます。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnPreview">
      <summary v="2GNO93" i="0">
コールバック機能は、ファイルリンクまたはプレビューアイコンがクリックされたときに実行されます
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnRemove">
      <summary v="3WJi46" i="0">
ファイル削除ボタンをクリックしたときに実行されるコールバック関数。
Trueが返されると、ファイルは削除され、<see cref="P:AntDesign.Upload.FileListChanged" />が実行されます。
Falseが返されると、削除はキャンセルされます。
</summary>
    </member>
    <member name="P:AntDesign.Upload.OnSingleCompleted">
      <summary v="1bLZO9" i="0">
コールバック関数は、単一のファイルのアップロードが成功または失敗したときに実行されます。
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowButton">
      <summary v="1vnmWu" i="0">
アップロードボタンを表示するかどうか。
</summary>
      <defaut value="true" />
    </member>
    <member name="P:AntDesign.Upload.ShowDownloadIcon">
      <summary v="zmVgu" i="0">
アップロード (制御) されたファイルのリスト
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowPreviewIcon">
      <summary v="11QPSX" i="0">
プレビューアイコンを表示するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowRemoveIcon">
      <summary v="1PdfLo" i="0">
削除アイコンを表示するかどうか
</summary>
    </member>
    <member name="P:AntDesign.Upload.ShowUploadList">
      <summary v="3bEOiB" i="0">
アップロードしているファイルのリストを表示するかどうか
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.UploadFileItem.Ext">
      <summary v="4gT7df" i="0">
ファイルの拡張
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.FileName">
      <summary v="47oJfo" i="0">
ファイル名
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Id">
      <summary v="1N5Sse" i="0">
ファイルを識別するためのGUID
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.ImageExtensions">
      <summary v="3aspCl" i="0">
イメージと見なされるファイル拡張子
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.ObjectURL">
      <summary v="2n2Zfv" i="0">
ファイルのオブジェクトURL
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Percent">
      <summary v="4YID2c" i="0">
アップロードされた割合
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Response">
      <summary v="b10oe" i="0">
サーバーからの応答
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Size">
      <summary v="1JfxhL" i="0">
ファイルのサイズ
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.State">
      <summary v="16r1pn" i="0">
アップロードの状態
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Type">
      <summary v="EkfGZ" i="0">
ファイルのタイプ
</summary>
    </member>
    <member name="P:AntDesign.UploadFileItem.Url">
      <summary v="nbl0v" i="0">
実際のファイルのURL
</summary>
    </member>
    <member name="P:AntDesign.UploadInfo.File">
      <summary v="34uZYo" i="0">
現在の操作のファイル
</summary>
    </member>
    <member name="P:AntDesign.UploadInfo.FileList">
      <summary v="3scm6D" i="0">
現在のファイルのリスト
</summary>
    </member>
    <member name="P:AntDesign.Watermark.Alpha">
      <summary v="2REGlo" i="0">
透明度、値の範囲 [0-1]
</summary>
      <default value="1f" />
    </member>
    <member name="P:AntDesign.Watermark.ChildContent">
      <summary v="Lr2AJ" i="0">
子コンテンツ
</summary>
    </member>
    <member name="P:AntDesign.Watermark.Content">
      <summary v="2JZgwg" i="0">
透かしテキストの内容
</summary>
    </member>
    <member name="P:AntDesign.Watermark.Contents">
      <summary v="3yQrrF" i="0">
複数行の透かしテキストの内容
</summary>
    </member>
    <member name="P:AntDesign.Watermark.FontColor">
      <summary v="1JNzAE" i="0">
フォントの色
</summary>
      <default value="rgba(0,0,0,.15)" />
    </member>
    <member name="P:AntDesign.Watermark.FontFamily">
      <summary v="1W17RM" i="0">
フォントファミリー
</summary>
      <default value="sans-serif" />
    </member>
    <member name="P:AntDesign.Watermark.FontSize">
      <summary v="2XlKjE" i="0">
フォントサイズ
</summary>
      <default value="16" />
    </member>
    <member name="P:AntDesign.Watermark.FontStyle">
      <summary v="yP1Ap" i="0">
フォントスタイル。 値は<c>なし</c><c>通常</c><c>イタリック</c>と<c>斜め</c>を参照してください。
</summary>
      <default value="normal" />
    </member>
    <member name="P:AntDesign.Watermark.FontWeight">
      <summary v="1tPPQk" i="0">
フォントの重さ。 値は<c>通常</c><c>ライト</c><c>重量</c>と番号。
</summary>
      <default value="normal" />
    </member>
    <member name="P:AntDesign.Watermark.Gap">
      <summary v="3itudQ" i="0">
透かしの間隔。
<para>X: 透かし間のx軸の間隔</para><para>Y: 透かし間のy軸の間隔</para></summary>
      <default value="(100, 100)" />
    </member>
    <member name="P:AntDesign.Watermark.Grayscale">
      <summary v="33reeU" i="0">
画像にグレースケール表示が必要かどうか (グレーへの色)
</summary>
      <default value="false" />
    </member>
    <member name="P:AntDesign.Watermark.Height">
      <summary v="UXYbs" i="0">
透かしの高さ、デフォルト値は<c>コンテンツ</c>はそれ自身の高さです
</summary>
      <default value="64" />
    </member>
    <member name="P:AntDesign.Watermark.Image">
      <summary v="isjP8" i="0">
画像ソース、2xまたは3xの画像、高い優先度をエクスポートすることをお勧めします (サポートbase64形式)
</summary>
    </member>
    <member name="P:AntDesign.Watermark.LineSpace">
      <summary v="3W1i1P" i="0">
行の間隔は、複数の行がある場合にのみ適用されます (コンテンツは配列として設定されます)。
</summary>
      <default value="16" />
    </member>
    <member name="P:AntDesign.Watermark.Offset">
      <summary v="2ecW0k" i="0">
コンテナの左上隅からの透かしのオフセット。 デフォルトは<c>ギャップ/2</c>を参照してください。
</summary>
      <default value="(gap[0]/2, gap[1]/2)" />
    </member>
    <member name="P:AntDesign.Watermark.Repeat">
      <summary v="4HxEH1" i="0">
透かしを繰り返すかどうかを設定または取得する
</summary>
      <default value="true" />
    </member>
    <member name="P:AntDesign.Watermark.Rotate">
      <summary v="sqW7n" i="0">
透かしが描かれるとき、回転角度、単位<c>&deg;</c></summary>
      <default value="-22" />
    </member>
    <member name="P:AntDesign.Watermark.Scrolling">
      <summary v="2NFDxn" i="0">
無限スクロールテキスト効果を有効にする
</summary>
    </member>
    <member name="P:AntDesign.Watermark.ScrollingSpeed">
      <summary v="2HGkWL" i="0">
モーション変位の間隔 (ミリ秒単位)。
</summary>
      <default value="3000" />
    </member>
    <member name="P:AntDesign.Watermark.Width">
      <summary v="4Jl8o7" i="0">
透かしの幅、デフォルト値は<c>コンテンツ</c>は独自の幅です
</summary>
      <default value="120" />
    </member>
    <member name="P:AntDesign.Watermark.ZIndex">
      <summary v="1yescZ" i="0">
添付された透かし要素のzインデックス。
</summary>
      <default value="9" />
    </member>
    <member name="T:AntDesign.Affix">
      <summary v="37tCq1" i="0">
        <para>Affixを別のコンポーネントに巻き付けて、ビューポートを貼り付けます。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>より長いWebページでは、一部のコンテンツがビューポートに固執するのに役立ちます。 これは、メニューとアクションで一般的です。</item>
          <item>特にビューポートのサイズが小さい場合は、Affixはページ上の他のコンテンツをカバーしないでください。</item>
        </list>
        <para>
          <strong>重要</strong>: の子どもたち<c>アフィクス</c>プロパティを持ってはいけません<c>Position: 絶対</c>、しかしあなたは設定することができます<c>Position: 絶対</c>オン<c>アフィクス</c>自分自身</para>
      </summary>
    </member>
    <member name="T:AntDesign.Alert">
      <summary v="1pB52Z" i="0">
        <para>フィードバックのための警告コンポーネント。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>ユーザーに警告メッセージを表示する必要がある場合。</item>
          <item>ユーザーアクションで閉じることができる永続的な静的コンテナが必要な場合。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Anchor">
      <summary v="2GD9UG" i="0">
        <para>1ページでスクロールするハイパーリンク。</para>
        <h2>使用するとき</h2>
        <para>ページにアンカーハイパーリンクを表示し、それらの間をジャンプするため。</para>
      </summary>
      <seealso cref="T:AntDesign.AnchorLink" />
    </member>
    <member name="T:AntDesign.AnchorLink">
      <summary v="1rYOPm" i="0">
アンカーリスト内のリンク。 アンカーの子供になるように設計されています
</summary>
    </member>
    <member name="T:AntDesign.AntInputComponentBase`1">
      <summary v="4IyV3t" i="0">
オプションでサポートする任意の入力コントロールの基本クラス<see cref="P:AntDesign.AntInputComponentBase`1.EditContext" />を参照してください。
参照: https://github.com/dotnet/aspnetcore/blob/master/src/Components/Web/src/Forms/InputBase.cs
</summary>
      <typeparam name="TValue" v="KpCZe" i="0">入力値の自然な型</typeparam>
    </member>
    <member name="T:AntDesign.AntList`1">
      <summary v="2je90m" i="0">
        <para>シンプルなリスト。</para>
        <h2>使用するとき</h2>
        <para>リストを使用して、単一の対象に関連するコンテンツを表示することができる。 コンテンツは、様々なタイプおよびサイズの複数の要素からなることができる。</para>
      </summary>
      <seealso cref="T:AntDesign.ListItem" />
      <seealso cref="T:AntDesign.ListItemMeta" />
      <seealso cref="T:AntDesign.PaginationOptions" />
      <seealso cref="T:AntDesign.ListGridType" />
    </member>
    <member name="T:AntDesign.AutoComplete`1">
      <summary v="2CTE69" i="0">
        <para>入力フィールドのオートコンプリート機能。</para>
        <h2>使用するとき</h2>
オートコンプリート機能が必要なとき。
</summary>
      <inheritdoc />
      <seealso cref="T:AntDesign.AutoCompleteOption" />
      <seealso cref="T:AntDesign.TriggerBoundaryAdjustMode" />
    </member>
    <member name="T:AntDesign.Avatar">
      <summary v="20WBeT" i="0">
        <para>アバターは人や物を表すために使用できます。 画像、アイコン、または文字をサポートしています。</para>
      </summary>
      <seealso cref="T:AntDesign.AvatarGroup" />
    </member>
    <member name="T:AntDesign.BackTop">
      <summary v="1SNW98" i="0">
        <para>ページの上部に戻るのが簡単になります。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>ページの内容が非常に長いとき。</item>
          <item>あなたが内容を見るために非常に頻繁にトップに戻る必要があるとき。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Badge">
      <summary v="r4bOo" i="0">
        <para>UI要素の小さな数値またはステータス记述子。</para>
        <h2>使用するとき</h2>
        <para>バッジは通常、目を引く魅力のある通知またはユーザーアバターの近くに表示され、通常は未読のメッセージ数を表示します。</para>
      </summary>
      <seealso cref="T:AntDesign.BadgeRibbon" />
    </member>
    <member name="T:AntDesign.BadgeRibbon">
      <summary v="2Rq7Zo" i="0">
UI要素の小さな数値またはステータス记述子。
</summary>
    </member>
    <member name="T:AntDesign.Breadcrumb">
      <summary v="1c7cNF" i="0">
        <para>ブレッドクラムは、階層内の現在の位置を表示します。 これにより、階層の上位の州に戻ることができます。</para>

使用するとき

<list type="bullet"><item>システムに階層内に2つ以上のレイヤーがある場合。</item><item>ユーザーにどこにいるかを知らせる必要があるとき。</item><item>ユーザがより高いレベルに戻ってナビゲートする必要がある場合がある。</item></list></summary>
      <seealso cref="T:AntDesign.BreadcrumbItem" />
    </member>
    <member name="T:AntDesign.BreadcrumbOption">
      <summary v="3CaXYE" i="0">
現在使用されていません。 将来の開発のために計画されています。
</summary>
    </member>
    <member name="T:AntDesign.Button">
      <summary v="2Yy3K9" i="0">
        <para>操作をトリガーします。</para>
        <h2>使用するとき</h2>
        <para>ボタンとは、操作 (または一連の操作) を意味する。 ボタンをクリックすると、対応するビジネスロジックがトリガーされます。</para>
        <para>Ant Designでは、4種類のボタンを提供しています。</para>
        <list type="bullet">
          <item>プライマリボタン: メインアクション、最大1つのプライマリボタンを1つのセクションに示します。</item>
          <item>デフォルトボタン: 優先順位のない一連のアクションを示します。</item>
          <item>ダッシュボタン: 一般的にアクションを追加するために使用されます。</item>
          <item>リンクボタン: 外部リンクに使用されます。</item>
        </list>
        <para>さらに4つの他のプロパティ。</para>
        <list type="bullet">
          <item>
            <c>危険</c>: 削除や承認などのリスクのアクションに使用されます。</item>
          <item>
            <c>ゴースト</c>: 複雑な背景、通常はホームページの状況で使用されます。</item>
          <item>
            <c>無効</c>: アクションが利用できない場合。</item>
          <item>
            <c>読み込み中</c>: ボタンにローディングスピナーを追加し、複数の送信も回避します。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.DownloadButton" />
    </member>
    <member name="T:AntDesign.ButtonProps">
      <summary v="1jRKjS" i="0">
ボタン小道具
</summary>
    </member>
    <member name="T:AntDesign.Calendar">
      <summary v="2OrO5h" i="0">
        <para>カレンダー形式でデータを表示するためのコンテナ。</para>
        <h2>使用するとき</h2>
        <para>データがスケジュール、時刻表、価格カレンダー、太陰暦などの日付の形式である場合。 このコンポーネントは、年/月の切り替えもサポートしています。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Card">
      <summary v="Agd00" i="0">
        <para>シンプルな长方形のコンテナ。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>カードを使用して、単一の対象に関連するコンテンツを表示することができる。 コンテンツは、様々なタイプおよびサイズの複数の要素からなることができる。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CardGrid" />
      <seealso cref="T:AntDesign.CardMeta" />
      <seealso cref="T:AntDesign.CardAction" />
    </member>
    <member name="T:AntDesign.CardAction">
      <summary v="1ysu72" i="0">
カードのアクションを设定する简単な方法。
</summary>
    </member>
    <member name="T:AntDesign.Carousel">
      <summary v="2TfmkF" i="0">
        <para>カルーセルコンポーネント。 そのコンテナでスケールします。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>同じレベルにコンテンツのグループがあるとき。</item>
          <item>コンテンツスペースが不十分な場合は、回転ドアの形でスペースを節約するために使用できます。</item>
          <item>一般的に写真/カードのグループに使用されます。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CarouselSlick" />
    </member>
    <member name="T:AntDesign.Cascader">
      <summary v="2WPPjO" i="0">
        <para>カスケード选択ボックス。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>関連付けられたデータセットのセットから選択する必要がある場合。 州/市/地区、会社レベル、物事の分類など。</item>
          <item>大規模なデータセットから選択する場合、簡単に選択できるようにマルチステージ分類が分離されています。</item>
          <item>ユーザーエクスペリエンスを向上させるために、1つのフロートレイヤーでカスケードアイテムを選択します。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CascaderNode" />
      <seealso cref="T:AntDesign.TriggerBoundaryAdjustMode" />
    </member>
    <member name="T:AntDesign.Checkbox">
      <summary v="1bsMQt" i="0">
        <para>チェックボックスコンポーネント。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>複数のオプションから複数の値を選択するために使用されます。</item>
          <item>チェックボックスを1つだけ使用する場合は、スイッチを使用して2つの状態を切り替えるのと同じです。</item>
        </list>
        <para>違いは、Switchが状態の変更を直接トリガーすることですが、Checkboxは状態を変更としてマークするだけであり、これを送信する必要があります。</para>
      </summary>
      <seealso cref="P:AntDesign.Checkbox.CheckboxGroup" />
    </member>
    <member name="T:AntDesign.CheckboxGroup`1">
      <summary v="5xKk1" i="0">
関連するチェックボックスのグループを表示する
</summary>
    </member>
    <member name="T:AntDesign.CloseEventArgs`1">
      <summary v="qxMDq" i="0">
条件付きで終了イベントをブロックするために使用できます
</summary>
      <typeparam name="T" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Collapse">
      <summary v="IzfHK" i="0">
        <para>折りたたんで拡大できるコンテンツエリア。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>複雑なリージョンをグループ化または非表示にして、ページをきれいに保つことができます。</item>
          <item>
            <c>アコーディオン</c>は特別な種類の<c>崩壊</c>これにより、一度に1つのパネルのみを拡張できます。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.Panel" />
    </member>
    <member name="T:AntDesign.Color">
      <summary v="1eFGx0" i="0">
Antデザインカラー: https:// ant.de sign/docs/spec/colors
</summary>
    </member>
    <member name="T:AntDesign.Column`1">
      <summary v="3NHxPN" i="0">
列の定義を使用して、<see cref="T:AntDesign.Table`1" />を参照してください。
<para>
を使用することを推奨します。<see cref="T:AntDesign.PropertyColumn`2" />の代わりに
</para></summary>
      <typeparam name="TData" v="1A8H8T" i="0">
TItem objecのプロパティのタイプ。
</typeparam>
    </member>
    <member name="T:AntDesign.Comment">
      <summary v="FSec4" i="0">
        <para>コメントには、ユーザーのフィードバックとWebサイトのコンテンツに対するディスカッションが表示されます。</para>
        <h2>使用するとき</h2>
        <para>コメントを使用して、ページ、ブログ投稿、問題などのエンティティに関するディスカッションを有効にすることができます。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Confirm">
      <summary v="3MOCfz" i="0">
DOTは直接確認を使用しません、
ModalServiceまたはConfirmServiceを使用してConfirmダイアログを作成してください
</summary>
    </member>
    <member name="T:AntDesign.ConfirmButtonOptions">
      <summary v="29ac0n" i="0">
Config the confirmボタンのプロパティ
</summary>
    </member>
    <member name="T:AntDesign.ConfirmButtons">
      <summary v="4A7aQN" i="0">
フッターボタンの種類を確認
</summary>
    </member>
    <member name="T:AntDesign.ConfirmIcon">
      <summary v="4btyuR" i="0">
アイコンタイプの確認
</summary>
    </member>
    <member name="T:AntDesign.ConfirmLocale">
      <summary v="1p1KyL" i="0">
ダイアログロケールの確認
</summary>
    </member>
    <member name="T:AntDesign.ConfirmOptions">
      <summary v="1kUbEo" i="0">
ダイアログオプションの確認
</summary>
    </member>
    <member name="T:AntDesign.ConfirmRef">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ConfirmRef`1">
      <summary v="30SDzd" i="0">
戻り値を持つConfirmRef
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ConfirmResult">
      <summary v="1E9RxE" i="0">
確認ボタンをクリックした
</summary>
    </member>
    <member name="T:AntDesign.ConfirmService">
      <summary v="4bavRW" i="0">
WindowsのMessageBoxのようなシンプルなConfirmダイアログを表示します。ModalServiceとは異なります。 ModalServiceはOK-Cancel Confirmダイアログを作成してConfirm Refを返すだけですが、ConfirmServiceはConfirmの結果を返します。
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCode`1">
      <summary v="2QfH9f" i="0">
2つのパラメータ値のハッシュ比較を提供します。
</summary>
      <typeparam name="TParameter" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeExtensions">
      <summary v="25Bj9r" i="0">
コンポーネントパラメータとその他の関数のHashCode計算を提供する
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider">
      <summary v="4U8Dt8" i="0">
HashCodeプロバイダー
<para>HashCodeのパラメータ値を計算するために使用されます</para><para>コレクションタイプは、各要素のHashCodeを計算します。
他の型は、オブジェクトのデフォルトのGetHashCodeメソッドによって発生した値を単に返します。
</para><para>リフレクション性能を考慮するために、複雑なモデルはその属性のHashCodeを分解して計算しないため、モデルはGetHashCodeメソッドをそれ自体で書き直すことをお勧めします。</para></summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.DictionaryHashCodeProvider">
      <summary v="ogIOV" i="0">
辞書タイプのハッシュプロバイダー
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.EnumerableHashCodeProvider">
      <summary v="1U8TI8" i="0">
IEnumerable型のハッシュプロバイダー
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.HashCodeProvider.OtherHashCodeProvider">
      <summary v="OKreE" i="0">
他のタイプのハッシュプロバイダー
</summary>
    </member>
    <member name="T:AntDesign.Core.HashCodes.ParameterDescriptor`1">
      <summary v="3IE49e" i="0">
コンポーネントのパラメーター记述子を表します。
</summary>
      <typeparam name="TComponent" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.DatePicker`1">
      <summary v="2sdet8" i="0">
        <para>日付を選択または入力します。</para>
        <h2>使用するとき</h2>
        <para>入力ボックスをクリックすると、ポップアップカレンダーから日付を選択できます。</para>
      </summary>
      <seealso cref="T:AntDesign.MonthPicker`1" />
      <seealso cref="T:AntDesign.RangePicker`1" />
      <seealso cref="T:AntDesign.WeekPicker`1" />
      <seealso cref="T:AntDesign.YearPicker`1" />
      <seealso cref="T:AntDesign.QuarterPicker`1" />
      <seealso cref="T:AntDesign.TriggerBoundaryAdjustMode" />
    </member>
    <member name="T:AntDesign.Descriptions">
      <summary v="UlNF4" i="0">
        <para>グループ内の複数の読み取り専用フィールドを表示します。</para>
        <h2>使用するとき</h2>
        <para>詳細ページに一般的に表示されます。</para>
      </summary>
      <seealso cref="T:AntDesign.DescriptionsItem" />
    </member>
    <member name="T:AntDesign.Dialog">
      <summary v="3kcfun" i="0">
ダイアログのみの制御コンポーネントが表示または非表示になり、
DOMツリーから要素が削除されない
</summary>
    </member>
    <member name="T:AntDesign.DialogOptions">
      <summary v="4BPXAm" i="0">
ダイアログのオプション
</summary>
    </member>
    <member name="T:AntDesign.DialogOptionsBase">
      <summary v="342PtQ" i="0">
ModalOptions、ConfirmOptions、DialogOptionsの基本クラス
</summary>
    </member>
    <member name="T:AntDesign.DialogWrapper">
      <summary v="3kvY2G" i="0">
あなた自身のイニシアチブでそれを破壊しない限り、DOMツリーに長い間存在することができるコンポーネント
</summary>
    </member>
    <member name="T:AntDesign.Divider">
      <summary v="1wIK1e" i="0">
        <para>仕切り線はさまざまなコンテンツを分離します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>記事のセクションを分割します。</item>
          <item>インラインテキストとテーブルの操作列などのリンクを分割します。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.DownloadButton">
      <summary v="3Fet2E" i="0">
を使用してファイルをダウンロードします。 継承<see cref="T:AntDesign.Button" /></summary>
    </member>
    <member name="T:AntDesign.Drawer">
      <summary v="2GRpVr" i="0">
        <para>画面の端からスライドインするパネル。</para>
        <h2>使用するとき</h2>
        <para>
引き出しは、通常、ページの上にオーバーレイされ、横からスライドインするパネルです。
情報またはアクションのセットが含まれています。
ユーザーは現在のページを離れることなく引き出しを操作できるため、同じコンテキスト内でより効率的にタスクを実行できます。
</para>
        <list type="bullet">
          <item>フォームを使用して、情報セットを作成または編集します。</item>
          <item>サブタスクの処理 サブタスクがPopoverには重すぎても、メインタスクのコンテキストでサブタスクを維持したい場合は、Drawerが非常に便利です。</item>
          <item>同じフォームが複数の場所で必要なとき。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.DrawerService" />
      <seealso cref="T:AntDesign.DrawerOptions" />
      <seealso cref="T:AntDesign.DrawerRef" />
    </member>
    <member name="T:AntDesign.Dropdown">
      <summary v="10EZzZ" i="0">
        <para>ドロップダウンリスト。</para>
        <h2>使用するとき</h2>
        <para>
から選択するいくつかのオプションがある場合は、それらをラップすることができます<c>ドロップダウン</c>を参照してください。
トリガーをホバリングまたはクリックすると、ドロップダウンメニューが表示されます。これにより、オプションを選択して関連するアクションを実行できます。
</para>
        <h2>2つのタイプ</h2>
        <para>には2つのレンダリングアプローチがあります。<c>ドロップダウン</c>:</para>
        <list type="number">
          <item>子要素 (の内容をラップします。<c>ドロップダウン</c>) と<c>Div</c>(デフォルトのアプローチ)。</item>
          <item>
子要素は何も包まれていません。 このアプローチでは、<c>バインド解除</c>内部タグ<c>ドロップダウン</c>子要素タイプに応じて (最初の例を参照してください):
<list type="bullet"><item>Htmlタグ: その<c>@ Ref</c>に設定<c>@ Context.Current</c></item><item><c>AntデザインBlazor</c>コンポーネント: その<c>拒否</c>に設定された属性<c>@ コンテキスト</c>を参照してください。</item></list></item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.DropdownButton" />
    </member>
    <member name="T:AntDesign.Empty">
      <summary v="A10ia" i="0">
        <para>空の状態プレースホルダー。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>データが提供されていない場合は、フレンドリーなヒントを表示します。</item>
          <item>新鮮な新しい状況で何かを作成するためのユーザーチュートリアル。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.EventUtil">
      <summary v="1Qq0jo" i="0">
イベントによって発生するコンポーネントの再レンダリングをBlazorコンポーネントに回避します (純粋なイベントハンドラ)。
<para>
著者: SteveSandersonMS、から<see href="https://gist.github.com/SteveSandersonMS/8a19d8e992f127bb2d2a315ec6c5a373" />を参照してください。
</para><para>
問題:<seealso href="https://github.com/dotnet/aspnetcore/issues/18919#issuecomment-735969441" />を参照してください。
</para></summary>
    </member>
    <member name="T:AntDesign.FeedbackComponent`1">
      <summary v="1wTQkB" i="0">
フィードバックコンポーネント
</summary>
      <typeparam name="TComponentOptions" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackComponent`2">
      <summary v="1wTQkB" i="0">
フィードバックコンポーネント
</summary>
      <typeparam name="TComponentOptions" v="0000" i="0" />
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackRefBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.FeedbackRefWithOkCancelBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Flex">
      <summary v="2FDqx5" i="0">
        <para>アライメント用のフレックスレイアウトコンテナ。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>要素間の間隔を設定するのに適しています。</item>
          <item>さまざまな水平および垂直のアライメントを設定するのに適しています。</item>
        </list>
        <h3>スペースコンポーネントとの違い</h3>
        <list type="bullet">
          <item>スペースは、インライン要素間の間隔を設定するために使用されます。 インライン配置の各子要素にラッパー要素を追加します。 行と列の複数の子要素の等距離配置に適しています。</item>
          <item>Flexは、ブロックレベル要素のレイアウトを設定するために使用されます。 ラッパー要素は追加されません。 子要素の垂直方向または水平方向のレイアウトに適しており、柔軟性と制御性が向上します。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Form`1">
      <summary v="1lZrE1" i="0">
        <para>データスコープ管理を備えた高性能フォームコンポーネント。 データ収集、検証、およびスタイルを含む。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>インスタンスの作成または情報の収集が必要な場合。</item>
          <item>特定のルールでフィールドを検証する必要がある場合。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.FormValidateMode" />
      <seealso cref="T:AntDesign.FormItem" />
      <seealso cref="T:AntDesign.FormValidationRule" />
      <seealso cref="T:AntDesign.FormValidateErrorMessages" />
    </member>
    <member name="T:AntDesign.Grid">
      <summary v="3qnmQ6" i="0">
        <para>24グリッドシステム。</para>
        <h2>デザインコンセプト</h2>
        <para>ほとんどのビジネス状況では、Ant Designは設計エリア内の多くの情報ストレージの問題を解決する必要があるため、12グリッドシステムに基づいて設計エリアを24のセクションに分割しました。</para>
        <para>
分割されたエリアに「ボックス」という名前を付けます。 水平配置用のボックスは最大で4つ、少なくとも1つを提案します。
上の図に示すように、ボックスは画面全体に比例します。
高レベルの視覚的な快適さを確保するために、ボックスユニットに基づいてボックス内のタイポグラフィをカスタマイズします。
</para>
        <h2>概要</h2>
        <para>グリッドシステムでは、すべてのエリアが安定して配置できるように、行と列に基づいて情報エリアの外側のフレームを定義します。</para>
        <para>以下は、その仕組みの概要です。</para>
        <list type="bullet">
          <item>行で定義された水平方向のスペースに列のセットを設定します (略してcol)</item>
          <item>コンテンツ要素は列に直接配置し、列に直接配置する必要があります。</item>
          <item>列グリッドシステムは、その範囲スパンを表すために1〜24の値です。 例えば、列に8のスパンを使用することによって、等しい幅の3つの列を作成することができる。</item>
          <item>行のコルスパンの合計が24を超える場合、全体としてオーバーフローするコルは新しいライン配置を開始します。</item>
        </list>
        <para>
当社のグリッドシステムは、親内の要素を水平方向に配置できるように、フレックスレイアウトに基づいています。左、中央、右、ワイド配置、分散配置です。
グリッドシステムは、垂直方向の整列 (上部の整列、垂直中心、下部の整列) もサポートします。
Orderを使用して要素の順序を定義することもできます。
</para>
        <para>レイアウトは、各「ボックス」の幅を定義するために24グリッドレイアウトを使用しますが、グリッドレイアウトに厳密には従いません。</para>
        <para>レスポンシブグリッドのブレークポイントは、BootStrap 4メディアクエリのルールに従います (一部は含まれません)。</para>
      </summary>
      <seealso cref="T:AntDesign.Row" />
      <seealso cref="T:AntDesign.Col" />
      <seealso cref="T:AntDesign.EmbeddedProperty" />
    </member>
    <member name="T:AntDesign.Icon">
      <summary v="3ZMHTY" i="0">
意味ベクトルグラフィック。 アイコンを使用する前に。
</summary>
    </member>
    <member name="T:AntDesign.IFeedbackRef">
      <summary v="4GzNez" i="0">
Open and closeメソッドによるコンポーネント参照
</summary>
    </member>
    <member name="T:AntDesign.Image">
      <summary v="WDF41" i="0">
        <para>プレビュー可能な画像。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>あなたが写真を表示する必要があるとき。</item>
          <item>大きな画像をロードするときの表示、またはロードが失敗したときのフォールトトレラント処理。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.ImagePreviewGroup" />
    </member>
    <member name="T:AntDesign.Input`1">
      <summary v="3wmlDD" i="0">
        <para>ユーザ入力を得るための基本的なウィジェットは、テキストフィールドである。 キーボードとマウスは、データの提供または変更に使用できます。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>フォームフィールドのユーザー入力が必要です。</item>
          <item>検索入力が必要です。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.TextArea" />
      <seealso cref="T:AntDesign.Search" />
      <seealso cref="T:AntDesign.InputGroup" />
      <seealso cref="T:AntDesign.InputPassword" />
    </member>
    <member name="T:AntDesign.InputNumber`1">
      <summary v="2pWsMH" i="0">
        <para>マウスまたはキーボードで特定の範囲内の数値を入力します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>数値を提供する必要があるとき。</item>
        </list>
        <h3>サポートされるタイプ</h3>
        <para>
          <c>バイト</c>
          <c>バイト</c>
          <c>短い</c>
          <c>案内</c>
          <c>Int</c>
          <c>Uint</c>
          <c>長い</c>
          <c>ウロン</c>
          <c>フロート</c>
          <c>ダブル</c>
          <c>小数</c>
        </para>
        <para>上记のタイプのnullable型もサポートされています。 たとえば、<c>アッシュポート?</c><c>Int?</c>、など</para>
      </summary>
    </member>
    <member name="T:AntDesign.IOkCancelRef">
      <summary v="23dkGA" i="0">
OkおよびCancelメソッドによるコンポーネント参照
</summary>
    </member>
    <member name="T:AntDesign.IOkCancelRef`1">
      <summary v="4VqRkO" i="0">
コンポーネント &lt;&gt; OkおよびCancelメソッドでの参照
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Layout">
                 * <summary v="YmcQy" i="0"><para>ページの全体的なレイアウトを処理します。</para><h2>仕様</h2><h3>サイズ</h3><para>第1レベルのナビゲーションは、ロゴの近くで左に整列され、二次メニューは右に整列される。</para><list type="bullet"><item>Top Navigation: 第1レベルのナビゲーションの高さ<c>64px</c>、第2レベルのナビゲーション
<c>48px</c>を参照してください。</item><item>Top Navigation (ランディングページ用): 第1レベルのナビゲーションの高さ<c>80px</c>、2番目の
レベルナビゲーション<c>56px</c>を参照してください。</item><item>トップナビゲーションの計算式:<c>48 8n</c>を参照してください。</item><item>アサイドナビゲーションの計算式:<c>200 8n</c>を参照してください。</item></list><h3>相互作用ルール</h3><list type="bullet"><item>最初のレベルのナビゲーションと最後のレベルのナビゲーションは、視覚化によって区別できます。</item><item>現在のアイテムは、視覚化の最優先事項を持つ必要があります。</item><item>現在のナビゲーションアイテムが折りたたまれると、現在のナビゲーションアイテムのスタイルが
親レベル;</item><item>左側のナビゲーションバーには、アコーディオンと拡張スタイルの両方がサポートされています。1つを選択できます
それはあなたのケースに最適です。</item></list><h2>可視化ルール</h2><para>ナビゲーションのスタイルは、そのレベルに一致する必要があります。</para><list type="bullet"><item><para><strong>Colorblockによる強調</strong></para><para>背景色が濃い色の場合、このパターンを親レベルのナビゲーションアイテムに使用できます。
現在のページ。</para></item><item><para><strong>ハイライトマッチスティック</strong></para><para>背景色が明るい色の場合、現在のページナビゲーションアイテムにこのパターンを使用できます。
ナビゲーションパスの最後のアイテムに使用することをお勧めします。</para></item><item><para><strong>ハイライトされたフォント</strong></para><para>視覚化の観点から、強調表示されたフォントはカラーブロックよりも強力です。このパターンはよく使用されます
現在のアイテムの親レベルに</para></item><item><para><strong>フォントのサイズを拡大する</strong></para><para><c>12px</c><c>14px</c>はナビゲーションの標準フォントサイズです。<c>14px</c>が使用されます
ナビゲーションの最初と2番目のレベルに対して。 に関する適切なフォントサイズを選択できます
ナビゲーションのレベル。</para></item></list><h2>コンポーネントの概要</h2><list type="bullet"><item><c>レイアウト</c>: レイアウトラッパー。<c>ヘッダー</c><c>サイダー</c><c>コンテンツ</c><c>フッター</c>または<c>レイアウト</c>自体は入れ子にすることができ、に置くことができます
任意の親コンテナ。</item><item><c>ヘッダー</c>: デフォルトのスタイルを持つ一番上のレイアウト。任意の要素を入れ子にすることができ、
に配置<c>レイアウト</c>を参照してください。</item><item><c>サイダー</c>: デフォルトのスタイルと基本機能を備えたサイドバーで、任意の要素をネストできます。
に配置する必要があります<c>レイアウト</c>を参照してください。</item><item><c>コンテンツ</c>: 任意の要素をネストできるデフォルトのスタイルのコンテンツレイアウト、および
に配置する必要があります<c>レイアウト</c>を参照してください。</item><item><c>フッター</c>: 任意の要素を入れ子にすることができるデフォルトのスタイルの下のレイアウト。
に置かれる<c>レイアウト</c>を参照してください。</item></list><blockquote><para>に基づく<c>フレックスレイアウト</c>、に注意を払ってください<a href="http://caniuse.com/#search=flex">互換性</a>を参照してください。</para></blockquote></summary><seealso cref="T:AntDesign.Header" /><seealso cref="T:AntDesign.Footer" /><seealso cref="T:AntDesign.Content" /><seealso cref="T:AntDesign.Sider" /></member>
    <member name="T:AntDesign.Mentions">
      <summary v="ZPJKe" i="0">
        <para>言及コンポーネント。</para>
        <h2>使用するとき</h2>
        <para>誰かまたは何かに言及する必要があるとき。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Menu">
      <summary v="cPchq" i="0">
        <para>ナビゲーション用の多用途メニュー。</para>
        <h2>使用するとき</h2>
        <para>
優れたナビゲーション設定により、ユーザーはサイト内をすばやく効率的に移動できるため、ナビゲーションはWebサイトの重要な部分です。
Ant Designは、上部と側面のナビゲーションオプションを提供します。
トップナビゲーションは、Webサイトのすべてのカテゴリと機能を提供します。
サイドナビゲーションは、Webサイトのマルチレベル構造を提供します。
</para>
        <para>ナビゲーションを使用したレイアウトの詳細については、レイアウトを参照してください。</para>
      </summary>
      <seealso cref="T:AntDesign.MenuItem" />
      <seealso cref="T:AntDesign.SubMenu" />
      <seealso cref="T:AntDesign.MenuItemGroup" />
      <seealso cref="T:AntDesign.MenuDivider" />
    </member>
    <member name="T:AntDesign.Message">
      <summary v="1eqsjN" i="0">
        <para>ユーザー操作に応じて、グローバルメッセージをフィードバックとして表示します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>成功、警告、エラーなどのフィードバックを提供します。</item>
          <item>メッセージは上部と中央に表示され、中断のない光の重みのあるプロンプトとして自動的に却下されます。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.IMessageService" />
      <seealso cref="T:AntDesign.MessageConfig" />
    </member>
    <member name="T:AntDesign.MessageService">
      <summary v="46UWFn" i="0">
メッセージサービス
</summary>
    </member>
    <member name="T:AntDesign.Modal">
      <summary v="1tZ7VL" i="0">
        <para>モーダルダイアログ。</para>
        <h2>使用するとき</h2>
        <para>
ユーザーにアプリケーションとのやり取りを要求するが、新しいページにジャンプしてユーザーのワークフローを中断することなく、<c>モーダル</c>ユーザーのフィードバックを取得したり、情報を表示したりするために、現在のページの上に新しいフローティングレイヤーを作成します。
さらに、簡単な確認ダイアログを表示する必要がある場合は、<c>ModalService.Confirm()</c>、など。
</para>
      </summary>
      <seealso cref="T:AntDesign.ModalService" />
      <seealso cref="T:AntDesign.ConfirmService" />
      <seealso cref="T:AntDesign.ConfirmOptions" />
    </member>
    <member name="T:AntDesign.ModalCancelFooter">
      <summary v="3rqwQJ" i="0">
Modal footerコンポーネント
</summary>
    </member>
    <member name="T:AntDesign.ModalFooter">
      <summary v="3rqwQJ" i="0">
Modal footerコンポーネント
</summary>
    </member>
    <member name="T:AntDesign.ModalLocale">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ModalOkFooter">
      <summary v="3rqwQJ" i="0">
Modal footerコンポーネント
</summary>
    </member>
    <member name="T:AntDesign.ModalOptions">
      <summary v="33zzV5" i="0">
モーダルダイアログボックスのオプション
</summary>
    </member>
    <member name="T:AntDesign.ModalRef">
      <summary v="3g66il" i="0">
モーダルインスタンスの参照
</summary>
    </member>
    <member name="T:AntDesign.ModalRef`1">
      <summary v="obMVl" i="0">
戻り値を持つModalRef
</summary>
      <typeparam name="TResult" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.ModalService">
      <summary v="17Ulp2" i="0">
モーダルダイアログを作成して開く
</summary>
    </member>
    <member name="T:AntDesign.Notification">
      <summary v="3pmo7C" i="0">
        <para>通知メッセージをグローバルに表示します。</para>
        <h2>使用するとき</h2>
        <para>ビューポートの四隅のいずれかに通知メッセージを表示します。 通常、次の場合に使用できます。</para>
        <list type="bullet">
          <item>複雑なコンテンツを含む通知。</item>
          <item>ユーザの相互作用に基づくフィードバックを提供する通知。 または、ユーザーが従わなければならない可能性のある今後のステップについての詳細が表示される場合があります。</item>
          <item>アプリケーションによってプッシュされる通知。</item>
        </list>
        <para>注: そのことを確認して下さい<c><AntContainer /></c>コンポーネントが追加されました<c>App.Razor</c>を参照してください。 通知が表示されていない場合、これは一般的な問題です。</para>
      </summary>
      <seealso cref="T:AntDesign.NotificationService" />
      <seealso cref="T:AntDesign.NotificationConfig" />
      <seealso cref="T:AntDesign.NotificationRef" />
    </member>
    <member name="T:AntDesign.NotificationBase">
      <summary v="0000" i="0" />
    </member>
    <member name="T:AntDesign.NotificationGlobalConfig">
      <summary v="1hOMBL" i="0">
AntNotification全要素配置
</summary>
    </member>
    <member name="T:AntDesign.NotificationRef">
      <summary v="1vLyd3" i="0">
通知Ref
</summary>
    </member>
    <member name="T:AntDesign.NotificationService">
      <summary v="SPIyy" i="0">
AntNotificationサービス
</summary>
    </member>
    <member name="T:AntDesign.PageHeader">
      <summary v="2sfEII" i="0">
        <para>共通のアクションとデザイン要素が組み込まれたヘッダー。</para>
        <h2>使用するとき</h2>
        <para>PageHeaderを使用して、ページトピックを強調表示し、ページに関する重要な情報を表示し、現在のページに関連するアクションアイテム (ページレベルの操作、ページ間ナビゲーションなどを含む) を運ぶことができます。ページ間ナビゲーションとしても使用できます。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Pagination">
      <summary v="39YqyH" i="0">
        <para>長いリストは、「ページ付け」を使用していくつかのページに分割することができ、一度に1ページのみがロードされる。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>すべてのアイテムをロード/レンダリングするのに長い時間がかかる場合。</item>
          <item>ページをナビゲートしてデータをブラウズしたい場合。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Popconfirm">
      <summary v="3uUnUn" i="0">
        <para>アクションのシンプルでコンパクトな確認ダイアログ。</para>
        <h2>使用するとき</h2>
        <para>ユーザーの確認を求めるために使用されるシンプルでコンパクトなダイアログ。</para>
        <para>との違い<c>確認</c>モーダルダイアログは、静的ポップされたフルスクリーン確認モーダルよりも軽量であるということです。</para>
        <h2>2つのタイプ</h2>
        <para>には2つのレンダリングアプローチがあります。<c>Popconfirm</c>:</para>
        <list type="number">
          <item>子要素 (の内容をラップします。<c>Popconfirm</c>) と<c>Div</c>タグ (デフォルトのアプローチ)。</item>
          <item>子要素は何も包まれていません。 このアプローチでは、<c>バインド解除</c>内部タグ<c>Popconfirm</c>子要素タイプに応じて (最初の例を参照してください):
<list type="bullet"><item>Htmlタグ: その<c>@ Ref</c>に設定<c>@ Context.Current</c></item><item><c>AntデザインBlazor</c>コンポーネント: その<c>拒否</c>に設定された属性<c>@ コンテキスト</c>を参照してください。</item></list></item>
        </list>
        <para>の子ノードが<c>Popconfirm</c>を受け入れる<c>OnMouseEnter</c><c>OnMouseLeave</c><c>OnFocus</c><c>OnClick</c>イベント</para>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Popover">
      <summary v="2mjUSX" i="0">
        <para>フローティングカードは、クリックまたはホバリングによって飛び出しました。</para>
        <h2>使用するとき</h2>
        <para>余分な情報や操作を提供するためのシンプルなポップアップメニュー。</para>
        <para>との比較<c>ツールチップ</c>、情報のほかに<c>ポップオーバー</c>カードは、リンクやボタンなどのアクション要素を提供することもできます。</para>
        <h2>2つのタイプ</h2>
        <para>には2つのレンダリングアプローチがあります。<c>ポップオーバー</c>:</para>
        <list type="number">
          <item>子要素 (の内容をラップします。<c>ポップオーバー</c>) と<c>Div</c>タグ (デフォルトのアプローチ)。</item>
          <item>子要素は何も包まれていません。 このアプローチでは、<c>バインド解除</c>内部タグ<c>ポップオーバー</c>子要素タイプに応じて (最初の例を参照してください):
<list type="bullet"><item>Htmlタグ: その<c>@ Ref</c>に設定<c>@ Context.Current</c></item><item><c>AntデザインBlazor</c>コンポーネント: その<c>拒否</c>に設定された属性<c>@ コンテキスト</c>を参照してください。</item></list></item>
        </list>
        <para>の子ノードが<c>ポップオーバー</c>を受け入れる<c>OnMouseEnter</c><c>OnMouseLeave</c><c>OnFocus</c><c>OnClick</c>イベント</para>
      </summary>
    </member>
    <member name="T:AntDesign.Progress">
      <summary v="2gJE91" i="0">
        <para>操作フローの現在の進行状況を表示します。</para>
        <h2>使用するとき</h2>
        <para>操作の完了に時間がかかる場合は、「Progress」を使用して現在の進行状況とステータスを表示できます。</para>
        <list type="bullet">
          <item>操作が現在のインターフェイスを中断するか、バックグラウンドで2秒以上実行する必要がある場合。</item>
          <item>操作の完了率を表示する必要がある場合。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Radio`1">
      <summary v="3QaM3o" i="0">
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>複数のオプションから単一の状態を選択するために使用します。</item>
          <item>Selectとの違いは、Radioがユーザーに表示され、選択の比較を容易にできることです。つまり、選択の数が多すぎないようにする必要があります。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.RadioGroup`1" />
    </member>
    <member name="T:AntDesign.RangePickerDefaults">
      <summary v="38wVtM" i="0">
PickerValues (各日付) に挿入する値を評価します。
ピッカーは、最初に表示されたときに焦点を当てます)。
</summary>
    </member>
    <member name="T:AntDesign.Rate">
      <summary v="3GefLc" i="0">
        <para>レートコンポーネント。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>評価を表示します。</item>
          <item>何かのクイック評価操作。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.RerenderStrategy">
      <summary v="2FJ4wP" i="0">
レンダリング戦略
</summary>
    </member>
    <member name="T:AntDesign.Result">
      <summary v="44OUcJ" i="0">
        <para>一連の操作タスクの結果をフィードバックするために使用します。</para>
        <h2>使用するとき</h2>
        <para>重要な操作が結果を処理するためにユーザーに知らせる必要があり、フィードバックがより複雑な場合に使用します。</para>
      </summary>
    </member>
    <member name="T:AntDesign.ReuseTabs">
      <summary v="2UMBIG" i="0">
アプリケーション内の複数のページコンポーネントの再利用
</summary>
    </member>
    <member name="T:AntDesign.ReuseTabsService">
      <summary v="2Hcqoc" i="0">
タブの再利用サービス
</summary>
    </member>
    <member name="T:AntDesign.Segmented`1">
      <summary v="jWtmK" i="0">
        <para>セグメント化されたコントロール。 このコンポーネントは「v0.12.0」以降に使用できます。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>複数のオプションを表示する場合、ユーザーは単一のオプションを選択できます</item>
          <item>選択したオプションを切り替えると、関連エリアの内容が変わります。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.SegmentedItem`1" />
    </member>
    <member name="T:AntDesign.Select.Internal.SelectOptionItem`2">
      <summary v="1X6flt" i="0">
内部で使用されるSelectOptionのデータモデル。
</summary>
      <typeparam name="TItemValue" v="0000" i="0" />
      <typeparam name="TItem" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Select`2">
      <summary v="2qQf3C" i="0">
        <para>オプションから値を選択するコンポーネントを選択します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>選択肢を表示するためのドロップダウンメニュー-ネイティブHTMLのエレガントな代替品<c>選択</c>要素を指定します。</item>
          <item>活用<see cref="T:AntDesign.Radio`1" />合計オプションが少ない場合 (5未満) をお勧めします。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Sider">
      <summary v="22OLNO" i="0">
サイドバーの<see cref="T:AntDesign.Layout" /></summary>
    </member>
    <member name="T:AntDesign.Skeleton">
      <summary v="2noOuO" i="0">
        <para>コンテンツが読み込まれるのを待つ間、またはまだ存在しないコンテンツを視覚化するために、プレースホルダーを提供します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>低いネットワーク速度のように、リソースに長い時間の読み込みが必要な場合。</item>
          <item>コンポーネントには、リストやカードなどの多くの情報が含まれています。</item>
          <item>初めてデータをロードするときにのみ機能します。</item>
          <item>どんな状況でもスピンに置き換えることができますが、より良いユーザーエクスペリエンスを提供できます。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.SkeletonElement" />
    </member>
    <member name="T:AntDesign.Slider`1">
      <summary v="5cvoX" i="0">
        <para>範囲内の現在の値と間隔を表示するためのスライダーコンポーネント。</para>
        <h2>使用するとき</h2>
        <para>範囲内の値を入力します。</para>
      </summary>
      <seealso cref="T:AntDesign.SliderMark" />
    </member>
    <member name="T:AntDesign.Space">
      <summary v="DaATU" i="0">
        <para>コンポーネントの間隔を設定します。</para>
        <h2>使用するとき</h2>
        <para>コンポーネントがくっつくのを避け、統一されたスペースを設定します。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Spin">
      <summary v="ndOrx" i="0">
        <para>ページまたはセクションの読み込み状態を表示するためのスピナー。</para>
        <h2>使用するとき</h2>
        <para>ページの一部が非同期データを待っているとき、またはレンダリングプロセス中に、適切なロードアニメーションを使用すると、ユーザーの不安を効果的に軽減できます。</para>
      </summary>
    </member>
    <member name="T:AntDesign.Statistic`1">
      <summary v="g565v" i="0">
        <para>統計番号を表示します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>いくつかのデータをハイライトしたいとき。</item>
          <item>統計データを説明付きで表示したいとき。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.CountDown" />
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Steps">
      <summary v="3Rat7c" i="0">
        <para>タスクのステップをユーザーに案内するナビゲーションバー。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>特定のタスクが複雑であるか、一連のサブタスクに特定のシーケンスがある場合、それをいくつかのステップに分解して簡単にすることができます。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.Step" />
    </member>
    <member name="T:AntDesign.Switch">
      <summary v="3KLO43" i="0">
        <para>セレクターの切り替え。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>2つの状態またはオンオフ状態の切り替えを表す必要がある場合。</item>
          <item>「Switch」と「Checkbox」の違いは、Switchを切り替えると状態変更が直接トリガーされますが、Checkboxは一般的に状態マーキングに使用され、送信操作と組み合わせて機能することです。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.Table.Internal.TItemProxy">
      <summary v="2auhJN" i="0">
このクラスは、DispatchProxyによってインターフェイスのインスタンスを作成するために使用されます。
</summary>
    </member>
    <member name="T:AntDesign.Table`1">
      <summary v="253EU9" i="0">
        <para>データの行を表示します。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>構造化データのコレクションを表示します。</item>
          <item>データをソート、検索、ページ分け、フィルタリングします。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.PropertyColumn`2" />
      <seealso cref="T:AntDesign.ActionColumn" />
      <seealso cref="T:AntDesign.Selection" />
      <seealso cref="T:AntDesign.TableModels.QueryModel`1" />
    </member>
    <member name="T:AntDesign.TableFilter">
      <summary v="14Ij0h" i="0">
フィルターアイテム定义
</summary>
    </member>
    <member name="T:AntDesign.TableModels.RowData">
      <summary v="2VK43F" i="0">
行に固有のすべてのデータを保持します。たとえば、行が拡張されているかどうかです。
「」をご参照ください。<see cref="P:AntDesign.TableModels.RowData.TableDataItem" />行ではなくアイテムに固有のすべてのプロパティに対して
</summary>
    </member>
    <member name="T:AntDesign.TableModels.RowData`1">
      <inheritdoc />
    </member>
    <member name="T:AntDesign.TableModels.TableDataItem">
      <summary v="4IsL8v" i="0">
テーブル内のアイテムのプロパティを保持します。
テーブル内の各アイテムに対して一意です (たとえば、アイテムが複数回表示されている場合でも、
1つだけがあります<see cref="T:AntDesign.TableModels.TableDataItem" />)。
したがって、同じアイテムを持つすべての行が一度に選択/選択解除されます。
<br />
行固有のデータについては、<see cref="T:AntDesign.TableModels.RowData" />を参照してください。
</summary>
    </member>
    <member name="T:AntDesign.TableModels.TableDataItem`1">
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Tabs">
      <summary v="3Il8bi" i="0">
        <para>タブを使用すると、異なるビューを簡単に切り替えることができます。</para>
        <h2>使用するとき</h2>
        <para>Ant Designには、さまざまな状況に対応する3種類のタブがあります。</para>
        <list type="bullet">
          <item>カードタブ: 閉じることができすぎるビューを管理するため。</item>
          <item>通常のタブ: ページの機能面。</item>
          <item>
            <see cref="T:AntDesign.RadioGroup`1" />: セカンダリタブ用。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.TabPane" />
    </member>
    <member name="T:AntDesign.Tag">
      <summary v="21XWpj" i="0">
        <para>分類またはマークアップのためのタグ。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>ディメンションまたはプロパティでタグを付けるために使用できます。</item>
          <item>分類するとき。</item>
        </list>
      </summary>
    </member>
    <member name="T:AntDesign.TemplateComponentBase`1">
      <summary v="0000" i="0" />
      <typeparam name="TComponentOptions" v="0000" i="0" />
    </member>
    <member name="T:AntDesign.Text">
      <summary v="1b6XSw" i="0">
        <inheritdoc />
      </summary>
    </member>
    <member name="T:AntDesign.Timeline">
      <summary v="4INOfS" i="0">
        <para>垂直表示タイムライン。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>一連の情報を時間 (昇順または降順) で順序付けする必要がある場合。</item>
          <item>視覚的な接続を行うためにタイムラインが必要なとき。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.TimelineItem" />
    </member>
    <member name="T:AntDesign.TimePicker`1">
      <summary v="W6rBr" i="0">
        <para>時間を選択/入力します。</para>
        <h2>使用するとき</h2>
        <para>入力ボックスをクリックすると、ポップアップパネルから時刻を選択できます。</para>
      </summary>
      <inheritdoc />
    </member>
    <member name="T:AntDesign.Tooltip">
      <summary v="2YqWIT" i="0">
        <para>シンプルなテキストポップアップのヒント。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>先端はマウスの入力に表示され、マウスの休暇に隠されています。 <c>ツールチップ</c>は複雑なテキストや操作をサポートしていません。</item>
          <item>ボタン/テキスト/操作の説明を提供する。 HTMLの代わりによく使用されます<c>タイトル</c>属性を指定します。</item>
        </list>
        <h2>2つのタイプ</h2>
        <para>には2つのレンダリングアプローチがあります。<c>ツールチップ</c>:</para>
        <list type="number">
          <item>子要素 (の内容をラップします。<c>ツールチップ</c>) と<c>Div</c>(デフォルトのアプローチ)。</item>
          <item>
子要素は何も包まれていません。 このアプローチでは、<c>バインド解除</c>内部タグ<c>ツールチップ</c>子要素タイプに応じて (最初の例を参照してください):
<list type="bullet"><item>Htmlタグ: その<c>@ Ref</c>に設定<c>@ Context.Current</c></item><item><c>AntデザインBlazor</c>コンポーネント: その<c>拒否</c>に設定された属性<c>@ コンテキスト</c>を参照してください。</item></list></item>
        </list>
        <para>の子ノードが<c>ツールチップ</c>を受け入れる<c>OnMouseEnter</c><c>OnMouseLeave</c><c>OnFocus</c><c>OnClick</c>イベント</para>
      </summary>
    </member>
    <member name="T:AntDesign.Transfer">
      <summary v="Mvx5m" i="0">
        <para>二重列転送選択ボックス。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>これは基本的に複数のアイテムを選択するために使用できる選択コントロールです。</item>
          <item>転送はアイテムのより多くの情報を表示し、より多くのスペースを取ることができます。</item>
        </list>
        <para>直感的かつ効率的な方法で2つの列の間で要素を転送します。</para>
        <para>
いずれかの列から1つ以上の要素を選択することができ、適切な「方向」ボタンを1回クリックすると、転送が行われます。
左の列は「ソース」と見なされ、右の列は「ターゲット」と見なされます。
APIの説明でわかるように、これらの名前はに反映されます。
</para>
      </summary>
    </member>
    <member name="T:AntDesign.Tree`1">
      <summary v="4GXmmz" i="0">
        <para>階層的なリスト構造コンポーネント。</para>
        <h2>使用するとき</h2>
        <para>
ほとんど何でもツリー構造で表すことができます。
例としては、ディレクトリ、組織階層、生物学的分類、国などがあります。
「ツリー」コンポーネントは、これらのものの間の階層関係を表す方法です。
また、「ツリー」内のツリーノードを拡大、崩壊、および選択することもできます。
</para>
      </summary>
      <seealso cref="T:AntDesign.TreeNode`1" />
    </member>
    <member name="T:AntDesign.TreeSelect`2">
      <summary v="hZF1D" i="0">
        <para>ツリー選択制御。</para>
        <h2>使用するとき</h2>
        <para>
          <c>TreeSelect</c>に似ています<c>[選択]</c>が、値はツリーのような構造で提供されます。
エントリが階層的に定義されているデータは、このコントロールを使用するのに適しています。
そのようなケースの例は、企業階層、ディレクトリ構造などを含むことができる。
</para>
      </summary>
    </member>
    <member name="T:AntDesign.TypographyBase">
      <summary v="30qA7f" i="0">
        <para>見出し、本文、リストなどを含む基本的なテキストの書き込み。</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>記事/ブログ/メモでタイトルまたは段落の内容を表示する必要がある場合。</item>
          <item>コピー可能/編集可能/省略記号のテキストが必要な場合。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.Text" />
      <seealso cref="T:AntDesign.Title" />
      <seealso cref="T:AntDesign.Paragraph" />
    </member>
    <member name="T:AntDesign.Upload">
      <summary v="3HMhF7" i="0">
        <para>選択またはドラッグしてファイルをアップロードします。</para>
        <h2>使用するとき</h2>
        <para>アップロードとは、Webページまたはアップロードツールを介して情報 (Webページ、テキスト、写真、ビデオなど) をリモートサーバーに公開するプロセスです。</para>
        <list type="bullet">
          <item>1つ以上のファイルをアップロードする必要がある場合。</item>
          <item>アップロードのプロセスを表示する必要があるとき。</item>
          <item>ドラッグ &amp; ドロップでファイルをアップロードする必要があるとき。</item>
        </list>
      </summary>
      <seealso cref="T:AntDesign.UploadInfo" />
      <seealso cref="T:AntDesign.UploadFileItem" />
    </member>
    <member name="T:AntDesign.Watermark">
      <summary v="48mt3K" i="0">
        <para>
ページに特定のテキストまたはパターンを追加します。
</para>
        <h2>使用するとき</h2>
        <list type="bullet">
          <item>著作権を識別するためにページに透かしを付ける必要がある場合に使用します。</item>
          <item>情報の盗難防止に適しています。</item>
        </list>
      </summary>
    </member>
  </members>
</doc>