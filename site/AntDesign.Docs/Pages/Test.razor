<TreeSelect TItem="Data"
            Style="width:100%;"
            DataSource="treeData"
            @bind-Value="@value"
            Placeholder="Please select"
            AllowClear
            TreeDefaultExpandAll
             ChildrenExpression="node=>node.DataItem.Children"
             TitleExpression="node=>node.DataItem.Title"
             KeyExpression="node=>node.DataItem.Key"
             IsLeafExpression="node=>node.DataItem.Children==null">
 </TreeSelect>

 <Button OnClick="@(()=> value = "0-0-1")" >0-0-1</Button>
 <Button OnClick="@(()=> value = "0-0-2")">0-0-1</Button>
 <Button OnClick="@(()=> value = "0-0")">0-0-1</Button>
 <Button OnClick="AddNode">AddNode</Button>

 @code {

    protected override async Task OnInitializedAsync()
    {

        treeData = new Data[]
        {
           new()
           {
               Title = "Node1",
               Key = "0-0",
               Children = new Data[]
       {
                           new()
                           {
                               Title = "Child Node1",
                               Key = "0-0-1",
                           },
                           new()
                           {
                               Title = "Child Node2",
                               Key = "0-0-2",
                           }
       }
           },
           new()
           {
               Title = "Node2",
               Key = "0-1",
           }
        };

        await Task.Delay(2000);

        value = "0-0";

        await base.OnInitializedAsync();
    }

    void AddNode()
    {
        treeData[1].Children = [new(){
            Title = "Child2 Node2",
            Key = "0-1-1",
        }];

        value = "0-1-1";
    }

    private string value;

    Data[] treeData;

    public class Data : ITreeData<Data>
    {
        public string Key { get; set; }
        public Data Value => this;
        public string Title { get; set; }
        public IEnumerable<Data> Children { get; set; }
    }


}