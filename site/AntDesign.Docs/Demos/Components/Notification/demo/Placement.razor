@inject INotificationService _notice

<Space>
    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="@OnTopClick">
            <Icon Type="border-top" Theme="Outline"/>
            Top
        </Button>
    </SpaceItem>
    
    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="@OnBottomClick">
            <Icon Type="border-bottom" Theme="Outline"/>
            Bottom
        </Button>
    </SpaceItem>
</Space>
<Divider />

<Space>
    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="@OnTopLeftClick">
            <Icon Type="radius-upleft" Theme="outline" />
            TopLeft
        </Button>
    </SpaceItem>

    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="@OnTopRightClick">
            <Icon Type="radius-upright" Theme="outline" />
            TopRight
        </Button>
    </SpaceItem>
</Space>
<Divider />


<Space>
    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="@OnBottomLeftClick">
            <Icon Type="radius-bottomleft" Theme="outline" />
            BottomLeft
        </Button>
    </SpaceItem>

    <SpaceItem>
        <Button Type="@ButtonType.Primary" OnClick="@OnBottomRightClick">
            <Icon Type="radius-bottomright" Theme="outline" />
            BottomRight
        </Button>
    </SpaceItem>
</Space>


@code {
    private async Task OpenWithPlacement(NotificationPlacement placement)
    {
        var config = new NotificationConfig()
            {
                Message = $"Notification {placement} {DateTime.Now :O}",
                Description = "This is the content of the notification. This is the content of the notification. This is the content of the notification.",
                Placement = placement
            };
#if DEBUG
        config.Duration = 0;
#endif

        await _notice.Open(config);
    }

    private async Task OnTopLeftClick()
    {
        await OpenWithPlacement(NotificationPlacement.TopLeft);
    }

    private async Task OnTopRightClick()
    {
        await OpenWithPlacement(NotificationPlacement.TopRight);
    }

    private async Task OnBottomLeftClick()
    {
        await OpenWithPlacement(NotificationPlacement.BottomLeft);
    }

    private async Task OnBottomRightClick()
    {
        await OpenWithPlacement(NotificationPlacement.BottomRight);
    }

    private async Task OnBottomClick()
    {
        await OpenWithPlacement(NotificationPlacement.Bottom);
    }

    private async Task OnTopClick()
    {
        await OpenWithPlacement(NotificationPlacement.Top);
    }
}
