@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;
@using System.ComponentModel
@using System.Reflection

<Form Model="@model">
    <GenerateFormItem TItem="Model" Model="@model" Definitions="Definitions" NotGenerate="NotGenerate"/>
    <FormItem Label="ListTestOutOfGenerate">
        <Select @bind-Values="@context.I" Style="width: 120px;" TItemValue="string" TItem="string">
            <SelectOptions>
                <SelectOption Value="@("lucy")" Label="Lucy"/>
            </SelectOptions>
        </Select>
    </FormItem>
</Form>

@code
{
    public class Model
    {
        [DisplayName("StringTest")]
        [Required]
        public string A { get; set; }

        [DisplayName("StringTest nullable")]
        public string? B { get; set; }

        [DisplayName("DateTimeTest")]
        [Required]
        public DateTime C { get; set; }

        [DisplayName("DateTimeTestNullable")]
        public DateTime? D { get; set; }

        [DisplayName("NumericTest")]
        [Required]
        public decimal E { get; set; }

        [DisplayName("NumericTestNullable")]
        public decimal? F { get; set; }

        [DisplayName("EnumTest")]
        [Required]
        public TestEnum G { get; set; }

        [DisplayName("EnumTestNullable")]
        public TestEnum? H { get; set; }

        [DisplayName("ListTestOutOfGenerate")]
        [Required]
        public IEnumerable<string> I { get; set; }

        [DisplayName("DefinitionsTest")]
        public string J { get; set; }
    }

    public enum TestEnum
    {
        A,
        B,
        C
    }

    private Model model = new Model();

    public RenderFragment? Definitions(PropertyInfo propertyInfo, Model model)
    {
        if (propertyInfo.Name != "J") return null;
        if (propertyInfo.Name == "Test")
        {
            return @<Select @bind-Value="model.J" Style="width: 120px;" TItemValue="string" TItem="string">
                <SelectOptions>
                    <SelectOption Value="@("lucy")" Label="Lucy"/>
                </SelectOptions>
            </Select>;
        }

        return null;
    }

    public bool NotGenerate(PropertyInfo propertyInfo, Model model)
    {
        if (propertyInfo.Name == "I") return true;
        return false;
    }
}